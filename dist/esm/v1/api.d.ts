/**
 * MIT Open API
 * MIT public API
 *
 * The version of the OpenAPI document: 0.0.1 (v1)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 * Serializer for LearningResourceInstructor model
 * @export
 * @interface Article
 */
export interface Article {
    /**
     *
     * @type {string}
     * @memberof Article
     */
    'html': string;
    /**
     *
     * @type {number}
     * @memberof Article
     */
    'id': number;
    /**
     *
     * @type {string}
     * @memberof Article
     */
    'title': string;
}
/**
 * Serializer for LearningResourceInstructor model
 * @export
 * @interface ArticleRequest
 */
export interface ArticleRequest {
    /**
     *
     * @type {string}
     * @memberof ArticleRequest
     */
    'html': string;
    /**
     *
     * @type {string}
     * @memberof ArticleRequest
     */
    'title': string;
}
/**
 * Serializer class for course run ContentFiles
 * @export
 * @interface ContentFile
 */
export interface ContentFile {
    /**
     *
     * @type {number}
     * @memberof ContentFile
     */
    'id': number;
    /**
     *
     * @type {number}
     * @memberof ContentFile
     */
    'run_id': number;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'run_title': string;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'run_slug': string;
    /**
     *
     * @type {Array<LearningResourceDepartment>}
     * @memberof ContentFile
     */
    'departments': Array<LearningResourceDepartment>;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'semester': string;
    /**
     *
     * @type {number}
     * @memberof ContentFile
     */
    'year': number;
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof ContentFile
     */
    'topics': Array<LearningResourceTopic>;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'key'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'uid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'title'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'url'?: string | null;
    /**
     *
     * @type {Array<string>}
     * @memberof ContentFile
     */
    'content_feature_type': Array<string>;
    /**
     *
     * @type {ContentTypeEnum}
     * @memberof ContentFile
     */
    'content_type'?: ContentTypeEnum;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'content'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'content_title'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'content_author'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'content_language'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'image_src'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'resource_id': string;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'resource_readable_id': string;
    /**
     * Extract the course number(s) from the associated course
     * @type {Array<string>}
     * @memberof ContentFile
     */
    'course_number': Array<string>;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'file_type'?: string | null;
    /**
     *
     * @type {LearningResourceOfferor}
     * @memberof ContentFile
     */
    'offered_by': LearningResourceOfferor;
    /**
     *
     * @type {LearningResourcePlatform}
     * @memberof ContentFile
     */
    'platform': LearningResourcePlatform;
    /**
     *
     * @type {string}
     * @memberof ContentFile
     */
    'run_readable_id': string;
}
/**
 * SearchResponseSerializer with OpenAPI annotations for Content Files search
 * @export
 * @interface ContentFileeSearchResponse
 */
export interface ContentFileeSearchResponse {
    /**
     *
     * @type {number}
     * @memberof ContentFileeSearchResponse
     */
    'count': number;
    /**
     *
     * @type {string}
     * @memberof ContentFileeSearchResponse
     */
    'next': string | null;
    /**
     *
     * @type {string}
     * @memberof ContentFileeSearchResponse
     */
    'previous': string | null;
    /**
     *
     * @type {Array<ContentFile>}
     * @memberof ContentFileeSearchResponse
     */
    'results': Array<ContentFile>;
    /**
     *
     * @type {ContentFileeSearchResponseMetadata}
     * @memberof ContentFileeSearchResponse
     */
    'metadata': ContentFileeSearchResponseMetadata;
}
/**
 *
 * @export
 * @interface ContentFileeSearchResponseMetadata
 */
export interface ContentFileeSearchResponseMetadata {
    /**
     *
     * @type {{ [key: string]: Array<ContentFileeSearchResponseMetadataAggregationsValueInner>; }}
     * @memberof ContentFileeSearchResponseMetadata
     */
    'aggregations': {
        [key: string]: Array<ContentFileeSearchResponseMetadataAggregationsValueInner>;
    };
    /**
     *
     * @type {Array<string>}
     * @memberof ContentFileeSearchResponseMetadata
     */
    'suggestions': Array<string>;
}
/**
 *
 * @export
 * @interface ContentFileeSearchResponseMetadataAggregationsValueInner
 */
export interface ContentFileeSearchResponseMetadataAggregationsValueInner {
    /**
     *
     * @type {string}
     * @memberof ContentFileeSearchResponseMetadataAggregationsValueInner
     */
    'key': string;
    /**
     *
     * @type {number}
     * @memberof ContentFileeSearchResponseMetadataAggregationsValueInner
     */
    'doc_count': number;
}
/**
 * * `page` - page * `file` - file * `vertical` - vertical
 * @export
 * @enum {string}
 */
export declare const ContentTypeEnum: {
    readonly Page: "page";
    readonly File: "file";
    readonly Vertical: "vertical";
};
export type ContentTypeEnum = typeof ContentTypeEnum[keyof typeof ContentTypeEnum];
/**
 * Serializer for the Course model
 * @export
 * @interface Course
 */
export interface Course {
    /**
     *
     * @type {Array<CourseNumber>}
     * @memberof Course
     */
    'course_numbers': Array<CourseNumber> | null;
}
/**
 * Serializer for CourseNumber
 * @export
 * @interface CourseNumber
 */
export interface CourseNumber {
    /**
     *
     * @type {string}
     * @memberof CourseNumber
     */
    'value': string;
    /**
     *
     * @type {LearningResourceDepartment}
     * @memberof CourseNumber
     */
    'department': LearningResourceDepartment;
    /**
     *
     * @type {string}
     * @memberof CourseNumber
     */
    'listing_type': string;
}
/**
 * Serializer for CourseNumber
 * @export
 * @interface CourseNumberRequest
 */
export interface CourseNumberRequest {
    /**
     *
     * @type {string}
     * @memberof CourseNumberRequest
     */
    'value': string;
    /**
     *
     * @type {LearningResourceDepartmentRequest}
     * @memberof CourseNumberRequest
     */
    'department': LearningResourceDepartmentRequest;
    /**
     *
     * @type {string}
     * @memberof CourseNumberRequest
     */
    'listing_type': string;
}
/**
 * Serializer for the Course model
 * @export
 * @interface CourseRequest
 */
export interface CourseRequest {
    /**
     *
     * @type {Array<CourseNumberRequest>}
     * @memberof CourseRequest
     */
    'course_numbers': Array<CourseNumberRequest> | null;
}
/**
 * Serializer for course resources
 * @export
 * @interface CourseResource
 */
export interface CourseResource {
    /**
     *
     * @type {number}
     * @memberof CourseResource
     */
    'id': number;
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof CourseResource
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {LearningResourceOfferor}
     * @memberof CourseResource
     */
    'offered_by': LearningResourceOfferor | null;
    /**
     *
     * @type {LearningResourcePlatform}
     * @memberof CourseResource
     */
    'platform': LearningResourcePlatform | null;
    /**
     *
     * @type {Array<string>}
     * @memberof CourseResource
     */
    'course_feature': Array<string> | null;
    /**
     *
     * @type {Array<LearningResourceDepartment>}
     * @memberof CourseResource
     */
    'departments': Array<LearningResourceDepartment> | null;
    /**
     * Returns the certification for the learning resource
     * @type {boolean}
     * @memberof CourseResource
     */
    'certification': boolean;
    /**
     * Returns the prices for the learning resource
     * @type {string}
     * @memberof CourseResource
     */
    'prices': string | null;
    /**
     *
     * @type {Array<LearningResourceRun>}
     * @memberof CourseResource
     */
    'runs': Array<LearningResourceRun> | null;
    /**
     *
     * @type {LearningResourceImage}
     * @memberof CourseResource
     */
    'image': LearningResourceImage | null;
    /**
     *
     * @type {Array<MicroLearningPathRelationship>}
     * @memberof CourseResource
     */
    'learning_path_parents': Array<MicroLearningPathRelationship> | null;
    /**
     *
     * @type {Array<MicroUserListRelationship>}
     * @memberof CourseResource
     */
    'user_list_parents': Array<MicroUserListRelationship> | null;
    /**
     *
     * @type {CourseResourceResourceTypeEnum}
     * @memberof CourseResource
     */
    'resource_type': CourseResourceResourceTypeEnum;
    /**
     *
     * @type {Course}
     * @memberof CourseResource
     */
    'course': Course;
    /**
     *
     * @type {string}
     * @memberof CourseResource
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof CourseResource
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof CourseResource
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CourseResource
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CourseResource
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof CourseResource
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof CourseResource
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof CourseResource
     */
    'url'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof CourseResource
     */
    'professional': boolean;
}
/**
 * Serializer for course resources
 * @export
 * @interface CourseResourceRequest
 */
export interface CourseResourceRequest {
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof CourseResourceRequest
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {string}
     * @memberof CourseResourceRequest
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof CourseResourceRequest
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof CourseResourceRequest
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CourseResourceRequest
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof CourseResourceRequest
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof CourseResourceRequest
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof CourseResourceRequest
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof CourseResourceRequest
     */
    'url'?: string | null;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const CourseResourceResourceTypeEnum: {
    readonly Course: "course";
};
export type CourseResourceResourceTypeEnum = typeof CourseResourceResourceTypeEnum[keyof typeof CourseResourceResourceTypeEnum];
/**
 * Serializer for the LearningPath model
 * @export
 * @interface LearningPath
 */
export interface LearningPath {
    /**
     *
     * @type {number}
     * @memberof LearningPath
     */
    'id': number;
    /**
     * Return the number of items in the list
     * @type {number}
     * @memberof LearningPath
     */
    'item_count': number;
}
/**
 * Specialized serializer for a LearningPath relationship
 * @export
 * @interface LearningPathRelationship
 */
export interface LearningPathRelationship {
    /**
     *
     * @type {number}
     * @memberof LearningPathRelationship
     */
    'id': number;
    /**
     *
     * @type {LearningResource}
     * @memberof LearningPathRelationship
     */
    'resource': LearningResource;
    /**
     *
     * @type {number}
     * @memberof LearningPathRelationship
     */
    'position'?: number;
    /**
     *
     * @type {number}
     * @memberof LearningPathRelationship
     */
    'parent': number;
    /**
     *
     * @type {number}
     * @memberof LearningPathRelationship
     */
    'child': number;
}
/**
 * Specialized serializer for a LearningPath relationship
 * @export
 * @interface LearningPathRelationshipRequest
 */
export interface LearningPathRelationshipRequest {
    /**
     *
     * @type {number}
     * @memberof LearningPathRelationshipRequest
     */
    'position'?: number;
    /**
     *
     * @type {number}
     * @memberof LearningPathRelationshipRequest
     */
    'parent': number;
    /**
     *
     * @type {number}
     * @memberof LearningPathRelationshipRequest
     */
    'child': number;
}
/**
 * CRUD serializer for LearningPath resources
 * @export
 * @interface LearningPathResource
 */
export interface LearningPathResource {
    /**
     *
     * @type {number}
     * @memberof LearningPathResource
     */
    'id': number;
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof LearningPathResource
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {LearningResourceOfferor}
     * @memberof LearningPathResource
     */
    'offered_by': LearningResourceOfferor | null;
    /**
     *
     * @type {LearningResourcePlatform}
     * @memberof LearningPathResource
     */
    'platform': LearningResourcePlatform | null;
    /**
     *
     * @type {Array<string>}
     * @memberof LearningPathResource
     */
    'course_feature': Array<string> | null;
    /**
     *
     * @type {Array<LearningResourceDepartment>}
     * @memberof LearningPathResource
     */
    'departments': Array<LearningResourceDepartment> | null;
    /**
     * Returns the certification for the learning resource
     * @type {boolean}
     * @memberof LearningPathResource
     */
    'certification': boolean;
    /**
     * Returns the prices for the learning resource
     * @type {string}
     * @memberof LearningPathResource
     */
    'prices': string | null;
    /**
     *
     * @type {Array<LearningResourceRun>}
     * @memberof LearningPathResource
     */
    'runs': Array<LearningResourceRun> | null;
    /**
     *
     * @type {LearningResourceImage}
     * @memberof LearningPathResource
     */
    'image': LearningResourceImage | null;
    /**
     *
     * @type {Array<MicroLearningPathRelationship>}
     * @memberof LearningPathResource
     */
    'learning_path_parents': Array<MicroLearningPathRelationship> | null;
    /**
     *
     * @type {Array<MicroUserListRelationship>}
     * @memberof LearningPathResource
     */
    'user_list_parents': Array<MicroUserListRelationship> | null;
    /**
     *
     * @type {LearningPathResourceResourceTypeEnum}
     * @memberof LearningPathResource
     */
    'resource_type': LearningPathResourceResourceTypeEnum;
    /**
     *
     * @type {LearningPath}
     * @memberof LearningPathResource
     */
    'learning_path': LearningPath;
    /**
     *
     * @type {string}
     * @memberof LearningPathResource
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof LearningPathResource
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof LearningPathResource
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningPathResource
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningPathResource
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof LearningPathResource
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof LearningPathResource
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof LearningPathResource
     */
    'url'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof LearningPathResource
     */
    'professional'?: boolean;
}
/**
 * CRUD serializer for LearningPath resources
 * @export
 * @interface LearningPathResourceRequest
 */
export interface LearningPathResourceRequest {
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof LearningPathResourceRequest
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {string}
     * @memberof LearningPathResourceRequest
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof LearningPathResourceRequest
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningPathResourceRequest
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningPathResourceRequest
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof LearningPathResourceRequest
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof LearningPathResourceRequest
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof LearningPathResourceRequest
     */
    'url'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof LearningPathResourceRequest
     */
    'professional'?: boolean;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const LearningPathResourceResourceTypeEnum: {
    readonly LearningPath: "learning_path";
};
export type LearningPathResourceResourceTypeEnum = typeof LearningPathResourceResourceTypeEnum[keyof typeof LearningPathResourceResourceTypeEnum];
/**
 * @type LearningResource
 * @export
 */
export type LearningResource = {
    resource_type: 'course';
} & CourseResource | {
    resource_type: 'learning_path';
} & LearningPathResource | {
    resource_type: 'podcast';
} & PodcastResource | {
    resource_type: 'podcast_episode';
} & PodcastEpisodeResource | {
    resource_type: 'program';
} & ProgramResource | {
    resource_type: 'video';
} & VideoResource | {
    resource_type: 'video_playlist';
} & VideoPlaylistResource;
/**
 * Serializer for LearningResourceContentTag
 * @export
 * @interface LearningResourceContentTag
 */
export interface LearningResourceContentTag {
    /**
     *
     * @type {number}
     * @memberof LearningResourceContentTag
     */
    'id': number;
    /**
     *
     * @type {string}
     * @memberof LearningResourceContentTag
     */
    'name': string;
}
/**
 * Serializer for LearningResourceDepartment
 * @export
 * @interface LearningResourceDepartment
 */
export interface LearningResourceDepartment {
    /**
     *
     * @type {string}
     * @memberof LearningResourceDepartment
     */
    'department_id': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourceDepartment
     */
    'name': string;
}
/**
 * Serializer for LearningResourceDepartment
 * @export
 * @interface LearningResourceDepartmentRequest
 */
export interface LearningResourceDepartmentRequest {
    /**
     *
     * @type {string}
     * @memberof LearningResourceDepartmentRequest
     */
    'department_id': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourceDepartmentRequest
     */
    'name': string;
}
/**
 * Serializer for LearningResourceImage
 * @export
 * @interface LearningResourceImage
 */
export interface LearningResourceImage {
    /**
     *
     * @type {number}
     * @memberof LearningResourceImage
     */
    'id': number;
    /**
     *
     * @type {string}
     * @memberof LearningResourceImage
     */
    'url': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourceImage
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceImage
     */
    'alt'?: string | null;
}
/**
 * Serializer for LearningResourceImage
 * @export
 * @interface LearningResourceImageRequest
 */
export interface LearningResourceImageRequest {
    /**
     *
     * @type {string}
     * @memberof LearningResourceImageRequest
     */
    'url': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourceImageRequest
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceImageRequest
     */
    'alt'?: string | null;
}
/**
 * Serializer for LearningResourceInstructor model
 * @export
 * @interface LearningResourceInstructor
 */
export interface LearningResourceInstructor {
    /**
     *
     * @type {number}
     * @memberof LearningResourceInstructor
     */
    'id': number;
    /**
     *
     * @type {string}
     * @memberof LearningResourceInstructor
     */
    'first_name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceInstructor
     */
    'last_name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceInstructor
     */
    'full_name'?: string | null;
}
/**
 * Serializer for LearningResourceInstructor model
 * @export
 * @interface LearningResourceInstructorRequest
 */
export interface LearningResourceInstructorRequest {
    /**
     *
     * @type {string}
     * @memberof LearningResourceInstructorRequest
     */
    'first_name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceInstructorRequest
     */
    'last_name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceInstructorRequest
     */
    'full_name'?: string | null;
}
/**
 * Serializer for LearningResourceOfferor
 * @export
 * @interface LearningResourceOfferor
 */
export interface LearningResourceOfferor {
    /**
     *
     * @type {string}
     * @memberof LearningResourceOfferor
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourceOfferor
     */
    'name': string;
}
/**
 * Serializer for LearningResourceOfferor
 * @export
 * @interface LearningResourceOfferorRequest
 */
export interface LearningResourceOfferorRequest {
    /**
     *
     * @type {string}
     * @memberof LearningResourceOfferorRequest
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourceOfferorRequest
     */
    'name': string;
}
/**
 * Serializer for LearningResourcePlatform
 * @export
 * @interface LearningResourcePlatform
 */
export interface LearningResourcePlatform {
    /**
     *
     * @type {string}
     * @memberof LearningResourcePlatform
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourcePlatform
     */
    'name'?: string;
}
/**
 * Serializer for LearningResourcePlatform
 * @export
 * @interface LearningResourcePlatformRequest
 */
export interface LearningResourcePlatformRequest {
    /**
     *
     * @type {string}
     * @memberof LearningResourcePlatformRequest
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourcePlatformRequest
     */
    'name'?: string;
}
/**
 * CRUD serializer for LearningResourceRelationship
 * @export
 * @interface LearningResourceRelationship
 */
export interface LearningResourceRelationship {
    /**
     *
     * @type {number}
     * @memberof LearningResourceRelationship
     */
    'id': number;
    /**
     *
     * @type {LearningResource}
     * @memberof LearningResourceRelationship
     */
    'resource': LearningResource;
    /**
     *
     * @type {number}
     * @memberof LearningResourceRelationship
     */
    'position'?: number;
    /**
     *
     * @type {RelationTypeEnum}
     * @memberof LearningResourceRelationship
     */
    'relation_type'?: RelationTypeEnum;
    /**
     *
     * @type {number}
     * @memberof LearningResourceRelationship
     */
    'parent': number;
    /**
     *
     * @type {number}
     * @memberof LearningResourceRelationship
     */
    'child': number;
}
/**
 * @type LearningResourceRequest
 * @export
 */
export type LearningResourceRequest = {
    resource_type: 'course';
} & CourseResourceRequest | {
    resource_type: 'learning_path';
} & LearningPathResourceRequest | {
    resource_type: 'podcast';
} & PodcastResourceRequest | {
    resource_type: 'podcast_episode';
} & PodcastEpisodeResourceRequest | {
    resource_type: 'program';
} & ProgramResourceRequest | {
    resource_type: 'video';
} & VideoResourceRequest | {
    resource_type: 'video_playlist';
} & VideoPlaylistResourceRequest;
/**
 * Serializer for the LearningResourceRun model
 * @export
 * @interface LearningResourceRun
 */
export interface LearningResourceRun {
    /**
     *
     * @type {number}
     * @memberof LearningResourceRun
     */
    'id': number;
    /**
     *
     * @type {Array<LearningResourceInstructor>}
     * @memberof LearningResourceRun
     */
    'instructors': Array<LearningResourceInstructor> | null;
    /**
     *
     * @type {LearningResourceImage}
     * @memberof LearningResourceRun
     */
    'image': LearningResourceImage | null;
    /**
     *
     * @type {Array<LearningResourceRunLevelInner>}
     * @memberof LearningResourceRun
     */
    'level': Array<LearningResourceRunLevelInner>;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'run_id': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof LearningResourceRun
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof LearningResourceRun
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'url'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'slug'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'availability'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'semester'?: string | null;
    /**
     *
     * @type {number}
     * @memberof LearningResourceRun
     */
    'year'?: number | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'start_date'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'end_date'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'enrollment_start'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'enrollment_end'?: string | null;
    /**
     *
     * @type {Array<string>}
     * @memberof LearningResourceRun
     */
    'prices'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRun
     */
    'checksum'?: string | null;
}
/**
 *
 * @export
 * @interface LearningResourceRunLevelInner
 */
export interface LearningResourceRunLevelInner {
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunLevelInner
     */
    'code': LearningResourceRunLevelInnerCodeEnum;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunLevelInner
     */
    'name': string;
}
export declare const LearningResourceRunLevelInnerCodeEnum: {
    readonly Undergraduate: "undergraduate";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Noncredit: "noncredit";
    readonly Advanced: "advanced";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
};
export type LearningResourceRunLevelInnerCodeEnum = typeof LearningResourceRunLevelInnerCodeEnum[keyof typeof LearningResourceRunLevelInnerCodeEnum];
/**
 * Serializer for the LearningResourceRun model
 * @export
 * @interface LearningResourceRunRequest
 */
export interface LearningResourceRunRequest {
    /**
     *
     * @type {Array<LearningResourceRunLevelInner>}
     * @memberof LearningResourceRunRequest
     */
    'level': Array<LearningResourceRunLevelInner>;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'run_id': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof LearningResourceRunRequest
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof LearningResourceRunRequest
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'url'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'slug'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'availability'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'semester'?: string | null;
    /**
     *
     * @type {number}
     * @memberof LearningResourceRunRequest
     */
    'year'?: number | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'start_date'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'end_date'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'enrollment_start'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'enrollment_end'?: string | null;
    /**
     *
     * @type {Array<string>}
     * @memberof LearningResourceRunRequest
     */
    'prices'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceRunRequest
     */
    'checksum'?: string | null;
}
/**
 * SearchResponseSerializer with OpenAPI annotations for Learning Resources search
 * @export
 * @interface LearningResourceSearchResponse
 */
export interface LearningResourceSearchResponse {
    /**
     *
     * @type {number}
     * @memberof LearningResourceSearchResponse
     */
    'count': number;
    /**
     *
     * @type {string}
     * @memberof LearningResourceSearchResponse
     */
    'next': string | null;
    /**
     *
     * @type {string}
     * @memberof LearningResourceSearchResponse
     */
    'previous': string | null;
    /**
     *
     * @type {Array<LearningResource>}
     * @memberof LearningResourceSearchResponse
     */
    'results': Array<LearningResource>;
    /**
     *
     * @type {ContentFileeSearchResponseMetadata}
     * @memberof LearningResourceSearchResponse
     */
    'metadata': ContentFileeSearchResponseMetadata;
}
/**
 * Serializer for LearningResourceTopic model
 * @export
 * @interface LearningResourceTopic
 */
export interface LearningResourceTopic {
    /**
     *
     * @type {number}
     * @memberof LearningResourceTopic
     */
    'id': number;
    /**
     *
     * @type {string}
     * @memberof LearningResourceTopic
     */
    'name': string;
}
/**
 * Serializer containing only parent and child ids for a learning path relationship
 * @export
 * @interface MicroLearningPathRelationship
 */
export interface MicroLearningPathRelationship {
    /**
     *
     * @type {number}
     * @memberof MicroLearningPathRelationship
     */
    'id': number;
    /**
     * The id of the parent learning resource
     * @type {number}
     * @memberof MicroLearningPathRelationship
     */
    'parent': number;
    /**
     *
     * @type {number}
     * @memberof MicroLearningPathRelationship
     */
    'child': number;
}
/**
 * Serializer containing only parent and child ids for a user list relationship
 * @export
 * @interface MicroUserListRelationship
 */
export interface MicroUserListRelationship {
    /**
     *
     * @type {number}
     * @memberof MicroUserListRelationship
     */
    'id': number;
    /**
     * The id of the parent learning resource
     * @type {number}
     * @memberof MicroUserListRelationship
     */
    'parent': number;
    /**
     *
     * @type {number}
     * @memberof MicroUserListRelationship
     */
    'child': number;
}
/**
 *
 * @export
 * @interface PaginatedArticleList
 */
export interface PaginatedArticleList {
    /**
     *
     * @type {number}
     * @memberof PaginatedArticleList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedArticleList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedArticleList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<Article>}
     * @memberof PaginatedArticleList
     */
    'results'?: Array<Article>;
}
/**
 *
 * @export
 * @interface PaginatedContentFileList
 */
export interface PaginatedContentFileList {
    /**
     *
     * @type {number}
     * @memberof PaginatedContentFileList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedContentFileList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedContentFileList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<ContentFile>}
     * @memberof PaginatedContentFileList
     */
    'results'?: Array<ContentFile>;
}
/**
 *
 * @export
 * @interface PaginatedCourseResourceList
 */
export interface PaginatedCourseResourceList {
    /**
     *
     * @type {number}
     * @memberof PaginatedCourseResourceList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedCourseResourceList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedCourseResourceList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<CourseResource>}
     * @memberof PaginatedCourseResourceList
     */
    'results'?: Array<CourseResource>;
}
/**
 *
 * @export
 * @interface PaginatedLearningPathRelationshipList
 */
export interface PaginatedLearningPathRelationshipList {
    /**
     *
     * @type {number}
     * @memberof PaginatedLearningPathRelationshipList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningPathRelationshipList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningPathRelationshipList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<LearningPathRelationship>}
     * @memberof PaginatedLearningPathRelationshipList
     */
    'results'?: Array<LearningPathRelationship>;
}
/**
 *
 * @export
 * @interface PaginatedLearningPathResourceList
 */
export interface PaginatedLearningPathResourceList {
    /**
     *
     * @type {number}
     * @memberof PaginatedLearningPathResourceList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningPathResourceList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningPathResourceList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<LearningPathResource>}
     * @memberof PaginatedLearningPathResourceList
     */
    'results'?: Array<LearningPathResource>;
}
/**
 *
 * @export
 * @interface PaginatedLearningResourceContentTagList
 */
export interface PaginatedLearningResourceContentTagList {
    /**
     *
     * @type {number}
     * @memberof PaginatedLearningResourceContentTagList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceContentTagList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceContentTagList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<LearningResourceContentTag>}
     * @memberof PaginatedLearningResourceContentTagList
     */
    'results'?: Array<LearningResourceContentTag>;
}
/**
 *
 * @export
 * @interface PaginatedLearningResourceDepartmentList
 */
export interface PaginatedLearningResourceDepartmentList {
    /**
     *
     * @type {number}
     * @memberof PaginatedLearningResourceDepartmentList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceDepartmentList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceDepartmentList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<LearningResourceDepartment>}
     * @memberof PaginatedLearningResourceDepartmentList
     */
    'results'?: Array<LearningResourceDepartment>;
}
/**
 *
 * @export
 * @interface PaginatedLearningResourceList
 */
export interface PaginatedLearningResourceList {
    /**
     *
     * @type {number}
     * @memberof PaginatedLearningResourceList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<LearningResource>}
     * @memberof PaginatedLearningResourceList
     */
    'results'?: Array<LearningResource>;
}
/**
 *
 * @export
 * @interface PaginatedLearningResourceOfferorList
 */
export interface PaginatedLearningResourceOfferorList {
    /**
     *
     * @type {number}
     * @memberof PaginatedLearningResourceOfferorList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceOfferorList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceOfferorList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<LearningResourceOfferor>}
     * @memberof PaginatedLearningResourceOfferorList
     */
    'results'?: Array<LearningResourceOfferor>;
}
/**
 *
 * @export
 * @interface PaginatedLearningResourcePlatformList
 */
export interface PaginatedLearningResourcePlatformList {
    /**
     *
     * @type {number}
     * @memberof PaginatedLearningResourcePlatformList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourcePlatformList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourcePlatformList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<LearningResourcePlatform>}
     * @memberof PaginatedLearningResourcePlatformList
     */
    'results'?: Array<LearningResourcePlatform>;
}
/**
 *
 * @export
 * @interface PaginatedLearningResourceRelationshipList
 */
export interface PaginatedLearningResourceRelationshipList {
    /**
     *
     * @type {number}
     * @memberof PaginatedLearningResourceRelationshipList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceRelationshipList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceRelationshipList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<LearningResourceRelationship>}
     * @memberof PaginatedLearningResourceRelationshipList
     */
    'results'?: Array<LearningResourceRelationship>;
}
/**
 *
 * @export
 * @interface PaginatedLearningResourceTopicList
 */
export interface PaginatedLearningResourceTopicList {
    /**
     *
     * @type {number}
     * @memberof PaginatedLearningResourceTopicList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceTopicList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedLearningResourceTopicList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof PaginatedLearningResourceTopicList
     */
    'results'?: Array<LearningResourceTopic>;
}
/**
 *
 * @export
 * @interface PaginatedPodcastEpisodeResourceList
 */
export interface PaginatedPodcastEpisodeResourceList {
    /**
     *
     * @type {number}
     * @memberof PaginatedPodcastEpisodeResourceList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedPodcastEpisodeResourceList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedPodcastEpisodeResourceList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<PodcastEpisodeResource>}
     * @memberof PaginatedPodcastEpisodeResourceList
     */
    'results'?: Array<PodcastEpisodeResource>;
}
/**
 *
 * @export
 * @interface PaginatedPodcastResourceList
 */
export interface PaginatedPodcastResourceList {
    /**
     *
     * @type {number}
     * @memberof PaginatedPodcastResourceList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedPodcastResourceList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedPodcastResourceList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<PodcastResource>}
     * @memberof PaginatedPodcastResourceList
     */
    'results'?: Array<PodcastResource>;
}
/**
 *
 * @export
 * @interface PaginatedProgramResourceList
 */
export interface PaginatedProgramResourceList {
    /**
     *
     * @type {number}
     * @memberof PaginatedProgramResourceList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedProgramResourceList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedProgramResourceList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<ProgramResource>}
     * @memberof PaginatedProgramResourceList
     */
    'results'?: Array<ProgramResource>;
}
/**
 *
 * @export
 * @interface PaginatedUserListList
 */
export interface PaginatedUserListList {
    /**
     *
     * @type {number}
     * @memberof PaginatedUserListList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedUserListList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedUserListList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<UserList>}
     * @memberof PaginatedUserListList
     */
    'results'?: Array<UserList>;
}
/**
 *
 * @export
 * @interface PaginatedUserListRelationshipList
 */
export interface PaginatedUserListRelationshipList {
    /**
     *
     * @type {number}
     * @memberof PaginatedUserListRelationshipList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedUserListRelationshipList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedUserListRelationshipList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<UserListRelationship>}
     * @memberof PaginatedUserListRelationshipList
     */
    'results'?: Array<UserListRelationship>;
}
/**
 *
 * @export
 * @interface PaginatedVideoPlaylistResourceList
 */
export interface PaginatedVideoPlaylistResourceList {
    /**
     *
     * @type {number}
     * @memberof PaginatedVideoPlaylistResourceList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedVideoPlaylistResourceList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedVideoPlaylistResourceList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<VideoPlaylistResource>}
     * @memberof PaginatedVideoPlaylistResourceList
     */
    'results'?: Array<VideoPlaylistResource>;
}
/**
 *
 * @export
 * @interface PaginatedVideoResourceList
 */
export interface PaginatedVideoResourceList {
    /**
     *
     * @type {number}
     * @memberof PaginatedVideoResourceList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedVideoResourceList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedVideoResourceList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<VideoResource>}
     * @memberof PaginatedVideoResourceList
     */
    'results'?: Array<VideoResource>;
}
/**
 * Serializer for LearningResourceInstructor model
 * @export
 * @interface PatchedArticleRequest
 */
export interface PatchedArticleRequest {
    /**
     *
     * @type {string}
     * @memberof PatchedArticleRequest
     */
    'html'?: string;
    /**
     *
     * @type {string}
     * @memberof PatchedArticleRequest
     */
    'title'?: string;
}
/**
 * Specialized serializer for a LearningPath relationship
 * @export
 * @interface PatchedLearningPathRelationshipRequest
 */
export interface PatchedLearningPathRelationshipRequest {
    /**
     *
     * @type {number}
     * @memberof PatchedLearningPathRelationshipRequest
     */
    'position'?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedLearningPathRelationshipRequest
     */
    'parent'?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedLearningPathRelationshipRequest
     */
    'child'?: number;
}
/**
 * CRUD serializer for LearningPath resources
 * @export
 * @interface PatchedLearningPathResourceRequest
 */
export interface PatchedLearningPathResourceRequest {
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof PatchedLearningPathResourceRequest
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {string}
     * @memberof PatchedLearningPathResourceRequest
     */
    'title'?: string;
    /**
     *
     * @type {string}
     * @memberof PatchedLearningPathResourceRequest
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PatchedLearningPathResourceRequest
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PatchedLearningPathResourceRequest
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof PatchedLearningPathResourceRequest
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof PatchedLearningPathResourceRequest
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof PatchedLearningPathResourceRequest
     */
    'url'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof PatchedLearningPathResourceRequest
     */
    'professional'?: boolean;
}
/**
 * Serializer for UserListRelationship model
 * @export
 * @interface PatchedUserListRelationshipRequest
 */
export interface PatchedUserListRelationshipRequest {
    /**
     *
     * @type {number}
     * @memberof PatchedUserListRelationshipRequest
     */
    'position'?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedUserListRelationshipRequest
     */
    'parent'?: number;
    /**
     *
     * @type {number}
     * @memberof PatchedUserListRelationshipRequest
     */
    'child'?: number;
}
/**
 * Simplified serializer for UserList model.
 * @export
 * @interface PatchedUserListRequest
 */
export interface PatchedUserListRequest {
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof PatchedUserListRequest
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {string}
     * @memberof PatchedUserListRequest
     */
    'title'?: string;
    /**
     *
     * @type {string}
     * @memberof PatchedUserListRequest
     */
    'description'?: string;
    /**
     *
     * @type {PrivacyLevelEnum}
     * @memberof PatchedUserListRequest
     */
    'privacy_level'?: PrivacyLevelEnum;
}
/**
 * Serializer for Podcasts
 * @export
 * @interface Podcast
 */
export interface Podcast {
    /**
     *
     * @type {number}
     * @memberof Podcast
     */
    'id': number;
    /**
     * Return the number of episodes in the podcast
     * @type {number}
     * @memberof Podcast
     */
    'episode_count': number;
    /**
     *
     * @type {string}
     * @memberof Podcast
     */
    'apple_podcasts_url'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Podcast
     */
    'google_podcasts_url'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Podcast
     */
    'rss_url'?: string | null;
}
/**
 * Serializer for PodcastEpisode
 * @export
 * @interface PodcastEpisode
 */
export interface PodcastEpisode {
    /**
     *
     * @type {number}
     * @memberof PodcastEpisode
     */
    'id': number;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisode
     */
    'transcript'?: string;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisode
     */
    'episode_link'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisode
     */
    'duration'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisode
     */
    'rss'?: string | null;
}
/**
 * Serializer for PodcastEpisode
 * @export
 * @interface PodcastEpisodeRequest
 */
export interface PodcastEpisodeRequest {
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeRequest
     */
    'transcript'?: string;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeRequest
     */
    'episode_link'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeRequest
     */
    'duration'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeRequest
     */
    'rss'?: string | null;
}
/**
 * Serializer for podcast episode resources
 * @export
 * @interface PodcastEpisodeResource
 */
export interface PodcastEpisodeResource {
    /**
     *
     * @type {number}
     * @memberof PodcastEpisodeResource
     */
    'id': number;
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof PodcastEpisodeResource
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {LearningResourceOfferor}
     * @memberof PodcastEpisodeResource
     */
    'offered_by': LearningResourceOfferor | null;
    /**
     *
     * @type {LearningResourcePlatform}
     * @memberof PodcastEpisodeResource
     */
    'platform': LearningResourcePlatform | null;
    /**
     *
     * @type {Array<string>}
     * @memberof PodcastEpisodeResource
     */
    'course_feature': Array<string> | null;
    /**
     *
     * @type {Array<LearningResourceDepartment>}
     * @memberof PodcastEpisodeResource
     */
    'departments': Array<LearningResourceDepartment> | null;
    /**
     * Returns the certification for the learning resource
     * @type {boolean}
     * @memberof PodcastEpisodeResource
     */
    'certification': boolean;
    /**
     * Returns the prices for the learning resource
     * @type {string}
     * @memberof PodcastEpisodeResource
     */
    'prices': string | null;
    /**
     *
     * @type {Array<LearningResourceRun>}
     * @memberof PodcastEpisodeResource
     */
    'runs': Array<LearningResourceRun> | null;
    /**
     *
     * @type {LearningResourceImage}
     * @memberof PodcastEpisodeResource
     */
    'image': LearningResourceImage | null;
    /**
     *
     * @type {Array<MicroLearningPathRelationship>}
     * @memberof PodcastEpisodeResource
     */
    'learning_path_parents': Array<MicroLearningPathRelationship> | null;
    /**
     *
     * @type {Array<MicroUserListRelationship>}
     * @memberof PodcastEpisodeResource
     */
    'user_list_parents': Array<MicroUserListRelationship> | null;
    /**
     *
     * @type {PodcastEpisodeResourceResourceTypeEnum}
     * @memberof PodcastEpisodeResource
     */
    'resource_type': PodcastEpisodeResourceResourceTypeEnum;
    /**
     *
     * @type {PodcastEpisode}
     * @memberof PodcastEpisodeResource
     */
    'podcast_episode': PodcastEpisode;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResource
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResource
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResource
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResource
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResource
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof PodcastEpisodeResource
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof PodcastEpisodeResource
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResource
     */
    'url'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof PodcastEpisodeResource
     */
    'professional': boolean;
}
/**
 * Serializer for podcast episode resources
 * @export
 * @interface PodcastEpisodeResourceRequest
 */
export interface PodcastEpisodeResourceRequest {
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof PodcastEpisodeResourceRequest
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResourceRequest
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResourceRequest
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResourceRequest
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResourceRequest
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResourceRequest
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof PodcastEpisodeResourceRequest
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof PodcastEpisodeResourceRequest
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof PodcastEpisodeResourceRequest
     */
    'url'?: string | null;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const PodcastEpisodeResourceResourceTypeEnum: {
    readonly PodcastEpisode: "podcast_episode";
};
export type PodcastEpisodeResourceResourceTypeEnum = typeof PodcastEpisodeResourceResourceTypeEnum[keyof typeof PodcastEpisodeResourceResourceTypeEnum];
/**
 * Serializer for Podcasts
 * @export
 * @interface PodcastRequest
 */
export interface PodcastRequest {
    /**
     *
     * @type {string}
     * @memberof PodcastRequest
     */
    'apple_podcasts_url'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastRequest
     */
    'google_podcasts_url'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastRequest
     */
    'rss_url'?: string | null;
}
/**
 * Serializer for podcast resources
 * @export
 * @interface PodcastResource
 */
export interface PodcastResource {
    /**
     *
     * @type {number}
     * @memberof PodcastResource
     */
    'id': number;
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof PodcastResource
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {LearningResourceOfferor}
     * @memberof PodcastResource
     */
    'offered_by': LearningResourceOfferor | null;
    /**
     *
     * @type {LearningResourcePlatform}
     * @memberof PodcastResource
     */
    'platform': LearningResourcePlatform | null;
    /**
     *
     * @type {Array<string>}
     * @memberof PodcastResource
     */
    'course_feature': Array<string> | null;
    /**
     *
     * @type {Array<LearningResourceDepartment>}
     * @memberof PodcastResource
     */
    'departments': Array<LearningResourceDepartment> | null;
    /**
     * Returns the certification for the learning resource
     * @type {boolean}
     * @memberof PodcastResource
     */
    'certification': boolean;
    /**
     * Returns the prices for the learning resource
     * @type {string}
     * @memberof PodcastResource
     */
    'prices': string | null;
    /**
     *
     * @type {Array<LearningResourceRun>}
     * @memberof PodcastResource
     */
    'runs': Array<LearningResourceRun> | null;
    /**
     *
     * @type {LearningResourceImage}
     * @memberof PodcastResource
     */
    'image': LearningResourceImage | null;
    /**
     *
     * @type {Array<MicroLearningPathRelationship>}
     * @memberof PodcastResource
     */
    'learning_path_parents': Array<MicroLearningPathRelationship> | null;
    /**
     *
     * @type {Array<MicroUserListRelationship>}
     * @memberof PodcastResource
     */
    'user_list_parents': Array<MicroUserListRelationship> | null;
    /**
     *
     * @type {PodcastResourceResourceTypeEnum}
     * @memberof PodcastResource
     */
    'resource_type': PodcastResourceResourceTypeEnum;
    /**
     *
     * @type {Podcast}
     * @memberof PodcastResource
     */
    'podcast': Podcast;
    /**
     *
     * @type {string}
     * @memberof PodcastResource
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof PodcastResource
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof PodcastResource
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastResource
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastResource
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof PodcastResource
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof PodcastResource
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof PodcastResource
     */
    'url'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof PodcastResource
     */
    'professional': boolean;
}
/**
 * Serializer for podcast resources
 * @export
 * @interface PodcastResourceRequest
 */
export interface PodcastResourceRequest {
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof PodcastResourceRequest
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {string}
     * @memberof PodcastResourceRequest
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof PodcastResourceRequest
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof PodcastResourceRequest
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastResourceRequest
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PodcastResourceRequest
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof PodcastResourceRequest
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof PodcastResourceRequest
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof PodcastResourceRequest
     */
    'url'?: string | null;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const PodcastResourceResourceTypeEnum: {
    readonly Podcast: "podcast";
};
export type PodcastResourceResourceTypeEnum = typeof PodcastResourceResourceTypeEnum[keyof typeof PodcastResourceResourceTypeEnum];
/**
 * * `private` - private * `unlisted` - unlisted
 * @export
 * @enum {string}
 */
export declare const PrivacyLevelEnum: {
    readonly Private: "private";
    readonly Unlisted: "unlisted";
};
export type PrivacyLevelEnum = typeof PrivacyLevelEnum[keyof typeof PrivacyLevelEnum];
/**
 * Serializer for the Program model
 * @export
 * @interface Program
 */
export interface Program {
    /**
     *
     * @type {Array<CourseResource>}
     * @memberof Program
     */
    'courses': Array<CourseResource> | null;
}
/**
 * Serializer for program resources
 * @export
 * @interface ProgramResource
 */
export interface ProgramResource {
    /**
     *
     * @type {number}
     * @memberof ProgramResource
     */
    'id': number;
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof ProgramResource
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {LearningResourceOfferor}
     * @memberof ProgramResource
     */
    'offered_by': LearningResourceOfferor | null;
    /**
     *
     * @type {LearningResourcePlatform}
     * @memberof ProgramResource
     */
    'platform': LearningResourcePlatform | null;
    /**
     *
     * @type {Array<string>}
     * @memberof ProgramResource
     */
    'course_feature': Array<string> | null;
    /**
     *
     * @type {Array<LearningResourceDepartment>}
     * @memberof ProgramResource
     */
    'departments': Array<LearningResourceDepartment> | null;
    /**
     * Returns the certification for the learning resource
     * @type {boolean}
     * @memberof ProgramResource
     */
    'certification': boolean;
    /**
     * Returns the prices for the learning resource
     * @type {string}
     * @memberof ProgramResource
     */
    'prices': string | null;
    /**
     *
     * @type {Array<LearningResourceRun>}
     * @memberof ProgramResource
     */
    'runs': Array<LearningResourceRun> | null;
    /**
     *
     * @type {LearningResourceImage}
     * @memberof ProgramResource
     */
    'image': LearningResourceImage | null;
    /**
     *
     * @type {Array<MicroLearningPathRelationship>}
     * @memberof ProgramResource
     */
    'learning_path_parents': Array<MicroLearningPathRelationship> | null;
    /**
     *
     * @type {Array<MicroUserListRelationship>}
     * @memberof ProgramResource
     */
    'user_list_parents': Array<MicroUserListRelationship> | null;
    /**
     *
     * @type {ProgramResourceResourceTypeEnum}
     * @memberof ProgramResource
     */
    'resource_type': ProgramResourceResourceTypeEnum;
    /**
     *
     * @type {Program}
     * @memberof ProgramResource
     */
    'program': Program;
    /**
     *
     * @type {string}
     * @memberof ProgramResource
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof ProgramResource
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof ProgramResource
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ProgramResource
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ProgramResource
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof ProgramResource
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof ProgramResource
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof ProgramResource
     */
    'url'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof ProgramResource
     */
    'professional': boolean;
}
/**
 * Serializer for program resources
 * @export
 * @interface ProgramResourceRequest
 */
export interface ProgramResourceRequest {
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof ProgramResourceRequest
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {string}
     * @memberof ProgramResourceRequest
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof ProgramResourceRequest
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof ProgramResourceRequest
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ProgramResourceRequest
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ProgramResourceRequest
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof ProgramResourceRequest
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof ProgramResourceRequest
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof ProgramResourceRequest
     */
    'url'?: string | null;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const ProgramResourceResourceTypeEnum: {
    readonly Program: "program";
};
export type ProgramResourceResourceTypeEnum = typeof ProgramResourceResourceTypeEnum[keyof typeof ProgramResourceResourceTypeEnum];
/**
 * * `PROGRAM_COURSES` - Program Courses * `LEARNING_PATH_ITEMS` - Learning Path Items * `PODCAST_EPISODES` - Podcast Episodes * `PLAYLIST_VIDEOS` - Playlist Videos
 * @export
 * @enum {string}
 */
export declare const RelationTypeEnum: {
    readonly ProgramCourses: "PROGRAM_COURSES";
    readonly LearningPathItems: "LEARNING_PATH_ITEMS";
    readonly PodcastEpisodes: "PODCAST_EPISODES";
    readonly PlaylistVideos: "PLAYLIST_VIDEOS";
};
export type RelationTypeEnum = typeof RelationTypeEnum[keyof typeof RelationTypeEnum];
/**
 * * `course` - course * `program` - program * `learning_path` - learning_path * `podcast` - podcast * `podcast_episode` - podcast_episode * `video` - video * `video_playlist` - video_playlist
 * @export
 * @enum {string}
 */
export declare const ResourceTypeEnum: {
    readonly Course: "course";
    readonly Program: "program";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type ResourceTypeEnum = typeof ResourceTypeEnum[keyof typeof ResourceTypeEnum];
/**
 * Simplified serializer for UserList model.
 * @export
 * @interface UserList
 */
export interface UserList {
    /**
     *
     * @type {number}
     * @memberof UserList
     */
    'id': number;
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof UserList
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     * Return the number of items in the list
     * @type {number}
     * @memberof UserList
     */
    'item_count': number;
    /**
     * Return the image of the first item
     * @type {{ [key: string]: any; }}
     * @memberof UserList
     */
    'image': {
        [key: string]: any;
    };
    /**
     *
     * @type {string}
     * @memberof UserList
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof UserList
     */
    'description'?: string;
    /**
     *
     * @type {PrivacyLevelEnum}
     * @memberof UserList
     */
    'privacy_level'?: PrivacyLevelEnum;
    /**
     *
     * @type {number}
     * @memberof UserList
     */
    'author': number;
}
/**
 * Serializer for UserListRelationship model
 * @export
 * @interface UserListRelationship
 */
export interface UserListRelationship {
    /**
     *
     * @type {number}
     * @memberof UserListRelationship
     */
    'id': number;
    /**
     *
     * @type {LearningResource}
     * @memberof UserListRelationship
     */
    'resource': LearningResource;
    /**
     *
     * @type {number}
     * @memberof UserListRelationship
     */
    'position'?: number;
    /**
     *
     * @type {number}
     * @memberof UserListRelationship
     */
    'parent': number;
    /**
     *
     * @type {number}
     * @memberof UserListRelationship
     */
    'child': number;
}
/**
 * Serializer for UserListRelationship model
 * @export
 * @interface UserListRelationshipRequest
 */
export interface UserListRelationshipRequest {
    /**
     *
     * @type {number}
     * @memberof UserListRelationshipRequest
     */
    'position'?: number;
    /**
     *
     * @type {number}
     * @memberof UserListRelationshipRequest
     */
    'parent': number;
    /**
     *
     * @type {number}
     * @memberof UserListRelationshipRequest
     */
    'child': number;
}
/**
 * Simplified serializer for UserList model.
 * @export
 * @interface UserListRequest
 */
export interface UserListRequest {
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof UserListRequest
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {string}
     * @memberof UserListRequest
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof UserListRequest
     */
    'description'?: string;
    /**
     *
     * @type {PrivacyLevelEnum}
     * @memberof UserListRequest
     */
    'privacy_level'?: PrivacyLevelEnum;
}
/**
 * Serializer for the Video model
 * @export
 * @interface Video
 */
export interface Video {
    /**
     *
     * @type {number}
     * @memberof Video
     */
    'id': number;
    /**
     *
     * @type {string}
     * @memberof Video
     */
    'duration': string;
    /**
     *
     * @type {string}
     * @memberof Video
     */
    'transcript'?: string;
}
/**
 * Serializer for the VideoChannel model
 * @export
 * @interface VideoChannel
 */
export interface VideoChannel {
    /**
     *
     * @type {string}
     * @memberof VideoChannel
     */
    'channel_id': string;
    /**
     *
     * @type {string}
     * @memberof VideoChannel
     */
    'title': string;
}
/**
 * Serializer for the VideoChannel model
 * @export
 * @interface VideoChannelRequest
 */
export interface VideoChannelRequest {
    /**
     *
     * @type {string}
     * @memberof VideoChannelRequest
     */
    'channel_id': string;
    /**
     *
     * @type {string}
     * @memberof VideoChannelRequest
     */
    'title': string;
}
/**
 * Serializer for the VideoPlaylist model
 * @export
 * @interface VideoPlaylist
 */
export interface VideoPlaylist {
    /**
     *
     * @type {number}
     * @memberof VideoPlaylist
     */
    'id': number;
    /**
     *
     * @type {VideoChannel}
     * @memberof VideoPlaylist
     */
    'channel': VideoChannel | null;
    /**
     * Return the number of videos in the playlist
     * @type {number}
     * @memberof VideoPlaylist
     */
    'video_count': number;
}
/**
 * Serializer for video playlist resources
 * @export
 * @interface VideoPlaylistResource
 */
export interface VideoPlaylistResource {
    /**
     *
     * @type {number}
     * @memberof VideoPlaylistResource
     */
    'id': number;
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof VideoPlaylistResource
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {LearningResourceOfferor}
     * @memberof VideoPlaylistResource
     */
    'offered_by': LearningResourceOfferor | null;
    /**
     *
     * @type {LearningResourcePlatform}
     * @memberof VideoPlaylistResource
     */
    'platform': LearningResourcePlatform | null;
    /**
     *
     * @type {Array<string>}
     * @memberof VideoPlaylistResource
     */
    'course_feature': Array<string> | null;
    /**
     *
     * @type {Array<LearningResourceDepartment>}
     * @memberof VideoPlaylistResource
     */
    'departments': Array<LearningResourceDepartment> | null;
    /**
     * Returns the certification for the learning resource
     * @type {boolean}
     * @memberof VideoPlaylistResource
     */
    'certification': boolean;
    /**
     * Returns the prices for the learning resource
     * @type {string}
     * @memberof VideoPlaylistResource
     */
    'prices': string | null;
    /**
     *
     * @type {Array<LearningResourceRun>}
     * @memberof VideoPlaylistResource
     */
    'runs': Array<LearningResourceRun> | null;
    /**
     *
     * @type {LearningResourceImage}
     * @memberof VideoPlaylistResource
     */
    'image': LearningResourceImage | null;
    /**
     *
     * @type {Array<MicroLearningPathRelationship>}
     * @memberof VideoPlaylistResource
     */
    'learning_path_parents': Array<MicroLearningPathRelationship> | null;
    /**
     *
     * @type {Array<MicroUserListRelationship>}
     * @memberof VideoPlaylistResource
     */
    'user_list_parents': Array<MicroUserListRelationship> | null;
    /**
     *
     * @type {VideoPlaylistResourceResourceTypeEnum}
     * @memberof VideoPlaylistResource
     */
    'resource_type': VideoPlaylistResourceResourceTypeEnum;
    /**
     *
     * @type {VideoPlaylist}
     * @memberof VideoPlaylistResource
     */
    'video_playlist': VideoPlaylist;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResource
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResource
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResource
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResource
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResource
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof VideoPlaylistResource
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof VideoPlaylistResource
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResource
     */
    'url'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof VideoPlaylistResource
     */
    'professional': boolean;
}
/**
 * Serializer for video playlist resources
 * @export
 * @interface VideoPlaylistResourceRequest
 */
export interface VideoPlaylistResourceRequest {
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof VideoPlaylistResourceRequest
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResourceRequest
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResourceRequest
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResourceRequest
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResourceRequest
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResourceRequest
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof VideoPlaylistResourceRequest
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof VideoPlaylistResourceRequest
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof VideoPlaylistResourceRequest
     */
    'url'?: string | null;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const VideoPlaylistResourceResourceTypeEnum: {
    readonly VideoPlaylist: "video_playlist";
};
export type VideoPlaylistResourceResourceTypeEnum = typeof VideoPlaylistResourceResourceTypeEnum[keyof typeof VideoPlaylistResourceResourceTypeEnum];
/**
 * Serializer for the Video model
 * @export
 * @interface VideoRequest
 */
export interface VideoRequest {
    /**
     *
     * @type {string}
     * @memberof VideoRequest
     */
    'duration': string;
    /**
     *
     * @type {string}
     * @memberof VideoRequest
     */
    'transcript'?: string;
}
/**
 * Serializer for video resources
 * @export
 * @interface VideoResource
 */
export interface VideoResource {
    /**
     *
     * @type {number}
     * @memberof VideoResource
     */
    'id': number;
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof VideoResource
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {LearningResourceOfferor}
     * @memberof VideoResource
     */
    'offered_by': LearningResourceOfferor | null;
    /**
     *
     * @type {LearningResourcePlatform}
     * @memberof VideoResource
     */
    'platform': LearningResourcePlatform | null;
    /**
     *
     * @type {Array<string>}
     * @memberof VideoResource
     */
    'course_feature': Array<string> | null;
    /**
     *
     * @type {Array<LearningResourceDepartment>}
     * @memberof VideoResource
     */
    'departments': Array<LearningResourceDepartment> | null;
    /**
     * Returns the certification for the learning resource
     * @type {boolean}
     * @memberof VideoResource
     */
    'certification': boolean;
    /**
     * Returns the prices for the learning resource
     * @type {string}
     * @memberof VideoResource
     */
    'prices': string | null;
    /**
     *
     * @type {Array<LearningResourceRun>}
     * @memberof VideoResource
     */
    'runs': Array<LearningResourceRun> | null;
    /**
     *
     * @type {LearningResourceImage}
     * @memberof VideoResource
     */
    'image': LearningResourceImage | null;
    /**
     *
     * @type {Array<MicroLearningPathRelationship>}
     * @memberof VideoResource
     */
    'learning_path_parents': Array<MicroLearningPathRelationship> | null;
    /**
     *
     * @type {Array<MicroUserListRelationship>}
     * @memberof VideoResource
     */
    'user_list_parents': Array<MicroUserListRelationship> | null;
    /**
     *
     * @type {VideoResourceResourceTypeEnum}
     * @memberof VideoResource
     */
    'resource_type': VideoResourceResourceTypeEnum;
    /**
     *
     * @type {Video}
     * @memberof VideoResource
     */
    'video': Video;
    /**
     *
     * @type {string}
     * @memberof VideoResource
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof VideoResource
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof VideoResource
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof VideoResource
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof VideoResource
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof VideoResource
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof VideoResource
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof VideoResource
     */
    'url'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof VideoResource
     */
    'professional': boolean;
}
/**
 * Serializer for video resources
 * @export
 * @interface VideoResourceRequest
 */
export interface VideoResourceRequest {
    /**
     *
     * @type {Array<LearningResourceTopic>}
     * @memberof VideoResourceRequest
     */
    'topics'?: Array<LearningResourceTopic>;
    /**
     *
     * @type {string}
     * @memberof VideoResourceRequest
     */
    'readable_id': string;
    /**
     *
     * @type {string}
     * @memberof VideoResourceRequest
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof VideoResourceRequest
     */
    'description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof VideoResourceRequest
     */
    'full_description'?: string | null;
    /**
     *
     * @type {string}
     * @memberof VideoResourceRequest
     */
    'last_modified'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof VideoResourceRequest
     */
    'published'?: boolean;
    /**
     *
     * @type {Array<string>}
     * @memberof VideoResourceRequest
     */
    'languages'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof VideoResourceRequest
     */
    'url'?: string | null;
}
/**
 *
 * @export
 * @enum {string}
 */
export declare const VideoResourceResourceTypeEnum: {
    readonly Video: "video";
};
export type VideoResourceResourceTypeEnum = typeof VideoResourceResourceTypeEnum[keyof typeof VideoResourceResourceTypeEnum];
/**
 * ArticlesApi - axios parameter creator
 * @export
 */
export declare const ArticlesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a new article
     * @summary Create
     * @param {ArticleRequest} ArticleRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesCreate: (ArticleRequest: ArticleRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete an article
     * @summary Destroy
     * @param {number} id A unique integer value identifying this article.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesDestroy: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of articles
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesList: (limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update an article
     * @summary Update
     * @param {number} id A unique integer value identifying this article.
     * @param {PatchedArticleRequest} [PatchedArticleRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesPartialUpdate: (id: number, PatchedArticleRequest?: PatchedArticleRequest | undefined, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a single article
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this article.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesRetrieve: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ArticlesApi - functional programming interface
 * @export
 */
export declare const ArticlesApiFp: (configuration?: Configuration) => {
    /**
     * Create a new article
     * @summary Create
     * @param {ArticleRequest} ArticleRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesCreate(ArticleRequest: ArticleRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Article>>;
    /**
     * Delete an article
     * @summary Destroy
     * @param {number} id A unique integer value identifying this article.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesDestroy(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get a paginated list of articles
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesList(limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedArticleList>>;
    /**
     * Update an article
     * @summary Update
     * @param {number} id A unique integer value identifying this article.
     * @param {PatchedArticleRequest} [PatchedArticleRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesPartialUpdate(id: number, PatchedArticleRequest?: PatchedArticleRequest | undefined, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Article>>;
    /**
     * Retrieve a single article
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this article.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesRetrieve(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Article>>;
};
/**
 * ArticlesApi - factory interface
 * @export
 */
export declare const ArticlesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a new article
     * @summary Create
     * @param {ArticlesApiArticlesCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesCreate(requestParameters: ArticlesApiArticlesCreateRequest, options?: RawAxiosRequestConfig): AxiosPromise<Article>;
    /**
     * Delete an article
     * @summary Destroy
     * @param {ArticlesApiArticlesDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesDestroy(requestParameters: ArticlesApiArticlesDestroyRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Get a paginated list of articles
     * @summary List
     * @param {ArticlesApiArticlesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesList(requestParameters?: ArticlesApiArticlesListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedArticleList>;
    /**
     * Update an article
     * @summary Update
     * @param {ArticlesApiArticlesPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesPartialUpdate(requestParameters: ArticlesApiArticlesPartialUpdateRequest, options?: RawAxiosRequestConfig): AxiosPromise<Article>;
    /**
     * Retrieve a single article
     * @summary Retrieve
     * @param {ArticlesApiArticlesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    articlesRetrieve(requestParameters: ArticlesApiArticlesRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<Article>;
};
/**
 * Request parameters for articlesCreate operation in ArticlesApi.
 * @export
 * @interface ArticlesApiArticlesCreateRequest
 */
export interface ArticlesApiArticlesCreateRequest {
    /**
     *
     * @type {ArticleRequest}
     * @memberof ArticlesApiArticlesCreate
     */
    readonly ArticleRequest: ArticleRequest;
}
/**
 * Request parameters for articlesDestroy operation in ArticlesApi.
 * @export
 * @interface ArticlesApiArticlesDestroyRequest
 */
export interface ArticlesApiArticlesDestroyRequest {
    /**
     * A unique integer value identifying this article.
     * @type {number}
     * @memberof ArticlesApiArticlesDestroy
     */
    readonly id: number;
}
/**
 * Request parameters for articlesList operation in ArticlesApi.
 * @export
 * @interface ArticlesApiArticlesListRequest
 */
export interface ArticlesApiArticlesListRequest {
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof ArticlesApiArticlesList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof ArticlesApiArticlesList
     */
    readonly offset?: number;
}
/**
 * Request parameters for articlesPartialUpdate operation in ArticlesApi.
 * @export
 * @interface ArticlesApiArticlesPartialUpdateRequest
 */
export interface ArticlesApiArticlesPartialUpdateRequest {
    /**
     * A unique integer value identifying this article.
     * @type {number}
     * @memberof ArticlesApiArticlesPartialUpdate
     */
    readonly id: number;
    /**
     *
     * @type {PatchedArticleRequest}
     * @memberof ArticlesApiArticlesPartialUpdate
     */
    readonly PatchedArticleRequest?: PatchedArticleRequest;
}
/**
 * Request parameters for articlesRetrieve operation in ArticlesApi.
 * @export
 * @interface ArticlesApiArticlesRetrieveRequest
 */
export interface ArticlesApiArticlesRetrieveRequest {
    /**
     * A unique integer value identifying this article.
     * @type {number}
     * @memberof ArticlesApiArticlesRetrieve
     */
    readonly id: number;
}
/**
 * ArticlesApi - object-oriented interface
 * @export
 * @class ArticlesApi
 * @extends {BaseAPI}
 */
export declare class ArticlesApi extends BaseAPI {
    /**
     * Create a new article
     * @summary Create
     * @param {ArticlesApiArticlesCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticlesApi
     */
    articlesCreate(requestParameters: ArticlesApiArticlesCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Article, any>>;
    /**
     * Delete an article
     * @summary Destroy
     * @param {ArticlesApiArticlesDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticlesApi
     */
    articlesDestroy(requestParameters: ArticlesApiArticlesDestroyRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Get a paginated list of articles
     * @summary List
     * @param {ArticlesApiArticlesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticlesApi
     */
    articlesList(requestParameters?: ArticlesApiArticlesListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedArticleList, any>>;
    /**
     * Update an article
     * @summary Update
     * @param {ArticlesApiArticlesPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticlesApi
     */
    articlesPartialUpdate(requestParameters: ArticlesApiArticlesPartialUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Article, any>>;
    /**
     * Retrieve a single article
     * @summary Retrieve
     * @param {ArticlesApiArticlesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ArticlesApi
     */
    articlesRetrieve(requestParameters: ArticlesApiArticlesRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Article, any>>;
}
/**
 * ContentFileSearchApi - axios parameter creator
 * @export
 */
export declare const ContentFileSearchApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Search for content files
     * @summary Search
     * @param {Array<ContentFileSearchRetrieveAggregationsEnum>} [aggregations] Show resource counts by category
     * @param {Array<string>} [content_feature_type] The feature type of the content file. Possible options are at api/v1/course_features/
     * @param {Array<number>} [id] The id value for the content file
     * @param {number} [limit] Number of results to return per page
     * @param {Array<ContentFileSearchRetrieveOfferedByEnum>} [offered_by] The organization that offers the learning resource               * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results
     * @param {Array<ContentFileSearchRetrievePlatformEnum>} [platform] The platform on which the learning resource id offered               * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {string} [q] The search text
     * @param {Array<number>} [resource_id] The id value of the parent learning resource for the content file
     * @param {Array<number>} [run_id] The id value of the run that the content file belongs to
     * @param {ContentFileSearchRetrieveSortbyEnum} [sortby] if the parameter starts with \&#39;-\&#39; the sort is in descending order  * &#x60;id&#x60; - id * &#x60;-id&#x60; - -id * &#x60;resource_readable_id&#x60; - resource_readable_id * &#x60;-resource_readable_id&#x60; - -resource_readable_id
     * @param {Array<string>} [topic] The topic name. To see a list of options go to api/v1/topics/
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    contentFileSearchRetrieve: (aggregations?: Array<ContentFileSearchRetrieveAggregationsEnum>, content_feature_type?: Array<string>, id?: Array<number>, limit?: number, offered_by?: Array<ContentFileSearchRetrieveOfferedByEnum>, offset?: number, platform?: Array<ContentFileSearchRetrievePlatformEnum>, q?: string, resource_id?: Array<number>, run_id?: Array<number>, sortby?: ContentFileSearchRetrieveSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ContentFileSearchApi - functional programming interface
 * @export
 */
export declare const ContentFileSearchApiFp: (configuration?: Configuration) => {
    /**
     * Search for content files
     * @summary Search
     * @param {Array<ContentFileSearchRetrieveAggregationsEnum>} [aggregations] Show resource counts by category
     * @param {Array<string>} [content_feature_type] The feature type of the content file. Possible options are at api/v1/course_features/
     * @param {Array<number>} [id] The id value for the content file
     * @param {number} [limit] Number of results to return per page
     * @param {Array<ContentFileSearchRetrieveOfferedByEnum>} [offered_by] The organization that offers the learning resource               * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results
     * @param {Array<ContentFileSearchRetrievePlatformEnum>} [platform] The platform on which the learning resource id offered               * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {string} [q] The search text
     * @param {Array<number>} [resource_id] The id value of the parent learning resource for the content file
     * @param {Array<number>} [run_id] The id value of the run that the content file belongs to
     * @param {ContentFileSearchRetrieveSortbyEnum} [sortby] if the parameter starts with \&#39;-\&#39; the sort is in descending order  * &#x60;id&#x60; - id * &#x60;-id&#x60; - -id * &#x60;resource_readable_id&#x60; - resource_readable_id * &#x60;-resource_readable_id&#x60; - -resource_readable_id
     * @param {Array<string>} [topic] The topic name. To see a list of options go to api/v1/topics/
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    contentFileSearchRetrieve(aggregations?: Array<ContentFileSearchRetrieveAggregationsEnum>, content_feature_type?: Array<string>, id?: Array<number>, limit?: number, offered_by?: Array<ContentFileSearchRetrieveOfferedByEnum>, offset?: number, platform?: Array<ContentFileSearchRetrievePlatformEnum>, q?: string, resource_id?: Array<number>, run_id?: Array<number>, sortby?: ContentFileSearchRetrieveSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ContentFileeSearchResponse>>;
};
/**
 * ContentFileSearchApi - factory interface
 * @export
 */
export declare const ContentFileSearchApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Search for content files
     * @summary Search
     * @param {ContentFileSearchApiContentFileSearchRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    contentFileSearchRetrieve(requestParameters?: ContentFileSearchApiContentFileSearchRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<ContentFileeSearchResponse>;
};
/**
 * Request parameters for contentFileSearchRetrieve operation in ContentFileSearchApi.
 * @export
 * @interface ContentFileSearchApiContentFileSearchRetrieveRequest
 */
export interface ContentFileSearchApiContentFileSearchRetrieveRequest {
    /**
     * Show resource counts by category
     * @type {Array<'topic' | 'content_feature_type' | 'platform' | 'offered_by'>}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly aggregations?: Array<ContentFileSearchRetrieveAggregationsEnum>;
    /**
     * The feature type of the content file. Possible options are at api/v1/course_features/
     * @type {Array<string>}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly content_feature_type?: Array<string>;
    /**
     * The id value for the content file
     * @type {Array<number>}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly id?: Array<number>;
    /**
     * Number of results to return per page
     * @type {number}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly limit?: number;
    /**
     * The organization that offers the learning resource               * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'mitx' | 'ocw' | 'bootcamps' | 'xpro' | 'csail' | 'mitpe' | 'see' | 'scc' | 'ctl'>}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly offered_by?: Array<ContentFileSearchRetrieveOfferedByEnum>;
    /**
     * The initial index from which to return the results
     * @type {number}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly offset?: number;
    /**
     * The platform on which the learning resource id offered               * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'edx' | 'ocw' | 'oll' | 'mitxonline' | 'bootcamps' | 'xpro' | 'csail' | 'mitpe' | 'see' | 'scc' | 'ctl' | 'whu' | 'susskind' | 'globalalumni' | 'simplilearn' | 'emeritus' | 'podcast' | 'youtube'>}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly platform?: Array<ContentFileSearchRetrievePlatformEnum>;
    /**
     * The search text
     * @type {string}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly q?: string;
    /**
     * The id value of the parent learning resource for the content file
     * @type {Array<number>}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly resource_id?: Array<number>;
    /**
     * The id value of the run that the content file belongs to
     * @type {Array<number>}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly run_id?: Array<number>;
    /**
     * if the parameter starts with \&#39;-\&#39; the sort is in descending order  * &#x60;id&#x60; - id * &#x60;-id&#x60; - -id * &#x60;resource_readable_id&#x60; - resource_readable_id * &#x60;-resource_readable_id&#x60; - -resource_readable_id
     * @type {'id' | '-id' | 'resource_readable_id' | '-resource_readable_id'}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly sortby?: ContentFileSearchRetrieveSortbyEnum;
    /**
     * The topic name. To see a list of options go to api/v1/topics/
     * @type {Array<string>}
     * @memberof ContentFileSearchApiContentFileSearchRetrieve
     */
    readonly topic?: Array<string>;
}
/**
 * ContentFileSearchApi - object-oriented interface
 * @export
 * @class ContentFileSearchApi
 * @extends {BaseAPI}
 */
export declare class ContentFileSearchApi extends BaseAPI {
    /**
     * Search for content files
     * @summary Search
     * @param {ContentFileSearchApiContentFileSearchRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContentFileSearchApi
     */
    contentFileSearchRetrieve(requestParameters?: ContentFileSearchApiContentFileSearchRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ContentFileeSearchResponse, any>>;
}
/**
 * @export
 */
export declare const ContentFileSearchRetrieveAggregationsEnum: {
    readonly Topic: "topic";
    readonly ContentFeatureType: "content_feature_type";
    readonly Platform: "platform";
    readonly OfferedBy: "offered_by";
};
export type ContentFileSearchRetrieveAggregationsEnum = typeof ContentFileSearchRetrieveAggregationsEnum[keyof typeof ContentFileSearchRetrieveAggregationsEnum];
/**
 * @export
 */
export declare const ContentFileSearchRetrieveOfferedByEnum: {
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Bootcamps: "bootcamps";
    readonly Xpro: "xpro";
    readonly Csail: "csail";
    readonly Mitpe: "mitpe";
    readonly See: "see";
    readonly Scc: "scc";
    readonly Ctl: "ctl";
};
export type ContentFileSearchRetrieveOfferedByEnum = typeof ContentFileSearchRetrieveOfferedByEnum[keyof typeof ContentFileSearchRetrieveOfferedByEnum];
/**
 * @export
 */
export declare const ContentFileSearchRetrievePlatformEnum: {
    readonly Edx: "edx";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Mitxonline: "mitxonline";
    readonly Bootcamps: "bootcamps";
    readonly Xpro: "xpro";
    readonly Csail: "csail";
    readonly Mitpe: "mitpe";
    readonly See: "see";
    readonly Scc: "scc";
    readonly Ctl: "ctl";
    readonly Whu: "whu";
    readonly Susskind: "susskind";
    readonly Globalalumni: "globalalumni";
    readonly Simplilearn: "simplilearn";
    readonly Emeritus: "emeritus";
    readonly Podcast: "podcast";
    readonly Youtube: "youtube";
};
export type ContentFileSearchRetrievePlatformEnum = typeof ContentFileSearchRetrievePlatformEnum[keyof typeof ContentFileSearchRetrievePlatformEnum];
/**
 * @export
 */
export declare const ContentFileSearchRetrieveSortbyEnum: {
    readonly Id: "id";
    readonly Id2: "-id";
    readonly ResourceReadableId: "resource_readable_id";
    readonly ResourceReadableId2: "-resource_readable_id";
};
export type ContentFileSearchRetrieveSortbyEnum = typeof ContentFileSearchRetrieveSortbyEnum[keyof typeof ContentFileSearchRetrieveSortbyEnum];
/**
 * ContentfilesApi - axios parameter creator
 * @export
 */
export declare const ContentfilesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Viewset for ContentFiles
     * @summary List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {Array<string>} [content_feature_type] Multiple values may be separated by commas.
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<ContentfilesListOfferedByEnum>} [offered_by] The organization that offers a learning resource the content file belongs to  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<ContentfilesListPlatformEnum>} [platform] The platform on which learning resources the content file belongs to is offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {Array<number>} [resource_id] Multiple values may be separated by commas.
     * @param {Array<number>} [run_id] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    contentfilesList: (learning_resource_id: number, content_feature_type?: Array<string>, limit?: number, offered_by?: Array<ContentfilesListOfferedByEnum>, offset?: number, platform?: Array<ContentfilesListPlatformEnum>, resource_id?: Array<number>, run_id?: Array<number>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for ContentFiles
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this contentfile.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    contentfilesRetrieve: (id: number, learning_resource_id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ContentfilesApi - functional programming interface
 * @export
 */
export declare const ContentfilesApiFp: (configuration?: Configuration) => {
    /**
     * Viewset for ContentFiles
     * @summary List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {Array<string>} [content_feature_type] Multiple values may be separated by commas.
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<ContentfilesListOfferedByEnum>} [offered_by] The organization that offers a learning resource the content file belongs to  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<ContentfilesListPlatformEnum>} [platform] The platform on which learning resources the content file belongs to is offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {Array<number>} [resource_id] Multiple values may be separated by commas.
     * @param {Array<number>} [run_id] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    contentfilesList(learning_resource_id: number, content_feature_type?: Array<string>, limit?: number, offered_by?: Array<ContentfilesListOfferedByEnum>, offset?: number, platform?: Array<ContentfilesListPlatformEnum>, resource_id?: Array<number>, run_id?: Array<number>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedContentFileList>>;
    /**
     * Viewset for ContentFiles
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this contentfile.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    contentfilesRetrieve(id: number, learning_resource_id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ContentFile>>;
};
/**
 * ContentfilesApi - factory interface
 * @export
 */
export declare const ContentfilesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Viewset for ContentFiles
     * @summary List
     * @param {ContentfilesApiContentfilesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    contentfilesList(requestParameters: ContentfilesApiContentfilesListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedContentFileList>;
    /**
     * Viewset for ContentFiles
     * @summary Retrieve
     * @param {ContentfilesApiContentfilesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    contentfilesRetrieve(requestParameters: ContentfilesApiContentfilesRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<ContentFile>;
};
/**
 * Request parameters for contentfilesList operation in ContentfilesApi.
 * @export
 * @interface ContentfilesApiContentfilesListRequest
 */
export interface ContentfilesApiContentfilesListRequest {
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof ContentfilesApiContentfilesList
     */
    readonly learning_resource_id: number;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof ContentfilesApiContentfilesList
     */
    readonly content_feature_type?: Array<string>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof ContentfilesApiContentfilesList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource the content file belongs to  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof ContentfilesApiContentfilesList
     */
    readonly offered_by?: Array<ContentfilesListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof ContentfilesApiContentfilesList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources the content file belongs to is offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof ContentfilesApiContentfilesList
     */
    readonly platform?: Array<ContentfilesListPlatformEnum>;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<number>}
     * @memberof ContentfilesApiContentfilesList
     */
    readonly resource_id?: Array<number>;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<number>}
     * @memberof ContentfilesApiContentfilesList
     */
    readonly run_id?: Array<number>;
}
/**
 * Request parameters for contentfilesRetrieve operation in ContentfilesApi.
 * @export
 * @interface ContentfilesApiContentfilesRetrieveRequest
 */
export interface ContentfilesApiContentfilesRetrieveRequest {
    /**
     * A unique integer value identifying this contentfile.
     * @type {number}
     * @memberof ContentfilesApiContentfilesRetrieve
     */
    readonly id: number;
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof ContentfilesApiContentfilesRetrieve
     */
    readonly learning_resource_id: number;
}
/**
 * ContentfilesApi - object-oriented interface
 * @export
 * @class ContentfilesApi
 * @extends {BaseAPI}
 */
export declare class ContentfilesApi extends BaseAPI {
    /**
     * Viewset for ContentFiles
     * @summary List
     * @param {ContentfilesApiContentfilesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContentfilesApi
     */
    contentfilesList(requestParameters: ContentfilesApiContentfilesListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedContentFileList, any>>;
    /**
     * Viewset for ContentFiles
     * @summary Retrieve
     * @param {ContentfilesApiContentfilesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ContentfilesApi
     */
    contentfilesRetrieve(requestParameters: ContentfilesApiContentfilesRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ContentFile, any>>;
}
/**
 * @export
 */
export declare const ContentfilesListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type ContentfilesListOfferedByEnum = typeof ContentfilesListOfferedByEnum[keyof typeof ContentfilesListOfferedByEnum];
/**
 * @export
 */
export declare const ContentfilesListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type ContentfilesListPlatformEnum = typeof ContentfilesListPlatformEnum[keyof typeof ContentfilesListPlatformEnum];
/**
 * CourseFeaturesApi - axios parameter creator
 * @export
 */
export declare const CourseFeaturesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Course Features and Content Feature Types
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    courseFeaturesList: (limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Course Features and Content Feature Types
     * @summary Retrieve
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    courseFeaturesRetrieve: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CourseFeaturesApi - functional programming interface
 * @export
 */
export declare const CourseFeaturesApiFp: (configuration?: Configuration) => {
    /**
     * Course Features and Content Feature Types
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    courseFeaturesList(limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningResourceContentTagList>>;
    /**
     * Course Features and Content Feature Types
     * @summary Retrieve
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    courseFeaturesRetrieve(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningResourceContentTag>>;
};
/**
 * CourseFeaturesApi - factory interface
 * @export
 */
export declare const CourseFeaturesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Course Features and Content Feature Types
     * @summary List
     * @param {CourseFeaturesApiCourseFeaturesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    courseFeaturesList(requestParameters?: CourseFeaturesApiCourseFeaturesListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningResourceContentTagList>;
    /**
     * Course Features and Content Feature Types
     * @summary Retrieve
     * @param {CourseFeaturesApiCourseFeaturesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    courseFeaturesRetrieve(requestParameters: CourseFeaturesApiCourseFeaturesRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningResourceContentTag>;
};
/**
 * Request parameters for courseFeaturesList operation in CourseFeaturesApi.
 * @export
 * @interface CourseFeaturesApiCourseFeaturesListRequest
 */
export interface CourseFeaturesApiCourseFeaturesListRequest {
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof CourseFeaturesApiCourseFeaturesList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof CourseFeaturesApiCourseFeaturesList
     */
    readonly offset?: number;
}
/**
 * Request parameters for courseFeaturesRetrieve operation in CourseFeaturesApi.
 * @export
 * @interface CourseFeaturesApiCourseFeaturesRetrieveRequest
 */
export interface CourseFeaturesApiCourseFeaturesRetrieveRequest {
    /**
     *
     * @type {string}
     * @memberof CourseFeaturesApiCourseFeaturesRetrieve
     */
    readonly id: string;
}
/**
 * CourseFeaturesApi - object-oriented interface
 * @export
 * @class CourseFeaturesApi
 * @extends {BaseAPI}
 */
export declare class CourseFeaturesApi extends BaseAPI {
    /**
     * Course Features and Content Feature Types
     * @summary List
     * @param {CourseFeaturesApiCourseFeaturesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CourseFeaturesApi
     */
    courseFeaturesList(requestParameters?: CourseFeaturesApiCourseFeaturesListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningResourceContentTagList, any>>;
    /**
     * Course Features and Content Feature Types
     * @summary Retrieve
     * @param {CourseFeaturesApiCourseFeaturesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CourseFeaturesApi
     */
    courseFeaturesRetrieve(requestParameters: CourseFeaturesApiCourseFeaturesRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningResourceContentTag, any>>;
}
/**
 * CoursesApi - axios parameter creator
 * @export
 */
export declare const CoursesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {Array<string>} [content_feature_type] Multiple values may be separated by commas.
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<CoursesContentfilesListOfferedByEnum>} [offered_by] The organization that offers a learning resource the content file belongs to  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<CoursesContentfilesListPlatformEnum>} [platform] The platform on which learning resources the content file belongs to is offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {Array<number>} [resource_id] Multiple values may be separated by commas.
     * @param {Array<number>} [run_id] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesContentfilesList: (learning_resource_id: number, content_feature_type?: Array<string>, limit?: number, offered_by?: Array<CoursesContentfilesListOfferedByEnum>, offset?: number, platform?: Array<CoursesContentfilesListPlatformEnum>, resource_id?: Array<number>, run_id?: Array<number>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File Retrieve
     * @param {number} id A unique integer value identifying this contentfile.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesContentfilesRetrieve: (id: number, learning_resource_id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of courses
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<CoursesListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<CoursesListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<CoursesListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<CoursesListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<CoursesListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {CoursesListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesList: (course_feature?: Array<string>, department?: Array<CoursesListDepartmentEnum>, level?: Array<CoursesListLevelEnum>, limit?: number, offered_by?: Array<CoursesListOfferedByEnum>, offset?: number, platform?: Array<CoursesListPlatformEnum>, professional?: boolean, resource_type?: Array<CoursesListResourceTypeEnum>, sortby?: CoursesListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of newly released Courses.
     * @summary List New
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<CoursesNewListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<CoursesNewListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<CoursesNewListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<CoursesNewListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<CoursesNewListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {CoursesNewListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesNewList: (course_feature?: Array<string>, department?: Array<CoursesNewListDepartmentEnum>, level?: Array<CoursesNewListLevelEnum>, limit?: number, offered_by?: Array<CoursesNewListOfferedByEnum>, offset?: number, platform?: Array<CoursesNewListPlatformEnum>, professional?: boolean, resource_type?: Array<CoursesNewListResourceTypeEnum>, sortby?: CoursesNewListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a single course
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesRetrieve: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of upcoming Courses.
     * @summary List Upcoming
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<CoursesUpcomingListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<CoursesUpcomingListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<CoursesUpcomingListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<CoursesUpcomingListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<CoursesUpcomingListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {CoursesUpcomingListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesUpcomingList: (course_feature?: Array<string>, department?: Array<CoursesUpcomingListDepartmentEnum>, level?: Array<CoursesUpcomingListLevelEnum>, limit?: number, offered_by?: Array<CoursesUpcomingListOfferedByEnum>, offset?: number, platform?: Array<CoursesUpcomingListPlatformEnum>, professional?: boolean, resource_type?: Array<CoursesUpcomingListResourceTypeEnum>, sortby?: CoursesUpcomingListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CoursesApi - functional programming interface
 * @export
 */
export declare const CoursesApiFp: (configuration?: Configuration) => {
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {Array<string>} [content_feature_type] Multiple values may be separated by commas.
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<CoursesContentfilesListOfferedByEnum>} [offered_by] The organization that offers a learning resource the content file belongs to  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<CoursesContentfilesListPlatformEnum>} [platform] The platform on which learning resources the content file belongs to is offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {Array<number>} [resource_id] Multiple values may be separated by commas.
     * @param {Array<number>} [run_id] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesContentfilesList(learning_resource_id: number, content_feature_type?: Array<string>, limit?: number, offered_by?: Array<CoursesContentfilesListOfferedByEnum>, offset?: number, platform?: Array<CoursesContentfilesListPlatformEnum>, resource_id?: Array<number>, run_id?: Array<number>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedContentFileList>>;
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File Retrieve
     * @param {number} id A unique integer value identifying this contentfile.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesContentfilesRetrieve(id: number, learning_resource_id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ContentFile>>;
    /**
     * Get a paginated list of courses
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<CoursesListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<CoursesListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<CoursesListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<CoursesListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<CoursesListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {CoursesListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesList(course_feature?: Array<string>, department?: Array<CoursesListDepartmentEnum>, level?: Array<CoursesListLevelEnum>, limit?: number, offered_by?: Array<CoursesListOfferedByEnum>, offset?: number, platform?: Array<CoursesListPlatformEnum>, professional?: boolean, resource_type?: Array<CoursesListResourceTypeEnum>, sortby?: CoursesListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedCourseResourceList>>;
    /**
     * Get a paginated list of newly released Courses.
     * @summary List New
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<CoursesNewListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<CoursesNewListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<CoursesNewListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<CoursesNewListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<CoursesNewListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {CoursesNewListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesNewList(course_feature?: Array<string>, department?: Array<CoursesNewListDepartmentEnum>, level?: Array<CoursesNewListLevelEnum>, limit?: number, offered_by?: Array<CoursesNewListOfferedByEnum>, offset?: number, platform?: Array<CoursesNewListPlatformEnum>, professional?: boolean, resource_type?: Array<CoursesNewListResourceTypeEnum>, sortby?: CoursesNewListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedCourseResourceList>>;
    /**
     * Retrieve a single course
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesRetrieve(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CourseResource>>;
    /**
     * Get a paginated list of upcoming Courses.
     * @summary List Upcoming
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<CoursesUpcomingListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<CoursesUpcomingListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<CoursesUpcomingListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<CoursesUpcomingListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<CoursesUpcomingListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {CoursesUpcomingListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesUpcomingList(course_feature?: Array<string>, department?: Array<CoursesUpcomingListDepartmentEnum>, level?: Array<CoursesUpcomingListLevelEnum>, limit?: number, offered_by?: Array<CoursesUpcomingListOfferedByEnum>, offset?: number, platform?: Array<CoursesUpcomingListPlatformEnum>, professional?: boolean, resource_type?: Array<CoursesUpcomingListResourceTypeEnum>, sortby?: CoursesUpcomingListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedCourseResourceList>>;
};
/**
 * CoursesApi - factory interface
 * @export
 */
export declare const CoursesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File List
     * @param {CoursesApiCoursesContentfilesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesContentfilesList(requestParameters: CoursesApiCoursesContentfilesListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedContentFileList>;
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File Retrieve
     * @param {CoursesApiCoursesContentfilesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesContentfilesRetrieve(requestParameters: CoursesApiCoursesContentfilesRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<ContentFile>;
    /**
     * Get a paginated list of courses
     * @summary List
     * @param {CoursesApiCoursesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesList(requestParameters?: CoursesApiCoursesListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedCourseResourceList>;
    /**
     * Get a paginated list of newly released Courses.
     * @summary List New
     * @param {CoursesApiCoursesNewListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesNewList(requestParameters?: CoursesApiCoursesNewListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedCourseResourceList>;
    /**
     * Retrieve a single course
     * @summary Retrieve
     * @param {CoursesApiCoursesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesRetrieve(requestParameters: CoursesApiCoursesRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<CourseResource>;
    /**
     * Get a paginated list of upcoming Courses.
     * @summary List Upcoming
     * @param {CoursesApiCoursesUpcomingListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    coursesUpcomingList(requestParameters?: CoursesApiCoursesUpcomingListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedCourseResourceList>;
};
/**
 * Request parameters for coursesContentfilesList operation in CoursesApi.
 * @export
 * @interface CoursesApiCoursesContentfilesListRequest
 */
export interface CoursesApiCoursesContentfilesListRequest {
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof CoursesApiCoursesContentfilesList
     */
    readonly learning_resource_id: number;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof CoursesApiCoursesContentfilesList
     */
    readonly content_feature_type?: Array<string>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof CoursesApiCoursesContentfilesList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource the content file belongs to  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof CoursesApiCoursesContentfilesList
     */
    readonly offered_by?: Array<CoursesContentfilesListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof CoursesApiCoursesContentfilesList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources the content file belongs to is offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof CoursesApiCoursesContentfilesList
     */
    readonly platform?: Array<CoursesContentfilesListPlatformEnum>;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<number>}
     * @memberof CoursesApiCoursesContentfilesList
     */
    readonly resource_id?: Array<number>;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<number>}
     * @memberof CoursesApiCoursesContentfilesList
     */
    readonly run_id?: Array<number>;
}
/**
 * Request parameters for coursesContentfilesRetrieve operation in CoursesApi.
 * @export
 * @interface CoursesApiCoursesContentfilesRetrieveRequest
 */
export interface CoursesApiCoursesContentfilesRetrieveRequest {
    /**
     * A unique integer value identifying this contentfile.
     * @type {number}
     * @memberof CoursesApiCoursesContentfilesRetrieve
     */
    readonly id: number;
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof CoursesApiCoursesContentfilesRetrieve
     */
    readonly learning_resource_id: number;
}
/**
 * Request parameters for coursesList operation in CoursesApi.
 * @export
 * @interface CoursesApiCoursesListRequest
 */
export interface CoursesApiCoursesListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof CoursesApiCoursesList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof CoursesApiCoursesList
     */
    readonly department?: Array<CoursesListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof CoursesApiCoursesList
     */
    readonly level?: Array<CoursesListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof CoursesApiCoursesList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof CoursesApiCoursesList
     */
    readonly offered_by?: Array<CoursesListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof CoursesApiCoursesList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof CoursesApiCoursesList
     */
    readonly platform?: Array<CoursesListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof CoursesApiCoursesList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof CoursesApiCoursesList
     */
    readonly resource_type?: Array<CoursesListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof CoursesApiCoursesList
     */
    readonly sortby?: CoursesListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof CoursesApiCoursesList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for coursesNewList operation in CoursesApi.
 * @export
 * @interface CoursesApiCoursesNewListRequest
 */
export interface CoursesApiCoursesNewListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof CoursesApiCoursesNewList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof CoursesApiCoursesNewList
     */
    readonly department?: Array<CoursesNewListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof CoursesApiCoursesNewList
     */
    readonly level?: Array<CoursesNewListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof CoursesApiCoursesNewList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof CoursesApiCoursesNewList
     */
    readonly offered_by?: Array<CoursesNewListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof CoursesApiCoursesNewList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof CoursesApiCoursesNewList
     */
    readonly platform?: Array<CoursesNewListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof CoursesApiCoursesNewList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof CoursesApiCoursesNewList
     */
    readonly resource_type?: Array<CoursesNewListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof CoursesApiCoursesNewList
     */
    readonly sortby?: CoursesNewListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof CoursesApiCoursesNewList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for coursesRetrieve operation in CoursesApi.
 * @export
 * @interface CoursesApiCoursesRetrieveRequest
 */
export interface CoursesApiCoursesRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource.
     * @type {number}
     * @memberof CoursesApiCoursesRetrieve
     */
    readonly id: number;
}
/**
 * Request parameters for coursesUpcomingList operation in CoursesApi.
 * @export
 * @interface CoursesApiCoursesUpcomingListRequest
 */
export interface CoursesApiCoursesUpcomingListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof CoursesApiCoursesUpcomingList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof CoursesApiCoursesUpcomingList
     */
    readonly department?: Array<CoursesUpcomingListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof CoursesApiCoursesUpcomingList
     */
    readonly level?: Array<CoursesUpcomingListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof CoursesApiCoursesUpcomingList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof CoursesApiCoursesUpcomingList
     */
    readonly offered_by?: Array<CoursesUpcomingListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof CoursesApiCoursesUpcomingList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof CoursesApiCoursesUpcomingList
     */
    readonly platform?: Array<CoursesUpcomingListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof CoursesApiCoursesUpcomingList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof CoursesApiCoursesUpcomingList
     */
    readonly resource_type?: Array<CoursesUpcomingListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof CoursesApiCoursesUpcomingList
     */
    readonly sortby?: CoursesUpcomingListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof CoursesApiCoursesUpcomingList
     */
    readonly topic?: Array<string>;
}
/**
 * CoursesApi - object-oriented interface
 * @export
 * @class CoursesApi
 * @extends {BaseAPI}
 */
export declare class CoursesApi extends BaseAPI {
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File List
     * @param {CoursesApiCoursesContentfilesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoursesApi
     */
    coursesContentfilesList(requestParameters: CoursesApiCoursesContentfilesListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedContentFileList, any>>;
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File Retrieve
     * @param {CoursesApiCoursesContentfilesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoursesApi
     */
    coursesContentfilesRetrieve(requestParameters: CoursesApiCoursesContentfilesRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ContentFile, any>>;
    /**
     * Get a paginated list of courses
     * @summary List
     * @param {CoursesApiCoursesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoursesApi
     */
    coursesList(requestParameters?: CoursesApiCoursesListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedCourseResourceList, any>>;
    /**
     * Get a paginated list of newly released Courses.
     * @summary List New
     * @param {CoursesApiCoursesNewListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoursesApi
     */
    coursesNewList(requestParameters?: CoursesApiCoursesNewListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedCourseResourceList, any>>;
    /**
     * Retrieve a single course
     * @summary Retrieve
     * @param {CoursesApiCoursesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoursesApi
     */
    coursesRetrieve(requestParameters: CoursesApiCoursesRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<CourseResource, any>>;
    /**
     * Get a paginated list of upcoming Courses.
     * @summary List Upcoming
     * @param {CoursesApiCoursesUpcomingListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CoursesApi
     */
    coursesUpcomingList(requestParameters?: CoursesApiCoursesUpcomingListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedCourseResourceList, any>>;
}
/**
 * @export
 */
export declare const CoursesContentfilesListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type CoursesContentfilesListOfferedByEnum = typeof CoursesContentfilesListOfferedByEnum[keyof typeof CoursesContentfilesListOfferedByEnum];
/**
 * @export
 */
export declare const CoursesContentfilesListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type CoursesContentfilesListPlatformEnum = typeof CoursesContentfilesListPlatformEnum[keyof typeof CoursesContentfilesListPlatformEnum];
/**
 * @export
 */
export declare const CoursesListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type CoursesListDepartmentEnum = typeof CoursesListDepartmentEnum[keyof typeof CoursesListDepartmentEnum];
/**
 * @export
 */
export declare const CoursesListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type CoursesListLevelEnum = typeof CoursesListLevelEnum[keyof typeof CoursesListLevelEnum];
/**
 * @export
 */
export declare const CoursesListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type CoursesListOfferedByEnum = typeof CoursesListOfferedByEnum[keyof typeof CoursesListOfferedByEnum];
/**
 * @export
 */
export declare const CoursesListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type CoursesListPlatformEnum = typeof CoursesListPlatformEnum[keyof typeof CoursesListPlatformEnum];
/**
 * @export
 */
export declare const CoursesListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type CoursesListResourceTypeEnum = typeof CoursesListResourceTypeEnum[keyof typeof CoursesListResourceTypeEnum];
/**
 * @export
 */
export declare const CoursesListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type CoursesListSortbyEnum = typeof CoursesListSortbyEnum[keyof typeof CoursesListSortbyEnum];
/**
 * @export
 */
export declare const CoursesNewListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type CoursesNewListDepartmentEnum = typeof CoursesNewListDepartmentEnum[keyof typeof CoursesNewListDepartmentEnum];
/**
 * @export
 */
export declare const CoursesNewListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type CoursesNewListLevelEnum = typeof CoursesNewListLevelEnum[keyof typeof CoursesNewListLevelEnum];
/**
 * @export
 */
export declare const CoursesNewListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type CoursesNewListOfferedByEnum = typeof CoursesNewListOfferedByEnum[keyof typeof CoursesNewListOfferedByEnum];
/**
 * @export
 */
export declare const CoursesNewListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type CoursesNewListPlatformEnum = typeof CoursesNewListPlatformEnum[keyof typeof CoursesNewListPlatformEnum];
/**
 * @export
 */
export declare const CoursesNewListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type CoursesNewListResourceTypeEnum = typeof CoursesNewListResourceTypeEnum[keyof typeof CoursesNewListResourceTypeEnum];
/**
 * @export
 */
export declare const CoursesNewListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type CoursesNewListSortbyEnum = typeof CoursesNewListSortbyEnum[keyof typeof CoursesNewListSortbyEnum];
/**
 * @export
 */
export declare const CoursesUpcomingListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type CoursesUpcomingListDepartmentEnum = typeof CoursesUpcomingListDepartmentEnum[keyof typeof CoursesUpcomingListDepartmentEnum];
/**
 * @export
 */
export declare const CoursesUpcomingListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type CoursesUpcomingListLevelEnum = typeof CoursesUpcomingListLevelEnum[keyof typeof CoursesUpcomingListLevelEnum];
/**
 * @export
 */
export declare const CoursesUpcomingListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type CoursesUpcomingListOfferedByEnum = typeof CoursesUpcomingListOfferedByEnum[keyof typeof CoursesUpcomingListOfferedByEnum];
/**
 * @export
 */
export declare const CoursesUpcomingListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type CoursesUpcomingListPlatformEnum = typeof CoursesUpcomingListPlatformEnum[keyof typeof CoursesUpcomingListPlatformEnum];
/**
 * @export
 */
export declare const CoursesUpcomingListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type CoursesUpcomingListResourceTypeEnum = typeof CoursesUpcomingListResourceTypeEnum[keyof typeof CoursesUpcomingListResourceTypeEnum];
/**
 * @export
 */
export declare const CoursesUpcomingListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type CoursesUpcomingListSortbyEnum = typeof CoursesUpcomingListSortbyEnum[keyof typeof CoursesUpcomingListSortbyEnum];
/**
 * DepartmentsApi - axios parameter creator
 * @export
 */
export declare const DepartmentsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * MIT academic departments
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    departmentsList: (limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * MIT academic departments
     * @summary Retrieve
     * @param {string} department_id A unique value identifying this learning resource department.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    departmentsRetrieve: (department_id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DepartmentsApi - functional programming interface
 * @export
 */
export declare const DepartmentsApiFp: (configuration?: Configuration) => {
    /**
     * MIT academic departments
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    departmentsList(limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningResourceDepartmentList>>;
    /**
     * MIT academic departments
     * @summary Retrieve
     * @param {string} department_id A unique value identifying this learning resource department.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    departmentsRetrieve(department_id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningResourceDepartment>>;
};
/**
 * DepartmentsApi - factory interface
 * @export
 */
export declare const DepartmentsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * MIT academic departments
     * @summary List
     * @param {DepartmentsApiDepartmentsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    departmentsList(requestParameters?: DepartmentsApiDepartmentsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningResourceDepartmentList>;
    /**
     * MIT academic departments
     * @summary Retrieve
     * @param {DepartmentsApiDepartmentsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    departmentsRetrieve(requestParameters: DepartmentsApiDepartmentsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningResourceDepartment>;
};
/**
 * Request parameters for departmentsList operation in DepartmentsApi.
 * @export
 * @interface DepartmentsApiDepartmentsListRequest
 */
export interface DepartmentsApiDepartmentsListRequest {
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof DepartmentsApiDepartmentsList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof DepartmentsApiDepartmentsList
     */
    readonly offset?: number;
}
/**
 * Request parameters for departmentsRetrieve operation in DepartmentsApi.
 * @export
 * @interface DepartmentsApiDepartmentsRetrieveRequest
 */
export interface DepartmentsApiDepartmentsRetrieveRequest {
    /**
     * A unique value identifying this learning resource department.
     * @type {string}
     * @memberof DepartmentsApiDepartmentsRetrieve
     */
    readonly department_id: string;
}
/**
 * DepartmentsApi - object-oriented interface
 * @export
 * @class DepartmentsApi
 * @extends {BaseAPI}
 */
export declare class DepartmentsApi extends BaseAPI {
    /**
     * MIT academic departments
     * @summary List
     * @param {DepartmentsApiDepartmentsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DepartmentsApi
     */
    departmentsList(requestParameters?: DepartmentsApiDepartmentsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningResourceDepartmentList, any>>;
    /**
     * MIT academic departments
     * @summary Retrieve
     * @param {DepartmentsApiDepartmentsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DepartmentsApi
     */
    departmentsRetrieve(requestParameters: DepartmentsApiDepartmentsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningResourceDepartment, any>>;
}
/**
 * LearningResourcesApi - axios parameter creator
 * @export
 */
export declare const LearningResourcesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {Array<string>} [content_feature_type] Multiple values may be separated by commas.
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<LearningResourcesContentfilesListOfferedByEnum>} [offered_by] The organization that offers a learning resource the content file belongs to  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<LearningResourcesContentfilesListPlatformEnum>} [platform] The platform on which learning resources the content file belongs to is offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {Array<number>} [resource_id] Multiple values may be separated by commas.
     * @param {Array<number>} [run_id] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesContentfilesList: (learning_resource_id: number, content_feature_type?: Array<string>, limit?: number, offered_by?: Array<LearningResourcesContentfilesListOfferedByEnum>, offset?: number, platform?: Array<LearningResourcesContentfilesListPlatformEnum>, resource_id?: Array<number>, run_id?: Array<number>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File Retrieve
     * @param {number} id A unique integer value identifying this contentfile.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesContentfilesRetrieve: (id: number, learning_resource_id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {string} [sortby] Which field to use when ordering the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesItemsList: (learning_resource_id: number, limit?: number, offset?: number, sortby?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesItemsRetrieve: (id: number, learning_resource_id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of learning resources.
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<LearningResourcesListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<LearningResourcesListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<LearningResourcesListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<LearningResourcesListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<LearningResourcesListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {LearningResourcesListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesList: (course_feature?: Array<string>, department?: Array<LearningResourcesListDepartmentEnum>, level?: Array<LearningResourcesListLevelEnum>, limit?: number, offered_by?: Array<LearningResourcesListOfferedByEnum>, offset?: number, platform?: Array<LearningResourcesListPlatformEnum>, professional?: boolean, resource_type?: Array<LearningResourcesListResourceTypeEnum>, sortby?: LearningResourcesListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of newly released Learning Resources.
     * @summary List New
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<LearningResourcesNewListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<LearningResourcesNewListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<LearningResourcesNewListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<LearningResourcesNewListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<LearningResourcesNewListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {LearningResourcesNewListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesNewList: (course_feature?: Array<string>, department?: Array<LearningResourcesNewListDepartmentEnum>, level?: Array<LearningResourcesNewListLevelEnum>, limit?: number, offered_by?: Array<LearningResourcesNewListOfferedByEnum>, offset?: number, platform?: Array<LearningResourcesNewListPlatformEnum>, professional?: boolean, resource_type?: Array<LearningResourcesNewListResourceTypeEnum>, sortby?: LearningResourcesNewListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a single learning resource.
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesRetrieve: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of upcoming Learning Resources.
     * @summary List Upcoming
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<LearningResourcesUpcomingListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<LearningResourcesUpcomingListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<LearningResourcesUpcomingListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<LearningResourcesUpcomingListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<LearningResourcesUpcomingListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {LearningResourcesUpcomingListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesUpcomingList: (course_feature?: Array<string>, department?: Array<LearningResourcesUpcomingListDepartmentEnum>, level?: Array<LearningResourcesUpcomingListLevelEnum>, limit?: number, offered_by?: Array<LearningResourcesUpcomingListOfferedByEnum>, offset?: number, platform?: Array<LearningResourcesUpcomingListPlatformEnum>, professional?: boolean, resource_type?: Array<LearningResourcesUpcomingListResourceTypeEnum>, sortby?: LearningResourcesUpcomingListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LearningResourcesApi - functional programming interface
 * @export
 */
export declare const LearningResourcesApiFp: (configuration?: Configuration) => {
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {Array<string>} [content_feature_type] Multiple values may be separated by commas.
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<LearningResourcesContentfilesListOfferedByEnum>} [offered_by] The organization that offers a learning resource the content file belongs to  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<LearningResourcesContentfilesListPlatformEnum>} [platform] The platform on which learning resources the content file belongs to is offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {Array<number>} [resource_id] Multiple values may be separated by commas.
     * @param {Array<number>} [run_id] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesContentfilesList(learning_resource_id: number, content_feature_type?: Array<string>, limit?: number, offered_by?: Array<LearningResourcesContentfilesListOfferedByEnum>, offset?: number, platform?: Array<LearningResourcesContentfilesListPlatformEnum>, resource_id?: Array<number>, run_id?: Array<number>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedContentFileList>>;
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File Retrieve
     * @param {number} id A unique integer value identifying this contentfile.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesContentfilesRetrieve(id: number, learning_resource_id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ContentFile>>;
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {string} [sortby] Which field to use when ordering the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesItemsList(learning_resource_id: number, limit?: number, offset?: number, sortby?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningResourceRelationshipList>>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesItemsRetrieve(id: number, learning_resource_id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningResourceRelationship>>;
    /**
     * Get a paginated list of learning resources.
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<LearningResourcesListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<LearningResourcesListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<LearningResourcesListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<LearningResourcesListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<LearningResourcesListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {LearningResourcesListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesList(course_feature?: Array<string>, department?: Array<LearningResourcesListDepartmentEnum>, level?: Array<LearningResourcesListLevelEnum>, limit?: number, offered_by?: Array<LearningResourcesListOfferedByEnum>, offset?: number, platform?: Array<LearningResourcesListPlatformEnum>, professional?: boolean, resource_type?: Array<LearningResourcesListResourceTypeEnum>, sortby?: LearningResourcesListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningResourceList>>;
    /**
     * Get a paginated list of newly released Learning Resources.
     * @summary List New
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<LearningResourcesNewListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<LearningResourcesNewListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<LearningResourcesNewListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<LearningResourcesNewListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<LearningResourcesNewListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {LearningResourcesNewListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesNewList(course_feature?: Array<string>, department?: Array<LearningResourcesNewListDepartmentEnum>, level?: Array<LearningResourcesNewListLevelEnum>, limit?: number, offered_by?: Array<LearningResourcesNewListOfferedByEnum>, offset?: number, platform?: Array<LearningResourcesNewListPlatformEnum>, professional?: boolean, resource_type?: Array<LearningResourcesNewListResourceTypeEnum>, sortby?: LearningResourcesNewListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningResourceList>>;
    /**
     * Retrieve a single learning resource.
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesRetrieve(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningResource>>;
    /**
     * Get a paginated list of upcoming Learning Resources.
     * @summary List Upcoming
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<LearningResourcesUpcomingListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<LearningResourcesUpcomingListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<LearningResourcesUpcomingListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<LearningResourcesUpcomingListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<LearningResourcesUpcomingListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {LearningResourcesUpcomingListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesUpcomingList(course_feature?: Array<string>, department?: Array<LearningResourcesUpcomingListDepartmentEnum>, level?: Array<LearningResourcesUpcomingListLevelEnum>, limit?: number, offered_by?: Array<LearningResourcesUpcomingListOfferedByEnum>, offset?: number, platform?: Array<LearningResourcesUpcomingListPlatformEnum>, professional?: boolean, resource_type?: Array<LearningResourcesUpcomingListResourceTypeEnum>, sortby?: LearningResourcesUpcomingListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningResourceList>>;
};
/**
 * LearningResourcesApi - factory interface
 * @export
 */
export declare const LearningResourcesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File List
     * @param {LearningResourcesApiLearningResourcesContentfilesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesContentfilesList(requestParameters: LearningResourcesApiLearningResourcesContentfilesListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedContentFileList>;
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File Retrieve
     * @param {LearningResourcesApiLearningResourcesContentfilesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesContentfilesRetrieve(requestParameters: LearningResourcesApiLearningResourcesContentfilesRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<ContentFile>;
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {LearningResourcesApiLearningResourcesItemsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesItemsList(requestParameters: LearningResourcesApiLearningResourcesItemsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningResourceRelationshipList>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {LearningResourcesApiLearningResourcesItemsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesItemsRetrieve(requestParameters: LearningResourcesApiLearningResourcesItemsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningResourceRelationship>;
    /**
     * Get a paginated list of learning resources.
     * @summary List
     * @param {LearningResourcesApiLearningResourcesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesList(requestParameters?: LearningResourcesApiLearningResourcesListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningResourceList>;
    /**
     * Get a paginated list of newly released Learning Resources.
     * @summary List New
     * @param {LearningResourcesApiLearningResourcesNewListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesNewList(requestParameters?: LearningResourcesApiLearningResourcesNewListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningResourceList>;
    /**
     * Retrieve a single learning resource.
     * @summary Retrieve
     * @param {LearningResourcesApiLearningResourcesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesRetrieve(requestParameters: LearningResourcesApiLearningResourcesRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningResource>;
    /**
     * Get a paginated list of upcoming Learning Resources.
     * @summary List Upcoming
     * @param {LearningResourcesApiLearningResourcesUpcomingListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesUpcomingList(requestParameters?: LearningResourcesApiLearningResourcesUpcomingListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningResourceList>;
};
/**
 * Request parameters for learningResourcesContentfilesList operation in LearningResourcesApi.
 * @export
 * @interface LearningResourcesApiLearningResourcesContentfilesListRequest
 */
export interface LearningResourcesApiLearningResourcesContentfilesListRequest {
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesContentfilesList
     */
    readonly learning_resource_id: number;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof LearningResourcesApiLearningResourcesContentfilesList
     */
    readonly content_feature_type?: Array<string>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesContentfilesList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource the content file belongs to  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof LearningResourcesApiLearningResourcesContentfilesList
     */
    readonly offered_by?: Array<LearningResourcesContentfilesListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesContentfilesList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources the content file belongs to is offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof LearningResourcesApiLearningResourcesContentfilesList
     */
    readonly platform?: Array<LearningResourcesContentfilesListPlatformEnum>;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<number>}
     * @memberof LearningResourcesApiLearningResourcesContentfilesList
     */
    readonly resource_id?: Array<number>;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<number>}
     * @memberof LearningResourcesApiLearningResourcesContentfilesList
     */
    readonly run_id?: Array<number>;
}
/**
 * Request parameters for learningResourcesContentfilesRetrieve operation in LearningResourcesApi.
 * @export
 * @interface LearningResourcesApiLearningResourcesContentfilesRetrieveRequest
 */
export interface LearningResourcesApiLearningResourcesContentfilesRetrieveRequest {
    /**
     * A unique integer value identifying this contentfile.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesContentfilesRetrieve
     */
    readonly id: number;
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesContentfilesRetrieve
     */
    readonly learning_resource_id: number;
}
/**
 * Request parameters for learningResourcesItemsList operation in LearningResourcesApi.
 * @export
 * @interface LearningResourcesApiLearningResourcesItemsListRequest
 */
export interface LearningResourcesApiLearningResourcesItemsListRequest {
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesItemsList
     */
    readonly learning_resource_id: number;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesItemsList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesItemsList
     */
    readonly offset?: number;
    /**
     * Which field to use when ordering the results.
     * @type {string}
     * @memberof LearningResourcesApiLearningResourcesItemsList
     */
    readonly sortby?: string;
}
/**
 * Request parameters for learningResourcesItemsRetrieve operation in LearningResourcesApi.
 * @export
 * @interface LearningResourcesApiLearningResourcesItemsRetrieveRequest
 */
export interface LearningResourcesApiLearningResourcesItemsRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource relationship.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesItemsRetrieve
     */
    readonly id: number;
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesItemsRetrieve
     */
    readonly learning_resource_id: number;
}
/**
 * Request parameters for learningResourcesList operation in LearningResourcesApi.
 * @export
 * @interface LearningResourcesApiLearningResourcesListRequest
 */
export interface LearningResourcesApiLearningResourcesListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof LearningResourcesApiLearningResourcesList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof LearningResourcesApiLearningResourcesList
     */
    readonly department?: Array<LearningResourcesListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof LearningResourcesApiLearningResourcesList
     */
    readonly level?: Array<LearningResourcesListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof LearningResourcesApiLearningResourcesList
     */
    readonly offered_by?: Array<LearningResourcesListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof LearningResourcesApiLearningResourcesList
     */
    readonly platform?: Array<LearningResourcesListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof LearningResourcesApiLearningResourcesList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof LearningResourcesApiLearningResourcesList
     */
    readonly resource_type?: Array<LearningResourcesListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof LearningResourcesApiLearningResourcesList
     */
    readonly sortby?: LearningResourcesListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof LearningResourcesApiLearningResourcesList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for learningResourcesNewList operation in LearningResourcesApi.
 * @export
 * @interface LearningResourcesApiLearningResourcesNewListRequest
 */
export interface LearningResourcesApiLearningResourcesNewListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof LearningResourcesApiLearningResourcesNewList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof LearningResourcesApiLearningResourcesNewList
     */
    readonly department?: Array<LearningResourcesNewListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof LearningResourcesApiLearningResourcesNewList
     */
    readonly level?: Array<LearningResourcesNewListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesNewList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof LearningResourcesApiLearningResourcesNewList
     */
    readonly offered_by?: Array<LearningResourcesNewListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesNewList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof LearningResourcesApiLearningResourcesNewList
     */
    readonly platform?: Array<LearningResourcesNewListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof LearningResourcesApiLearningResourcesNewList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof LearningResourcesApiLearningResourcesNewList
     */
    readonly resource_type?: Array<LearningResourcesNewListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof LearningResourcesApiLearningResourcesNewList
     */
    readonly sortby?: LearningResourcesNewListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof LearningResourcesApiLearningResourcesNewList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for learningResourcesRetrieve operation in LearningResourcesApi.
 * @export
 * @interface LearningResourcesApiLearningResourcesRetrieveRequest
 */
export interface LearningResourcesApiLearningResourcesRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesRetrieve
     */
    readonly id: number;
}
/**
 * Request parameters for learningResourcesUpcomingList operation in LearningResourcesApi.
 * @export
 * @interface LearningResourcesApiLearningResourcesUpcomingListRequest
 */
export interface LearningResourcesApiLearningResourcesUpcomingListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof LearningResourcesApiLearningResourcesUpcomingList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof LearningResourcesApiLearningResourcesUpcomingList
     */
    readonly department?: Array<LearningResourcesUpcomingListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof LearningResourcesApiLearningResourcesUpcomingList
     */
    readonly level?: Array<LearningResourcesUpcomingListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesUpcomingList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof LearningResourcesApiLearningResourcesUpcomingList
     */
    readonly offered_by?: Array<LearningResourcesUpcomingListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof LearningResourcesApiLearningResourcesUpcomingList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof LearningResourcesApiLearningResourcesUpcomingList
     */
    readonly platform?: Array<LearningResourcesUpcomingListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof LearningResourcesApiLearningResourcesUpcomingList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof LearningResourcesApiLearningResourcesUpcomingList
     */
    readonly resource_type?: Array<LearningResourcesUpcomingListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof LearningResourcesApiLearningResourcesUpcomingList
     */
    readonly sortby?: LearningResourcesUpcomingListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof LearningResourcesApiLearningResourcesUpcomingList
     */
    readonly topic?: Array<string>;
}
/**
 * LearningResourcesApi - object-oriented interface
 * @export
 * @class LearningResourcesApi
 * @extends {BaseAPI}
 */
export declare class LearningResourcesApi extends BaseAPI {
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File List
     * @param {LearningResourcesApiLearningResourcesContentfilesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningResourcesApi
     */
    learningResourcesContentfilesList(requestParameters: LearningResourcesApiLearningResourcesContentfilesListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedContentFileList, any>>;
    /**
     * Show content files for a learning resource
     * @summary Learning Resource Content File Retrieve
     * @param {LearningResourcesApiLearningResourcesContentfilesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningResourcesApi
     */
    learningResourcesContentfilesRetrieve(requestParameters: LearningResourcesApiLearningResourcesContentfilesRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ContentFile, any>>;
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {LearningResourcesApiLearningResourcesItemsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningResourcesApi
     */
    learningResourcesItemsList(requestParameters: LearningResourcesApiLearningResourcesItemsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningResourceRelationshipList, any>>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {LearningResourcesApiLearningResourcesItemsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningResourcesApi
     */
    learningResourcesItemsRetrieve(requestParameters: LearningResourcesApiLearningResourcesItemsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningResourceRelationship, any>>;
    /**
     * Get a paginated list of learning resources.
     * @summary List
     * @param {LearningResourcesApiLearningResourcesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningResourcesApi
     */
    learningResourcesList(requestParameters?: LearningResourcesApiLearningResourcesListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningResourceList, any>>;
    /**
     * Get a paginated list of newly released Learning Resources.
     * @summary List New
     * @param {LearningResourcesApiLearningResourcesNewListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningResourcesApi
     */
    learningResourcesNewList(requestParameters?: LearningResourcesApiLearningResourcesNewListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningResourceList, any>>;
    /**
     * Retrieve a single learning resource.
     * @summary Retrieve
     * @param {LearningResourcesApiLearningResourcesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningResourcesApi
     */
    learningResourcesRetrieve(requestParameters: LearningResourcesApiLearningResourcesRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningResource, any>>;
    /**
     * Get a paginated list of upcoming Learning Resources.
     * @summary List Upcoming
     * @param {LearningResourcesApiLearningResourcesUpcomingListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningResourcesApi
     */
    learningResourcesUpcomingList(requestParameters?: LearningResourcesApiLearningResourcesUpcomingListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningResourceList, any>>;
}
/**
 * @export
 */
export declare const LearningResourcesContentfilesListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type LearningResourcesContentfilesListOfferedByEnum = typeof LearningResourcesContentfilesListOfferedByEnum[keyof typeof LearningResourcesContentfilesListOfferedByEnum];
/**
 * @export
 */
export declare const LearningResourcesContentfilesListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type LearningResourcesContentfilesListPlatformEnum = typeof LearningResourcesContentfilesListPlatformEnum[keyof typeof LearningResourcesContentfilesListPlatformEnum];
/**
 * @export
 */
export declare const LearningResourcesListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type LearningResourcesListDepartmentEnum = typeof LearningResourcesListDepartmentEnum[keyof typeof LearningResourcesListDepartmentEnum];
/**
 * @export
 */
export declare const LearningResourcesListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type LearningResourcesListLevelEnum = typeof LearningResourcesListLevelEnum[keyof typeof LearningResourcesListLevelEnum];
/**
 * @export
 */
export declare const LearningResourcesListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type LearningResourcesListOfferedByEnum = typeof LearningResourcesListOfferedByEnum[keyof typeof LearningResourcesListOfferedByEnum];
/**
 * @export
 */
export declare const LearningResourcesListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type LearningResourcesListPlatformEnum = typeof LearningResourcesListPlatformEnum[keyof typeof LearningResourcesListPlatformEnum];
/**
 * @export
 */
export declare const LearningResourcesListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type LearningResourcesListResourceTypeEnum = typeof LearningResourcesListResourceTypeEnum[keyof typeof LearningResourcesListResourceTypeEnum];
/**
 * @export
 */
export declare const LearningResourcesListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type LearningResourcesListSortbyEnum = typeof LearningResourcesListSortbyEnum[keyof typeof LearningResourcesListSortbyEnum];
/**
 * @export
 */
export declare const LearningResourcesNewListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type LearningResourcesNewListDepartmentEnum = typeof LearningResourcesNewListDepartmentEnum[keyof typeof LearningResourcesNewListDepartmentEnum];
/**
 * @export
 */
export declare const LearningResourcesNewListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type LearningResourcesNewListLevelEnum = typeof LearningResourcesNewListLevelEnum[keyof typeof LearningResourcesNewListLevelEnum];
/**
 * @export
 */
export declare const LearningResourcesNewListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type LearningResourcesNewListOfferedByEnum = typeof LearningResourcesNewListOfferedByEnum[keyof typeof LearningResourcesNewListOfferedByEnum];
/**
 * @export
 */
export declare const LearningResourcesNewListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type LearningResourcesNewListPlatformEnum = typeof LearningResourcesNewListPlatformEnum[keyof typeof LearningResourcesNewListPlatformEnum];
/**
 * @export
 */
export declare const LearningResourcesNewListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type LearningResourcesNewListResourceTypeEnum = typeof LearningResourcesNewListResourceTypeEnum[keyof typeof LearningResourcesNewListResourceTypeEnum];
/**
 * @export
 */
export declare const LearningResourcesNewListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type LearningResourcesNewListSortbyEnum = typeof LearningResourcesNewListSortbyEnum[keyof typeof LearningResourcesNewListSortbyEnum];
/**
 * @export
 */
export declare const LearningResourcesUpcomingListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type LearningResourcesUpcomingListDepartmentEnum = typeof LearningResourcesUpcomingListDepartmentEnum[keyof typeof LearningResourcesUpcomingListDepartmentEnum];
/**
 * @export
 */
export declare const LearningResourcesUpcomingListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type LearningResourcesUpcomingListLevelEnum = typeof LearningResourcesUpcomingListLevelEnum[keyof typeof LearningResourcesUpcomingListLevelEnum];
/**
 * @export
 */
export declare const LearningResourcesUpcomingListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type LearningResourcesUpcomingListOfferedByEnum = typeof LearningResourcesUpcomingListOfferedByEnum[keyof typeof LearningResourcesUpcomingListOfferedByEnum];
/**
 * @export
 */
export declare const LearningResourcesUpcomingListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type LearningResourcesUpcomingListPlatformEnum = typeof LearningResourcesUpcomingListPlatformEnum[keyof typeof LearningResourcesUpcomingListPlatformEnum];
/**
 * @export
 */
export declare const LearningResourcesUpcomingListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type LearningResourcesUpcomingListResourceTypeEnum = typeof LearningResourcesUpcomingListResourceTypeEnum[keyof typeof LearningResourcesUpcomingListResourceTypeEnum];
/**
 * @export
 */
export declare const LearningResourcesUpcomingListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type LearningResourcesUpcomingListSortbyEnum = typeof LearningResourcesUpcomingListSortbyEnum[keyof typeof LearningResourcesUpcomingListSortbyEnum];
/**
 * LearningResourcesSearchApi - axios parameter creator
 * @export
 */
export declare const LearningResourcesSearchApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Search for learning resources
     * @summary Search
     * @param {Array<LearningResourcesSearchRetrieveAggregationsEnum>} [aggregations] Show resource counts by category
     * @param {boolean | null} [certification] True if the learning resource offers a certificate
     * @param {Array<string>} [course_feature] The course feature. Possible options are at api/v1/course_features/
     * @param {Array<LearningResourcesSearchRetrieveDepartmentEnum>} [department] The department that offers the learning resource               * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<number>} [id] The id value for the learning resource
     * @param {Array<LearningResourcesSearchRetrieveLevelEnum>} [level]
     * @param {number} [limit] Number of results to return per page
     * @param {Array<LearningResourcesSearchRetrieveOfferedByEnum>} [offered_by] The organization that offers the learning resource               * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results
     * @param {Array<LearningResourcesSearchRetrievePlatformEnum>} [platform] The platform on which the learning resource id offered               * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean | null} [professional]
     * @param {string} [q] The search text
     * @param {Array<LearningResourcesSearchRetrieveResourceTypeEnum>} [resource_type] The type of learning resource               * &#x60;course&#x60; - course * &#x60;program&#x60; - program * &#x60;learning_path&#x60; - learning path * &#x60;podcast&#x60; - podcast * &#x60;podcast_episode&#x60; - podcast episode * &#x60;video&#x60; - video * &#x60;video_playlist&#x60; - video playlist
     * @param {LearningResourcesSearchRetrieveSortbyEnum} [sortby] If the parameter starts with \&#39;-\&#39; the sort is in descending order  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] The topic name. To see a list of options go to api/v1/topics/
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesSearchRetrieve: (aggregations?: Array<LearningResourcesSearchRetrieveAggregationsEnum>, certification?: boolean | null, course_feature?: Array<string>, department?: Array<LearningResourcesSearchRetrieveDepartmentEnum>, id?: Array<number>, level?: Array<LearningResourcesSearchRetrieveLevelEnum>, limit?: number, offered_by?: Array<LearningResourcesSearchRetrieveOfferedByEnum>, offset?: number, platform?: Array<LearningResourcesSearchRetrievePlatformEnum>, professional?: boolean | null, q?: string, resource_type?: Array<LearningResourcesSearchRetrieveResourceTypeEnum>, sortby?: LearningResourcesSearchRetrieveSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LearningResourcesSearchApi - functional programming interface
 * @export
 */
export declare const LearningResourcesSearchApiFp: (configuration?: Configuration) => {
    /**
     * Search for learning resources
     * @summary Search
     * @param {Array<LearningResourcesSearchRetrieveAggregationsEnum>} [aggregations] Show resource counts by category
     * @param {boolean | null} [certification] True if the learning resource offers a certificate
     * @param {Array<string>} [course_feature] The course feature. Possible options are at api/v1/course_features/
     * @param {Array<LearningResourcesSearchRetrieveDepartmentEnum>} [department] The department that offers the learning resource               * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<number>} [id] The id value for the learning resource
     * @param {Array<LearningResourcesSearchRetrieveLevelEnum>} [level]
     * @param {number} [limit] Number of results to return per page
     * @param {Array<LearningResourcesSearchRetrieveOfferedByEnum>} [offered_by] The organization that offers the learning resource               * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results
     * @param {Array<LearningResourcesSearchRetrievePlatformEnum>} [platform] The platform on which the learning resource id offered               * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean | null} [professional]
     * @param {string} [q] The search text
     * @param {Array<LearningResourcesSearchRetrieveResourceTypeEnum>} [resource_type] The type of learning resource               * &#x60;course&#x60; - course * &#x60;program&#x60; - program * &#x60;learning_path&#x60; - learning path * &#x60;podcast&#x60; - podcast * &#x60;podcast_episode&#x60; - podcast episode * &#x60;video&#x60; - video * &#x60;video_playlist&#x60; - video playlist
     * @param {LearningResourcesSearchRetrieveSortbyEnum} [sortby] If the parameter starts with \&#39;-\&#39; the sort is in descending order  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] The topic name. To see a list of options go to api/v1/topics/
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesSearchRetrieve(aggregations?: Array<LearningResourcesSearchRetrieveAggregationsEnum>, certification?: boolean | null, course_feature?: Array<string>, department?: Array<LearningResourcesSearchRetrieveDepartmentEnum>, id?: Array<number>, level?: Array<LearningResourcesSearchRetrieveLevelEnum>, limit?: number, offered_by?: Array<LearningResourcesSearchRetrieveOfferedByEnum>, offset?: number, platform?: Array<LearningResourcesSearchRetrievePlatformEnum>, professional?: boolean | null, q?: string, resource_type?: Array<LearningResourcesSearchRetrieveResourceTypeEnum>, sortby?: LearningResourcesSearchRetrieveSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningResourceSearchResponse>>;
};
/**
 * LearningResourcesSearchApi - factory interface
 * @export
 */
export declare const LearningResourcesSearchApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Search for learning resources
     * @summary Search
     * @param {LearningResourcesSearchApiLearningResourcesSearchRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningResourcesSearchRetrieve(requestParameters?: LearningResourcesSearchApiLearningResourcesSearchRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningResourceSearchResponse>;
};
/**
 * Request parameters for learningResourcesSearchRetrieve operation in LearningResourcesSearchApi.
 * @export
 * @interface LearningResourcesSearchApiLearningResourcesSearchRetrieveRequest
 */
export interface LearningResourcesSearchApiLearningResourcesSearchRetrieveRequest {
    /**
     * Show resource counts by category
     * @type {Array<'resource_type' | 'certification' | 'offered_by' | 'platform' | 'topic' | 'department' | 'level' | 'course_feature' | 'professional'>}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly aggregations?: Array<LearningResourcesSearchRetrieveAggregationsEnum>;
    /**
     * True if the learning resource offers a certificate
     * @type {boolean}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly certification?: boolean | null;
    /**
     * The course feature. Possible options are at api/v1/course_features/
     * @type {Array<string>}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers the learning resource               * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly department?: Array<LearningResourcesSearchRetrieveDepartmentEnum>;
    /**
     * The id value for the learning resource
     * @type {Array<number>}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly id?: Array<number>;
    /**
     *
     * @type {Array<'undergraduate' | 'graduate' | 'high_school' | 'noncredit' | 'advanced' | 'intermediate' | 'introductory'>}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly level?: Array<LearningResourcesSearchRetrieveLevelEnum>;
    /**
     * Number of results to return per page
     * @type {number}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly limit?: number;
    /**
     * The organization that offers the learning resource               * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'mitx' | 'ocw' | 'bootcamps' | 'xpro' | 'csail' | 'mitpe' | 'see' | 'scc' | 'ctl'>}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly offered_by?: Array<LearningResourcesSearchRetrieveOfferedByEnum>;
    /**
     * The initial index from which to return the results
     * @type {number}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly offset?: number;
    /**
     * The platform on which the learning resource id offered               * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'edx' | 'ocw' | 'oll' | 'mitxonline' | 'bootcamps' | 'xpro' | 'csail' | 'mitpe' | 'see' | 'scc' | 'ctl' | 'whu' | 'susskind' | 'globalalumni' | 'simplilearn' | 'emeritus' | 'podcast' | 'youtube'>}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly platform?: Array<LearningResourcesSearchRetrievePlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly professional?: boolean | null;
    /**
     * The search text
     * @type {string}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly q?: string;
    /**
     * The type of learning resource               * &#x60;course&#x60; - course * &#x60;program&#x60; - program * &#x60;learning_path&#x60; - learning path * &#x60;podcast&#x60; - podcast * &#x60;podcast_episode&#x60; - podcast episode * &#x60;video&#x60; - video * &#x60;video_playlist&#x60; - video playlist
     * @type {Array<'course' | 'program' | 'learning_path' | 'podcast' | 'podcast_episode' | 'video' | 'video_playlist'>}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly resource_type?: Array<LearningResourcesSearchRetrieveResourceTypeEnum>;
    /**
     * If the parameter starts with \&#39;-\&#39; the sort is in descending order  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'id' | '-id' | 'readable_id' | '-readable_id' | 'last_modified' | '-last_modified' | 'created_on' | '-created_on' | 'start_date' | '-start_date' | 'mitcoursenumber' | '-mitcoursenumber'}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly sortby?: LearningResourcesSearchRetrieveSortbyEnum;
    /**
     * The topic name. To see a list of options go to api/v1/topics/
     * @type {Array<string>}
     * @memberof LearningResourcesSearchApiLearningResourcesSearchRetrieve
     */
    readonly topic?: Array<string>;
}
/**
 * LearningResourcesSearchApi - object-oriented interface
 * @export
 * @class LearningResourcesSearchApi
 * @extends {BaseAPI}
 */
export declare class LearningResourcesSearchApi extends BaseAPI {
    /**
     * Search for learning resources
     * @summary Search
     * @param {LearningResourcesSearchApiLearningResourcesSearchRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningResourcesSearchApi
     */
    learningResourcesSearchRetrieve(requestParameters?: LearningResourcesSearchApiLearningResourcesSearchRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningResourceSearchResponse, any>>;
}
/**
 * @export
 */
export declare const LearningResourcesSearchRetrieveAggregationsEnum: {
    readonly ResourceType: "resource_type";
    readonly Certification: "certification";
    readonly OfferedBy: "offered_by";
    readonly Platform: "platform";
    readonly Topic: "topic";
    readonly Department: "department";
    readonly Level: "level";
    readonly CourseFeature: "course_feature";
    readonly Professional: "professional";
};
export type LearningResourcesSearchRetrieveAggregationsEnum = typeof LearningResourcesSearchRetrieveAggregationsEnum[keyof typeof LearningResourcesSearchRetrieveAggregationsEnum];
/**
 * @export
 */
export declare const LearningResourcesSearchRetrieveDepartmentEnum: {
    readonly _1: "1";
    readonly _2: "2";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type LearningResourcesSearchRetrieveDepartmentEnum = typeof LearningResourcesSearchRetrieveDepartmentEnum[keyof typeof LearningResourcesSearchRetrieveDepartmentEnum];
/**
 * @export
 */
export declare const LearningResourcesSearchRetrieveLevelEnum: {
    readonly Undergraduate: "undergraduate";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Noncredit: "noncredit";
    readonly Advanced: "advanced";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
};
export type LearningResourcesSearchRetrieveLevelEnum = typeof LearningResourcesSearchRetrieveLevelEnum[keyof typeof LearningResourcesSearchRetrieveLevelEnum];
/**
 * @export
 */
export declare const LearningResourcesSearchRetrieveOfferedByEnum: {
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Bootcamps: "bootcamps";
    readonly Xpro: "xpro";
    readonly Csail: "csail";
    readonly Mitpe: "mitpe";
    readonly See: "see";
    readonly Scc: "scc";
    readonly Ctl: "ctl";
};
export type LearningResourcesSearchRetrieveOfferedByEnum = typeof LearningResourcesSearchRetrieveOfferedByEnum[keyof typeof LearningResourcesSearchRetrieveOfferedByEnum];
/**
 * @export
 */
export declare const LearningResourcesSearchRetrievePlatformEnum: {
    readonly Edx: "edx";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Mitxonline: "mitxonline";
    readonly Bootcamps: "bootcamps";
    readonly Xpro: "xpro";
    readonly Csail: "csail";
    readonly Mitpe: "mitpe";
    readonly See: "see";
    readonly Scc: "scc";
    readonly Ctl: "ctl";
    readonly Whu: "whu";
    readonly Susskind: "susskind";
    readonly Globalalumni: "globalalumni";
    readonly Simplilearn: "simplilearn";
    readonly Emeritus: "emeritus";
    readonly Podcast: "podcast";
    readonly Youtube: "youtube";
};
export type LearningResourcesSearchRetrievePlatformEnum = typeof LearningResourcesSearchRetrievePlatformEnum[keyof typeof LearningResourcesSearchRetrievePlatformEnum];
/**
 * @export
 */
export declare const LearningResourcesSearchRetrieveResourceTypeEnum: {
    readonly Course: "course";
    readonly Program: "program";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type LearningResourcesSearchRetrieveResourceTypeEnum = typeof LearningResourcesSearchRetrieveResourceTypeEnum[keyof typeof LearningResourcesSearchRetrieveResourceTypeEnum];
/**
 * @export
 */
export declare const LearningResourcesSearchRetrieveSortbyEnum: {
    readonly Id: "id";
    readonly Id2: "-id";
    readonly ReadableId: "readable_id";
    readonly ReadableId2: "-readable_id";
    readonly LastModified: "last_modified";
    readonly LastModified2: "-last_modified";
    readonly CreatedOn: "created_on";
    readonly CreatedOn2: "-created_on";
    readonly StartDate: "start_date";
    readonly StartDate2: "-start_date";
    readonly Mitcoursenumber: "mitcoursenumber";
    readonly Mitcoursenumber2: "-mitcoursenumber";
};
export type LearningResourcesSearchRetrieveSortbyEnum = typeof LearningResourcesSearchRetrieveSortbyEnum[keyof typeof LearningResourcesSearchRetrieveSortbyEnum];
/**
 * LearningpathsApi - axios parameter creator
 * @export
 */
export declare const LearningpathsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a learning path
     * @summary Create
     * @param {LearningPathResourceRequest} LearningPathResourceRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsCreate: (LearningPathResourceRequest: LearningPathResourceRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove a learning path
     * @summary Destroy
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsDestroy: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Add
     * @param {number} learning_resource_id The learning resource id of the learning path
     * @param {LearningPathRelationshipRequest} LearningPathRelationshipRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsCreate: (learning_resource_id: number, LearningPathRelationshipRequest: LearningPathRelationshipRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Remove
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id The learning resource id of the learning path
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsDestroy: (id: number, learning_resource_id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {number} learning_resource_id The learning resource id of the learning path
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {string} [sortby] Which field to use when ordering the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsList: (learning_resource_id: number, limit?: number, offset?: number, sortby?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Update
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id The learning resource id of the learning path
     * @param {PatchedLearningPathRelationshipRequest} [PatchedLearningPathRelationshipRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsPartialUpdate: (id: number, learning_resource_id: number, PatchedLearningPathRelationshipRequest?: PatchedLearningPathRelationshipRequest | undefined, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id The learning resource id of the learning path
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsRetrieve: (id: number, learning_resource_id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of learning paths
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<LearningpathsListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<LearningpathsListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<LearningpathsListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<LearningpathsListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<LearningpathsListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {LearningpathsListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsList: (course_feature?: Array<string>, department?: Array<LearningpathsListDepartmentEnum>, level?: Array<LearningpathsListLevelEnum>, limit?: number, offered_by?: Array<LearningpathsListOfferedByEnum>, offset?: number, platform?: Array<LearningpathsListPlatformEnum>, professional?: boolean, resource_type?: Array<LearningpathsListResourceTypeEnum>, sortby?: LearningpathsListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update individual fields of a learning path
     * @summary Update
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {PatchedLearningPathResourceRequest} [PatchedLearningPathResourceRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsPartialUpdate: (id: number, PatchedLearningPathResourceRequest?: PatchedLearningPathResourceRequest | undefined, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrive a single learning path
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsRetrieve: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LearningpathsApi - functional programming interface
 * @export
 */
export declare const LearningpathsApiFp: (configuration?: Configuration) => {
    /**
     * Create a learning path
     * @summary Create
     * @param {LearningPathResourceRequest} LearningPathResourceRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsCreate(LearningPathResourceRequest: LearningPathResourceRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningPathResource>>;
    /**
     * Remove a learning path
     * @summary Destroy
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsDestroy(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Add
     * @param {number} learning_resource_id The learning resource id of the learning path
     * @param {LearningPathRelationshipRequest} LearningPathRelationshipRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsCreate(learning_resource_id: number, LearningPathRelationshipRequest: LearningPathRelationshipRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningPathRelationship>>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Remove
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id The learning resource id of the learning path
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsDestroy(id: number, learning_resource_id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {number} learning_resource_id The learning resource id of the learning path
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {string} [sortby] Which field to use when ordering the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsList(learning_resource_id: number, limit?: number, offset?: number, sortby?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningPathRelationshipList>>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Update
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id The learning resource id of the learning path
     * @param {PatchedLearningPathRelationshipRequest} [PatchedLearningPathRelationshipRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsPartialUpdate(id: number, learning_resource_id: number, PatchedLearningPathRelationshipRequest?: PatchedLearningPathRelationshipRequest | undefined, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningPathRelationship>>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id The learning resource id of the learning path
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsRetrieve(id: number, learning_resource_id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningPathRelationship>>;
    /**
     * Get a paginated list of learning paths
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<LearningpathsListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<LearningpathsListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<LearningpathsListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<LearningpathsListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<LearningpathsListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {LearningpathsListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsList(course_feature?: Array<string>, department?: Array<LearningpathsListDepartmentEnum>, level?: Array<LearningpathsListLevelEnum>, limit?: number, offered_by?: Array<LearningpathsListOfferedByEnum>, offset?: number, platform?: Array<LearningpathsListPlatformEnum>, professional?: boolean, resource_type?: Array<LearningpathsListResourceTypeEnum>, sortby?: LearningpathsListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningPathResourceList>>;
    /**
     * Update individual fields of a learning path
     * @summary Update
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {PatchedLearningPathResourceRequest} [PatchedLearningPathResourceRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsPartialUpdate(id: number, PatchedLearningPathResourceRequest?: PatchedLearningPathResourceRequest | undefined, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningPathResource>>;
    /**
     * Retrive a single learning path
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsRetrieve(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningPathResource>>;
};
/**
 * LearningpathsApi - factory interface
 * @export
 */
export declare const LearningpathsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a learning path
     * @summary Create
     * @param {LearningpathsApiLearningpathsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsCreate(requestParameters: LearningpathsApiLearningpathsCreateRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningPathResource>;
    /**
     * Remove a learning path
     * @summary Destroy
     * @param {LearningpathsApiLearningpathsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsDestroy(requestParameters: LearningpathsApiLearningpathsDestroyRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Add
     * @param {LearningpathsApiLearningpathsItemsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsCreate(requestParameters: LearningpathsApiLearningpathsItemsCreateRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningPathRelationship>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Remove
     * @param {LearningpathsApiLearningpathsItemsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsDestroy(requestParameters: LearningpathsApiLearningpathsItemsDestroyRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {LearningpathsApiLearningpathsItemsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsList(requestParameters: LearningpathsApiLearningpathsItemsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningPathRelationshipList>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Update
     * @param {LearningpathsApiLearningpathsItemsPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsPartialUpdate(requestParameters: LearningpathsApiLearningpathsItemsPartialUpdateRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningPathRelationship>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {LearningpathsApiLearningpathsItemsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsItemsRetrieve(requestParameters: LearningpathsApiLearningpathsItemsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningPathRelationship>;
    /**
     * Get a paginated list of learning paths
     * @summary List
     * @param {LearningpathsApiLearningpathsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsList(requestParameters?: LearningpathsApiLearningpathsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningPathResourceList>;
    /**
     * Update individual fields of a learning path
     * @summary Update
     * @param {LearningpathsApiLearningpathsPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsPartialUpdate(requestParameters: LearningpathsApiLearningpathsPartialUpdateRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningPathResource>;
    /**
     * Retrive a single learning path
     * @summary Retrieve
     * @param {LearningpathsApiLearningpathsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    learningpathsRetrieve(requestParameters: LearningpathsApiLearningpathsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningPathResource>;
};
/**
 * Request parameters for learningpathsCreate operation in LearningpathsApi.
 * @export
 * @interface LearningpathsApiLearningpathsCreateRequest
 */
export interface LearningpathsApiLearningpathsCreateRequest {
    /**
     *
     * @type {LearningPathResourceRequest}
     * @memberof LearningpathsApiLearningpathsCreate
     */
    readonly LearningPathResourceRequest: LearningPathResourceRequest;
}
/**
 * Request parameters for learningpathsDestroy operation in LearningpathsApi.
 * @export
 * @interface LearningpathsApiLearningpathsDestroyRequest
 */
export interface LearningpathsApiLearningpathsDestroyRequest {
    /**
     * A unique integer value identifying this learning resource.
     * @type {number}
     * @memberof LearningpathsApiLearningpathsDestroy
     */
    readonly id: number;
}
/**
 * Request parameters for learningpathsItemsCreate operation in LearningpathsApi.
 * @export
 * @interface LearningpathsApiLearningpathsItemsCreateRequest
 */
export interface LearningpathsApiLearningpathsItemsCreateRequest {
    /**
     * The learning resource id of the learning path
     * @type {number}
     * @memberof LearningpathsApiLearningpathsItemsCreate
     */
    readonly learning_resource_id: number;
    /**
     *
     * @type {LearningPathRelationshipRequest}
     * @memberof LearningpathsApiLearningpathsItemsCreate
     */
    readonly LearningPathRelationshipRequest: LearningPathRelationshipRequest;
}
/**
 * Request parameters for learningpathsItemsDestroy operation in LearningpathsApi.
 * @export
 * @interface LearningpathsApiLearningpathsItemsDestroyRequest
 */
export interface LearningpathsApiLearningpathsItemsDestroyRequest {
    /**
     * A unique integer value identifying this learning resource relationship.
     * @type {number}
     * @memberof LearningpathsApiLearningpathsItemsDestroy
     */
    readonly id: number;
    /**
     * The learning resource id of the learning path
     * @type {number}
     * @memberof LearningpathsApiLearningpathsItemsDestroy
     */
    readonly learning_resource_id: number;
}
/**
 * Request parameters for learningpathsItemsList operation in LearningpathsApi.
 * @export
 * @interface LearningpathsApiLearningpathsItemsListRequest
 */
export interface LearningpathsApiLearningpathsItemsListRequest {
    /**
     * The learning resource id of the learning path
     * @type {number}
     * @memberof LearningpathsApiLearningpathsItemsList
     */
    readonly learning_resource_id: number;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof LearningpathsApiLearningpathsItemsList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof LearningpathsApiLearningpathsItemsList
     */
    readonly offset?: number;
    /**
     * Which field to use when ordering the results.
     * @type {string}
     * @memberof LearningpathsApiLearningpathsItemsList
     */
    readonly sortby?: string;
}
/**
 * Request parameters for learningpathsItemsPartialUpdate operation in LearningpathsApi.
 * @export
 * @interface LearningpathsApiLearningpathsItemsPartialUpdateRequest
 */
export interface LearningpathsApiLearningpathsItemsPartialUpdateRequest {
    /**
     * A unique integer value identifying this learning resource relationship.
     * @type {number}
     * @memberof LearningpathsApiLearningpathsItemsPartialUpdate
     */
    readonly id: number;
    /**
     * The learning resource id of the learning path
     * @type {number}
     * @memberof LearningpathsApiLearningpathsItemsPartialUpdate
     */
    readonly learning_resource_id: number;
    /**
     *
     * @type {PatchedLearningPathRelationshipRequest}
     * @memberof LearningpathsApiLearningpathsItemsPartialUpdate
     */
    readonly PatchedLearningPathRelationshipRequest?: PatchedLearningPathRelationshipRequest;
}
/**
 * Request parameters for learningpathsItemsRetrieve operation in LearningpathsApi.
 * @export
 * @interface LearningpathsApiLearningpathsItemsRetrieveRequest
 */
export interface LearningpathsApiLearningpathsItemsRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource relationship.
     * @type {number}
     * @memberof LearningpathsApiLearningpathsItemsRetrieve
     */
    readonly id: number;
    /**
     * The learning resource id of the learning path
     * @type {number}
     * @memberof LearningpathsApiLearningpathsItemsRetrieve
     */
    readonly learning_resource_id: number;
}
/**
 * Request parameters for learningpathsList operation in LearningpathsApi.
 * @export
 * @interface LearningpathsApiLearningpathsListRequest
 */
export interface LearningpathsApiLearningpathsListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof LearningpathsApiLearningpathsList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof LearningpathsApiLearningpathsList
     */
    readonly department?: Array<LearningpathsListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof LearningpathsApiLearningpathsList
     */
    readonly level?: Array<LearningpathsListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof LearningpathsApiLearningpathsList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof LearningpathsApiLearningpathsList
     */
    readonly offered_by?: Array<LearningpathsListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof LearningpathsApiLearningpathsList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof LearningpathsApiLearningpathsList
     */
    readonly platform?: Array<LearningpathsListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof LearningpathsApiLearningpathsList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof LearningpathsApiLearningpathsList
     */
    readonly resource_type?: Array<LearningpathsListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof LearningpathsApiLearningpathsList
     */
    readonly sortby?: LearningpathsListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof LearningpathsApiLearningpathsList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for learningpathsPartialUpdate operation in LearningpathsApi.
 * @export
 * @interface LearningpathsApiLearningpathsPartialUpdateRequest
 */
export interface LearningpathsApiLearningpathsPartialUpdateRequest {
    /**
     * A unique integer value identifying this learning resource.
     * @type {number}
     * @memberof LearningpathsApiLearningpathsPartialUpdate
     */
    readonly id: number;
    /**
     *
     * @type {PatchedLearningPathResourceRequest}
     * @memberof LearningpathsApiLearningpathsPartialUpdate
     */
    readonly PatchedLearningPathResourceRequest?: PatchedLearningPathResourceRequest;
}
/**
 * Request parameters for learningpathsRetrieve operation in LearningpathsApi.
 * @export
 * @interface LearningpathsApiLearningpathsRetrieveRequest
 */
export interface LearningpathsApiLearningpathsRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource.
     * @type {number}
     * @memberof LearningpathsApiLearningpathsRetrieve
     */
    readonly id: number;
}
/**
 * LearningpathsApi - object-oriented interface
 * @export
 * @class LearningpathsApi
 * @extends {BaseAPI}
 */
export declare class LearningpathsApi extends BaseAPI {
    /**
     * Create a learning path
     * @summary Create
     * @param {LearningpathsApiLearningpathsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningpathsApi
     */
    learningpathsCreate(requestParameters: LearningpathsApiLearningpathsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningPathResource, any>>;
    /**
     * Remove a learning path
     * @summary Destroy
     * @param {LearningpathsApiLearningpathsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningpathsApi
     */
    learningpathsDestroy(requestParameters: LearningpathsApiLearningpathsDestroyRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Add
     * @param {LearningpathsApiLearningpathsItemsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningpathsApi
     */
    learningpathsItemsCreate(requestParameters: LearningpathsApiLearningpathsItemsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningPathRelationship, any>>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Remove
     * @param {LearningpathsApiLearningpathsItemsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningpathsApi
     */
    learningpathsItemsDestroy(requestParameters: LearningpathsApiLearningpathsItemsDestroyRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {LearningpathsApiLearningpathsItemsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningpathsApi
     */
    learningpathsItemsList(requestParameters: LearningpathsApiLearningpathsItemsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningPathRelationshipList, any>>;
    /**
     * Viewset for LearningPath related resources
     * @summary Learning Path Resource Relationship Update
     * @param {LearningpathsApiLearningpathsItemsPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningpathsApi
     */
    learningpathsItemsPartialUpdate(requestParameters: LearningpathsApiLearningpathsItemsPartialUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningPathRelationship, any>>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {LearningpathsApiLearningpathsItemsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningpathsApi
     */
    learningpathsItemsRetrieve(requestParameters: LearningpathsApiLearningpathsItemsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningPathRelationship, any>>;
    /**
     * Get a paginated list of learning paths
     * @summary List
     * @param {LearningpathsApiLearningpathsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningpathsApi
     */
    learningpathsList(requestParameters?: LearningpathsApiLearningpathsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningPathResourceList, any>>;
    /**
     * Update individual fields of a learning path
     * @summary Update
     * @param {LearningpathsApiLearningpathsPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningpathsApi
     */
    learningpathsPartialUpdate(requestParameters: LearningpathsApiLearningpathsPartialUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningPathResource, any>>;
    /**
     * Retrive a single learning path
     * @summary Retrieve
     * @param {LearningpathsApiLearningpathsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LearningpathsApi
     */
    learningpathsRetrieve(requestParameters: LearningpathsApiLearningpathsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningPathResource, any>>;
}
/**
 * @export
 */
export declare const LearningpathsListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type LearningpathsListDepartmentEnum = typeof LearningpathsListDepartmentEnum[keyof typeof LearningpathsListDepartmentEnum];
/**
 * @export
 */
export declare const LearningpathsListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type LearningpathsListLevelEnum = typeof LearningpathsListLevelEnum[keyof typeof LearningpathsListLevelEnum];
/**
 * @export
 */
export declare const LearningpathsListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type LearningpathsListOfferedByEnum = typeof LearningpathsListOfferedByEnum[keyof typeof LearningpathsListOfferedByEnum];
/**
 * @export
 */
export declare const LearningpathsListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type LearningpathsListPlatformEnum = typeof LearningpathsListPlatformEnum[keyof typeof LearningpathsListPlatformEnum];
/**
 * @export
 */
export declare const LearningpathsListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type LearningpathsListResourceTypeEnum = typeof LearningpathsListResourceTypeEnum[keyof typeof LearningpathsListResourceTypeEnum];
/**
 * @export
 */
export declare const LearningpathsListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type LearningpathsListSortbyEnum = typeof LearningpathsListSortbyEnum[keyof typeof LearningpathsListSortbyEnum];
/**
 * OfferorsApi - axios parameter creator
 * @export
 */
export declare const OfferorsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * MIT organizations that offer learning resources
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    offerorsList: (limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * MIT organizations that offer learning resources
     * @summary Retrieve
     * @param {string} code A unique value identifying this learning resource offeror.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    offerorsRetrieve: (code: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * OfferorsApi - functional programming interface
 * @export
 */
export declare const OfferorsApiFp: (configuration?: Configuration) => {
    /**
     * MIT organizations that offer learning resources
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    offerorsList(limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningResourceOfferorList>>;
    /**
     * MIT organizations that offer learning resources
     * @summary Retrieve
     * @param {string} code A unique value identifying this learning resource offeror.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    offerorsRetrieve(code: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningResourceOfferor>>;
};
/**
 * OfferorsApi - factory interface
 * @export
 */
export declare const OfferorsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * MIT organizations that offer learning resources
     * @summary List
     * @param {OfferorsApiOfferorsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    offerorsList(requestParameters?: OfferorsApiOfferorsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningResourceOfferorList>;
    /**
     * MIT organizations that offer learning resources
     * @summary Retrieve
     * @param {OfferorsApiOfferorsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    offerorsRetrieve(requestParameters: OfferorsApiOfferorsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningResourceOfferor>;
};
/**
 * Request parameters for offerorsList operation in OfferorsApi.
 * @export
 * @interface OfferorsApiOfferorsListRequest
 */
export interface OfferorsApiOfferorsListRequest {
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof OfferorsApiOfferorsList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof OfferorsApiOfferorsList
     */
    readonly offset?: number;
}
/**
 * Request parameters for offerorsRetrieve operation in OfferorsApi.
 * @export
 * @interface OfferorsApiOfferorsRetrieveRequest
 */
export interface OfferorsApiOfferorsRetrieveRequest {
    /**
     * A unique value identifying this learning resource offeror.
     * @type {string}
     * @memberof OfferorsApiOfferorsRetrieve
     */
    readonly code: string;
}
/**
 * OfferorsApi - object-oriented interface
 * @export
 * @class OfferorsApi
 * @extends {BaseAPI}
 */
export declare class OfferorsApi extends BaseAPI {
    /**
     * MIT organizations that offer learning resources
     * @summary List
     * @param {OfferorsApiOfferorsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OfferorsApi
     */
    offerorsList(requestParameters?: OfferorsApiOfferorsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningResourceOfferorList, any>>;
    /**
     * MIT organizations that offer learning resources
     * @summary Retrieve
     * @param {OfferorsApiOfferorsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OfferorsApi
     */
    offerorsRetrieve(requestParameters: OfferorsApiOfferorsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningResourceOfferor, any>>;
}
/**
 * PlatformsApi - axios parameter creator
 * @export
 */
export declare const PlatformsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Platforms on which learning resources are hosted
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsList: (limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Platforms on which learning resources are hosted
     * @summary Retrieve
     * @param {string} code A unique value identifying this learning resource platform.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsRetrieve: (code: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PlatformsApi - functional programming interface
 * @export
 */
export declare const PlatformsApiFp: (configuration?: Configuration) => {
    /**
     * Platforms on which learning resources are hosted
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsList(limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningResourcePlatformList>>;
    /**
     * Platforms on which learning resources are hosted
     * @summary Retrieve
     * @param {string} code A unique value identifying this learning resource platform.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsRetrieve(code: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningResourcePlatform>>;
};
/**
 * PlatformsApi - factory interface
 * @export
 */
export declare const PlatformsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Platforms on which learning resources are hosted
     * @summary List
     * @param {PlatformsApiPlatformsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsList(requestParameters?: PlatformsApiPlatformsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningResourcePlatformList>;
    /**
     * Platforms on which learning resources are hosted
     * @summary Retrieve
     * @param {PlatformsApiPlatformsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    platformsRetrieve(requestParameters: PlatformsApiPlatformsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningResourcePlatform>;
};
/**
 * Request parameters for platformsList operation in PlatformsApi.
 * @export
 * @interface PlatformsApiPlatformsListRequest
 */
export interface PlatformsApiPlatformsListRequest {
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof PlatformsApiPlatformsList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof PlatformsApiPlatformsList
     */
    readonly offset?: number;
}
/**
 * Request parameters for platformsRetrieve operation in PlatformsApi.
 * @export
 * @interface PlatformsApiPlatformsRetrieveRequest
 */
export interface PlatformsApiPlatformsRetrieveRequest {
    /**
     * A unique value identifying this learning resource platform.
     * @type {string}
     * @memberof PlatformsApiPlatformsRetrieve
     */
    readonly code: string;
}
/**
 * PlatformsApi - object-oriented interface
 * @export
 * @class PlatformsApi
 * @extends {BaseAPI}
 */
export declare class PlatformsApi extends BaseAPI {
    /**
     * Platforms on which learning resources are hosted
     * @summary List
     * @param {PlatformsApiPlatformsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApi
     */
    platformsList(requestParameters?: PlatformsApiPlatformsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningResourcePlatformList, any>>;
    /**
     * Platforms on which learning resources are hosted
     * @summary Retrieve
     * @param {PlatformsApiPlatformsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PlatformsApi
     */
    platformsRetrieve(requestParameters: PlatformsApiPlatformsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningResourcePlatform, any>>;
}
/**
 * PodcastEpisodesApi - axios parameter creator
 * @export
 */
export declare const PodcastEpisodesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get a paginated list of podcast episodes
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<PodcastEpisodesListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<PodcastEpisodesListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<PodcastEpisodesListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<PodcastEpisodesListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<PodcastEpisodesListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {PodcastEpisodesListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastEpisodesList: (course_feature?: Array<string>, department?: Array<PodcastEpisodesListDepartmentEnum>, level?: Array<PodcastEpisodesListLevelEnum>, limit?: number, offered_by?: Array<PodcastEpisodesListOfferedByEnum>, offset?: number, platform?: Array<PodcastEpisodesListPlatformEnum>, professional?: boolean, resource_type?: Array<PodcastEpisodesListResourceTypeEnum>, sortby?: PodcastEpisodesListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a single podcast episode
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastEpisodesRetrieve: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PodcastEpisodesApi - functional programming interface
 * @export
 */
export declare const PodcastEpisodesApiFp: (configuration?: Configuration) => {
    /**
     * Get a paginated list of podcast episodes
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<PodcastEpisodesListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<PodcastEpisodesListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<PodcastEpisodesListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<PodcastEpisodesListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<PodcastEpisodesListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {PodcastEpisodesListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastEpisodesList(course_feature?: Array<string>, department?: Array<PodcastEpisodesListDepartmentEnum>, level?: Array<PodcastEpisodesListLevelEnum>, limit?: number, offered_by?: Array<PodcastEpisodesListOfferedByEnum>, offset?: number, platform?: Array<PodcastEpisodesListPlatformEnum>, professional?: boolean, resource_type?: Array<PodcastEpisodesListResourceTypeEnum>, sortby?: PodcastEpisodesListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedPodcastEpisodeResourceList>>;
    /**
     * Retrieve a single podcast episode
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastEpisodesRetrieve(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PodcastEpisodeResource>>;
};
/**
 * PodcastEpisodesApi - factory interface
 * @export
 */
export declare const PodcastEpisodesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get a paginated list of podcast episodes
     * @summary List
     * @param {PodcastEpisodesApiPodcastEpisodesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastEpisodesList(requestParameters?: PodcastEpisodesApiPodcastEpisodesListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedPodcastEpisodeResourceList>;
    /**
     * Retrieve a single podcast episode
     * @summary Retrieve
     * @param {PodcastEpisodesApiPodcastEpisodesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastEpisodesRetrieve(requestParameters: PodcastEpisodesApiPodcastEpisodesRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<PodcastEpisodeResource>;
};
/**
 * Request parameters for podcastEpisodesList operation in PodcastEpisodesApi.
 * @export
 * @interface PodcastEpisodesApiPodcastEpisodesListRequest
 */
export interface PodcastEpisodesApiPodcastEpisodesListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof PodcastEpisodesApiPodcastEpisodesList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof PodcastEpisodesApiPodcastEpisodesList
     */
    readonly department?: Array<PodcastEpisodesListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof PodcastEpisodesApiPodcastEpisodesList
     */
    readonly level?: Array<PodcastEpisodesListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof PodcastEpisodesApiPodcastEpisodesList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof PodcastEpisodesApiPodcastEpisodesList
     */
    readonly offered_by?: Array<PodcastEpisodesListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof PodcastEpisodesApiPodcastEpisodesList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof PodcastEpisodesApiPodcastEpisodesList
     */
    readonly platform?: Array<PodcastEpisodesListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof PodcastEpisodesApiPodcastEpisodesList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof PodcastEpisodesApiPodcastEpisodesList
     */
    readonly resource_type?: Array<PodcastEpisodesListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof PodcastEpisodesApiPodcastEpisodesList
     */
    readonly sortby?: PodcastEpisodesListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof PodcastEpisodesApiPodcastEpisodesList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for podcastEpisodesRetrieve operation in PodcastEpisodesApi.
 * @export
 * @interface PodcastEpisodesApiPodcastEpisodesRetrieveRequest
 */
export interface PodcastEpisodesApiPodcastEpisodesRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource.
     * @type {number}
     * @memberof PodcastEpisodesApiPodcastEpisodesRetrieve
     */
    readonly id: number;
}
/**
 * PodcastEpisodesApi - object-oriented interface
 * @export
 * @class PodcastEpisodesApi
 * @extends {BaseAPI}
 */
export declare class PodcastEpisodesApi extends BaseAPI {
    /**
     * Get a paginated list of podcast episodes
     * @summary List
     * @param {PodcastEpisodesApiPodcastEpisodesListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PodcastEpisodesApi
     */
    podcastEpisodesList(requestParameters?: PodcastEpisodesApiPodcastEpisodesListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedPodcastEpisodeResourceList, any>>;
    /**
     * Retrieve a single podcast episode
     * @summary Retrieve
     * @param {PodcastEpisodesApiPodcastEpisodesRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PodcastEpisodesApi
     */
    podcastEpisodesRetrieve(requestParameters: PodcastEpisodesApiPodcastEpisodesRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PodcastEpisodeResource, any>>;
}
/**
 * @export
 */
export declare const PodcastEpisodesListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type PodcastEpisodesListDepartmentEnum = typeof PodcastEpisodesListDepartmentEnum[keyof typeof PodcastEpisodesListDepartmentEnum];
/**
 * @export
 */
export declare const PodcastEpisodesListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type PodcastEpisodesListLevelEnum = typeof PodcastEpisodesListLevelEnum[keyof typeof PodcastEpisodesListLevelEnum];
/**
 * @export
 */
export declare const PodcastEpisodesListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type PodcastEpisodesListOfferedByEnum = typeof PodcastEpisodesListOfferedByEnum[keyof typeof PodcastEpisodesListOfferedByEnum];
/**
 * @export
 */
export declare const PodcastEpisodesListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type PodcastEpisodesListPlatformEnum = typeof PodcastEpisodesListPlatformEnum[keyof typeof PodcastEpisodesListPlatformEnum];
/**
 * @export
 */
export declare const PodcastEpisodesListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type PodcastEpisodesListResourceTypeEnum = typeof PodcastEpisodesListResourceTypeEnum[keyof typeof PodcastEpisodesListResourceTypeEnum];
/**
 * @export
 */
export declare const PodcastEpisodesListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type PodcastEpisodesListSortbyEnum = typeof PodcastEpisodesListSortbyEnum[keyof typeof PodcastEpisodesListSortbyEnum];
/**
 * PodcastsApi - axios parameter creator
 * @export
 */
export declare const PodcastsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {string} [sortby] Which field to use when ordering the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsItemsList: (learning_resource_id: number, limit?: number, offset?: number, sortby?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsItemsRetrieve: (id: number, learning_resource_id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of podcasts
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<PodcastsListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<PodcastsListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<PodcastsListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<PodcastsListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<PodcastsListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {PodcastsListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsList: (course_feature?: Array<string>, department?: Array<PodcastsListDepartmentEnum>, level?: Array<PodcastsListLevelEnum>, limit?: number, offered_by?: Array<PodcastsListOfferedByEnum>, offset?: number, platform?: Array<PodcastsListPlatformEnum>, professional?: boolean, resource_type?: Array<PodcastsListResourceTypeEnum>, sortby?: PodcastsListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a single podcast
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsRetrieve: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PodcastsApi - functional programming interface
 * @export
 */
export declare const PodcastsApiFp: (configuration?: Configuration) => {
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {string} [sortby] Which field to use when ordering the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsItemsList(learning_resource_id: number, limit?: number, offset?: number, sortby?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningResourceRelationshipList>>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsItemsRetrieve(id: number, learning_resource_id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningResourceRelationship>>;
    /**
     * Get a paginated list of podcasts
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<PodcastsListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<PodcastsListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<PodcastsListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<PodcastsListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<PodcastsListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {PodcastsListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsList(course_feature?: Array<string>, department?: Array<PodcastsListDepartmentEnum>, level?: Array<PodcastsListLevelEnum>, limit?: number, offered_by?: Array<PodcastsListOfferedByEnum>, offset?: number, platform?: Array<PodcastsListPlatformEnum>, professional?: boolean, resource_type?: Array<PodcastsListResourceTypeEnum>, sortby?: PodcastsListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedPodcastResourceList>>;
    /**
     * Retrieve a single podcast
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsRetrieve(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PodcastResource>>;
};
/**
 * PodcastsApi - factory interface
 * @export
 */
export declare const PodcastsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {PodcastsApiPodcastsItemsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsItemsList(requestParameters: PodcastsApiPodcastsItemsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningResourceRelationshipList>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {PodcastsApiPodcastsItemsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsItemsRetrieve(requestParameters: PodcastsApiPodcastsItemsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningResourceRelationship>;
    /**
     * Get a paginated list of podcasts
     * @summary List
     * @param {PodcastsApiPodcastsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsList(requestParameters?: PodcastsApiPodcastsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedPodcastResourceList>;
    /**
     * Retrieve a single podcast
     * @summary Retrieve
     * @param {PodcastsApiPodcastsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    podcastsRetrieve(requestParameters: PodcastsApiPodcastsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<PodcastResource>;
};
/**
 * Request parameters for podcastsItemsList operation in PodcastsApi.
 * @export
 * @interface PodcastsApiPodcastsItemsListRequest
 */
export interface PodcastsApiPodcastsItemsListRequest {
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof PodcastsApiPodcastsItemsList
     */
    readonly learning_resource_id: number;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof PodcastsApiPodcastsItemsList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof PodcastsApiPodcastsItemsList
     */
    readonly offset?: number;
    /**
     * Which field to use when ordering the results.
     * @type {string}
     * @memberof PodcastsApiPodcastsItemsList
     */
    readonly sortby?: string;
}
/**
 * Request parameters for podcastsItemsRetrieve operation in PodcastsApi.
 * @export
 * @interface PodcastsApiPodcastsItemsRetrieveRequest
 */
export interface PodcastsApiPodcastsItemsRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource relationship.
     * @type {number}
     * @memberof PodcastsApiPodcastsItemsRetrieve
     */
    readonly id: number;
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof PodcastsApiPodcastsItemsRetrieve
     */
    readonly learning_resource_id: number;
}
/**
 * Request parameters for podcastsList operation in PodcastsApi.
 * @export
 * @interface PodcastsApiPodcastsListRequest
 */
export interface PodcastsApiPodcastsListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof PodcastsApiPodcastsList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof PodcastsApiPodcastsList
     */
    readonly department?: Array<PodcastsListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof PodcastsApiPodcastsList
     */
    readonly level?: Array<PodcastsListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof PodcastsApiPodcastsList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof PodcastsApiPodcastsList
     */
    readonly offered_by?: Array<PodcastsListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof PodcastsApiPodcastsList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof PodcastsApiPodcastsList
     */
    readonly platform?: Array<PodcastsListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof PodcastsApiPodcastsList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof PodcastsApiPodcastsList
     */
    readonly resource_type?: Array<PodcastsListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof PodcastsApiPodcastsList
     */
    readonly sortby?: PodcastsListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof PodcastsApiPodcastsList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for podcastsRetrieve operation in PodcastsApi.
 * @export
 * @interface PodcastsApiPodcastsRetrieveRequest
 */
export interface PodcastsApiPodcastsRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource.
     * @type {number}
     * @memberof PodcastsApiPodcastsRetrieve
     */
    readonly id: number;
}
/**
 * PodcastsApi - object-oriented interface
 * @export
 * @class PodcastsApi
 * @extends {BaseAPI}
 */
export declare class PodcastsApi extends BaseAPI {
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {PodcastsApiPodcastsItemsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PodcastsApi
     */
    podcastsItemsList(requestParameters: PodcastsApiPodcastsItemsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningResourceRelationshipList, any>>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {PodcastsApiPodcastsItemsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PodcastsApi
     */
    podcastsItemsRetrieve(requestParameters: PodcastsApiPodcastsItemsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningResourceRelationship, any>>;
    /**
     * Get a paginated list of podcasts
     * @summary List
     * @param {PodcastsApiPodcastsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PodcastsApi
     */
    podcastsList(requestParameters?: PodcastsApiPodcastsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedPodcastResourceList, any>>;
    /**
     * Retrieve a single podcast
     * @summary Retrieve
     * @param {PodcastsApiPodcastsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PodcastsApi
     */
    podcastsRetrieve(requestParameters: PodcastsApiPodcastsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PodcastResource, any>>;
}
/**
 * @export
 */
export declare const PodcastsListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type PodcastsListDepartmentEnum = typeof PodcastsListDepartmentEnum[keyof typeof PodcastsListDepartmentEnum];
/**
 * @export
 */
export declare const PodcastsListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type PodcastsListLevelEnum = typeof PodcastsListLevelEnum[keyof typeof PodcastsListLevelEnum];
/**
 * @export
 */
export declare const PodcastsListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type PodcastsListOfferedByEnum = typeof PodcastsListOfferedByEnum[keyof typeof PodcastsListOfferedByEnum];
/**
 * @export
 */
export declare const PodcastsListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type PodcastsListPlatformEnum = typeof PodcastsListPlatformEnum[keyof typeof PodcastsListPlatformEnum];
/**
 * @export
 */
export declare const PodcastsListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type PodcastsListResourceTypeEnum = typeof PodcastsListResourceTypeEnum[keyof typeof PodcastsListResourceTypeEnum];
/**
 * @export
 */
export declare const PodcastsListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type PodcastsListSortbyEnum = typeof PodcastsListSortbyEnum[keyof typeof PodcastsListSortbyEnum];
/**
 * ProgramsApi - axios parameter creator
 * @export
 */
export declare const ProgramsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get a paginated list of programs
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<ProgramsListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<ProgramsListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<ProgramsListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<ProgramsListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<ProgramsListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {ProgramsListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsList: (course_feature?: Array<string>, department?: Array<ProgramsListDepartmentEnum>, level?: Array<ProgramsListLevelEnum>, limit?: number, offered_by?: Array<ProgramsListOfferedByEnum>, offset?: number, platform?: Array<ProgramsListPlatformEnum>, professional?: boolean, resource_type?: Array<ProgramsListResourceTypeEnum>, sortby?: ProgramsListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of newly released Programs.
     * @summary List New
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<ProgramsNewListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<ProgramsNewListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<ProgramsNewListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<ProgramsNewListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<ProgramsNewListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {ProgramsNewListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsNewList: (course_feature?: Array<string>, department?: Array<ProgramsNewListDepartmentEnum>, level?: Array<ProgramsNewListLevelEnum>, limit?: number, offered_by?: Array<ProgramsNewListOfferedByEnum>, offset?: number, platform?: Array<ProgramsNewListPlatformEnum>, professional?: boolean, resource_type?: Array<ProgramsNewListResourceTypeEnum>, sortby?: ProgramsNewListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a single program
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsRetrieve: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of upcoming Programs.
     * @summary List Upcoming
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<ProgramsUpcomingListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<ProgramsUpcomingListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<ProgramsUpcomingListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<ProgramsUpcomingListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<ProgramsUpcomingListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {ProgramsUpcomingListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsUpcomingList: (course_feature?: Array<string>, department?: Array<ProgramsUpcomingListDepartmentEnum>, level?: Array<ProgramsUpcomingListLevelEnum>, limit?: number, offered_by?: Array<ProgramsUpcomingListOfferedByEnum>, offset?: number, platform?: Array<ProgramsUpcomingListPlatformEnum>, professional?: boolean, resource_type?: Array<ProgramsUpcomingListResourceTypeEnum>, sortby?: ProgramsUpcomingListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ProgramsApi - functional programming interface
 * @export
 */
export declare const ProgramsApiFp: (configuration?: Configuration) => {
    /**
     * Get a paginated list of programs
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<ProgramsListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<ProgramsListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<ProgramsListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<ProgramsListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<ProgramsListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {ProgramsListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsList(course_feature?: Array<string>, department?: Array<ProgramsListDepartmentEnum>, level?: Array<ProgramsListLevelEnum>, limit?: number, offered_by?: Array<ProgramsListOfferedByEnum>, offset?: number, platform?: Array<ProgramsListPlatformEnum>, professional?: boolean, resource_type?: Array<ProgramsListResourceTypeEnum>, sortby?: ProgramsListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedProgramResourceList>>;
    /**
     * Get a paginated list of newly released Programs.
     * @summary List New
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<ProgramsNewListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<ProgramsNewListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<ProgramsNewListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<ProgramsNewListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<ProgramsNewListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {ProgramsNewListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsNewList(course_feature?: Array<string>, department?: Array<ProgramsNewListDepartmentEnum>, level?: Array<ProgramsNewListLevelEnum>, limit?: number, offered_by?: Array<ProgramsNewListOfferedByEnum>, offset?: number, platform?: Array<ProgramsNewListPlatformEnum>, professional?: boolean, resource_type?: Array<ProgramsNewListResourceTypeEnum>, sortby?: ProgramsNewListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedProgramResourceList>>;
    /**
     * Retrieve a single program
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsRetrieve(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProgramResource>>;
    /**
     * Get a paginated list of upcoming Programs.
     * @summary List Upcoming
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<ProgramsUpcomingListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<ProgramsUpcomingListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<ProgramsUpcomingListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<ProgramsUpcomingListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<ProgramsUpcomingListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {ProgramsUpcomingListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsUpcomingList(course_feature?: Array<string>, department?: Array<ProgramsUpcomingListDepartmentEnum>, level?: Array<ProgramsUpcomingListLevelEnum>, limit?: number, offered_by?: Array<ProgramsUpcomingListOfferedByEnum>, offset?: number, platform?: Array<ProgramsUpcomingListPlatformEnum>, professional?: boolean, resource_type?: Array<ProgramsUpcomingListResourceTypeEnum>, sortby?: ProgramsUpcomingListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedProgramResourceList>>;
};
/**
 * ProgramsApi - factory interface
 * @export
 */
export declare const ProgramsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get a paginated list of programs
     * @summary List
     * @param {ProgramsApiProgramsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsList(requestParameters?: ProgramsApiProgramsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedProgramResourceList>;
    /**
     * Get a paginated list of newly released Programs.
     * @summary List New
     * @param {ProgramsApiProgramsNewListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsNewList(requestParameters?: ProgramsApiProgramsNewListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedProgramResourceList>;
    /**
     * Retrieve a single program
     * @summary Retrieve
     * @param {ProgramsApiProgramsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsRetrieve(requestParameters: ProgramsApiProgramsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<ProgramResource>;
    /**
     * Get a paginated list of upcoming Programs.
     * @summary List Upcoming
     * @param {ProgramsApiProgramsUpcomingListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    programsUpcomingList(requestParameters?: ProgramsApiProgramsUpcomingListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedProgramResourceList>;
};
/**
 * Request parameters for programsList operation in ProgramsApi.
 * @export
 * @interface ProgramsApiProgramsListRequest
 */
export interface ProgramsApiProgramsListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof ProgramsApiProgramsList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof ProgramsApiProgramsList
     */
    readonly department?: Array<ProgramsListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof ProgramsApiProgramsList
     */
    readonly level?: Array<ProgramsListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof ProgramsApiProgramsList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof ProgramsApiProgramsList
     */
    readonly offered_by?: Array<ProgramsListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof ProgramsApiProgramsList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof ProgramsApiProgramsList
     */
    readonly platform?: Array<ProgramsListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof ProgramsApiProgramsList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof ProgramsApiProgramsList
     */
    readonly resource_type?: Array<ProgramsListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof ProgramsApiProgramsList
     */
    readonly sortby?: ProgramsListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof ProgramsApiProgramsList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for programsNewList operation in ProgramsApi.
 * @export
 * @interface ProgramsApiProgramsNewListRequest
 */
export interface ProgramsApiProgramsNewListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof ProgramsApiProgramsNewList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof ProgramsApiProgramsNewList
     */
    readonly department?: Array<ProgramsNewListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof ProgramsApiProgramsNewList
     */
    readonly level?: Array<ProgramsNewListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof ProgramsApiProgramsNewList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof ProgramsApiProgramsNewList
     */
    readonly offered_by?: Array<ProgramsNewListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof ProgramsApiProgramsNewList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof ProgramsApiProgramsNewList
     */
    readonly platform?: Array<ProgramsNewListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof ProgramsApiProgramsNewList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof ProgramsApiProgramsNewList
     */
    readonly resource_type?: Array<ProgramsNewListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof ProgramsApiProgramsNewList
     */
    readonly sortby?: ProgramsNewListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof ProgramsApiProgramsNewList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for programsRetrieve operation in ProgramsApi.
 * @export
 * @interface ProgramsApiProgramsRetrieveRequest
 */
export interface ProgramsApiProgramsRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource.
     * @type {number}
     * @memberof ProgramsApiProgramsRetrieve
     */
    readonly id: number;
}
/**
 * Request parameters for programsUpcomingList operation in ProgramsApi.
 * @export
 * @interface ProgramsApiProgramsUpcomingListRequest
 */
export interface ProgramsApiProgramsUpcomingListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof ProgramsApiProgramsUpcomingList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof ProgramsApiProgramsUpcomingList
     */
    readonly department?: Array<ProgramsUpcomingListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof ProgramsApiProgramsUpcomingList
     */
    readonly level?: Array<ProgramsUpcomingListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof ProgramsApiProgramsUpcomingList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof ProgramsApiProgramsUpcomingList
     */
    readonly offered_by?: Array<ProgramsUpcomingListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof ProgramsApiProgramsUpcomingList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof ProgramsApiProgramsUpcomingList
     */
    readonly platform?: Array<ProgramsUpcomingListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof ProgramsApiProgramsUpcomingList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof ProgramsApiProgramsUpcomingList
     */
    readonly resource_type?: Array<ProgramsUpcomingListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof ProgramsApiProgramsUpcomingList
     */
    readonly sortby?: ProgramsUpcomingListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof ProgramsApiProgramsUpcomingList
     */
    readonly topic?: Array<string>;
}
/**
 * ProgramsApi - object-oriented interface
 * @export
 * @class ProgramsApi
 * @extends {BaseAPI}
 */
export declare class ProgramsApi extends BaseAPI {
    /**
     * Get a paginated list of programs
     * @summary List
     * @param {ProgramsApiProgramsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProgramsApi
     */
    programsList(requestParameters?: ProgramsApiProgramsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedProgramResourceList, any>>;
    /**
     * Get a paginated list of newly released Programs.
     * @summary List New
     * @param {ProgramsApiProgramsNewListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProgramsApi
     */
    programsNewList(requestParameters?: ProgramsApiProgramsNewListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedProgramResourceList, any>>;
    /**
     * Retrieve a single program
     * @summary Retrieve
     * @param {ProgramsApiProgramsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProgramsApi
     */
    programsRetrieve(requestParameters: ProgramsApiProgramsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ProgramResource, any>>;
    /**
     * Get a paginated list of upcoming Programs.
     * @summary List Upcoming
     * @param {ProgramsApiProgramsUpcomingListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProgramsApi
     */
    programsUpcomingList(requestParameters?: ProgramsApiProgramsUpcomingListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedProgramResourceList, any>>;
}
/**
 * @export
 */
export declare const ProgramsListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type ProgramsListDepartmentEnum = typeof ProgramsListDepartmentEnum[keyof typeof ProgramsListDepartmentEnum];
/**
 * @export
 */
export declare const ProgramsListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type ProgramsListLevelEnum = typeof ProgramsListLevelEnum[keyof typeof ProgramsListLevelEnum];
/**
 * @export
 */
export declare const ProgramsListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type ProgramsListOfferedByEnum = typeof ProgramsListOfferedByEnum[keyof typeof ProgramsListOfferedByEnum];
/**
 * @export
 */
export declare const ProgramsListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type ProgramsListPlatformEnum = typeof ProgramsListPlatformEnum[keyof typeof ProgramsListPlatformEnum];
/**
 * @export
 */
export declare const ProgramsListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type ProgramsListResourceTypeEnum = typeof ProgramsListResourceTypeEnum[keyof typeof ProgramsListResourceTypeEnum];
/**
 * @export
 */
export declare const ProgramsListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type ProgramsListSortbyEnum = typeof ProgramsListSortbyEnum[keyof typeof ProgramsListSortbyEnum];
/**
 * @export
 */
export declare const ProgramsNewListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type ProgramsNewListDepartmentEnum = typeof ProgramsNewListDepartmentEnum[keyof typeof ProgramsNewListDepartmentEnum];
/**
 * @export
 */
export declare const ProgramsNewListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type ProgramsNewListLevelEnum = typeof ProgramsNewListLevelEnum[keyof typeof ProgramsNewListLevelEnum];
/**
 * @export
 */
export declare const ProgramsNewListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type ProgramsNewListOfferedByEnum = typeof ProgramsNewListOfferedByEnum[keyof typeof ProgramsNewListOfferedByEnum];
/**
 * @export
 */
export declare const ProgramsNewListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type ProgramsNewListPlatformEnum = typeof ProgramsNewListPlatformEnum[keyof typeof ProgramsNewListPlatformEnum];
/**
 * @export
 */
export declare const ProgramsNewListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type ProgramsNewListResourceTypeEnum = typeof ProgramsNewListResourceTypeEnum[keyof typeof ProgramsNewListResourceTypeEnum];
/**
 * @export
 */
export declare const ProgramsNewListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type ProgramsNewListSortbyEnum = typeof ProgramsNewListSortbyEnum[keyof typeof ProgramsNewListSortbyEnum];
/**
 * @export
 */
export declare const ProgramsUpcomingListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type ProgramsUpcomingListDepartmentEnum = typeof ProgramsUpcomingListDepartmentEnum[keyof typeof ProgramsUpcomingListDepartmentEnum];
/**
 * @export
 */
export declare const ProgramsUpcomingListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type ProgramsUpcomingListLevelEnum = typeof ProgramsUpcomingListLevelEnum[keyof typeof ProgramsUpcomingListLevelEnum];
/**
 * @export
 */
export declare const ProgramsUpcomingListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type ProgramsUpcomingListOfferedByEnum = typeof ProgramsUpcomingListOfferedByEnum[keyof typeof ProgramsUpcomingListOfferedByEnum];
/**
 * @export
 */
export declare const ProgramsUpcomingListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type ProgramsUpcomingListPlatformEnum = typeof ProgramsUpcomingListPlatformEnum[keyof typeof ProgramsUpcomingListPlatformEnum];
/**
 * @export
 */
export declare const ProgramsUpcomingListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type ProgramsUpcomingListResourceTypeEnum = typeof ProgramsUpcomingListResourceTypeEnum[keyof typeof ProgramsUpcomingListResourceTypeEnum];
/**
 * @export
 */
export declare const ProgramsUpcomingListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type ProgramsUpcomingListSortbyEnum = typeof ProgramsUpcomingListSortbyEnum[keyof typeof ProgramsUpcomingListSortbyEnum];
/**
 * TopicsApi - axios parameter creator
 * @export
 */
export declare const TopicsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Topics covered by learning resources
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    topicsList: (limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Topics covered by learning resources
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource topic.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    topicsRetrieve: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * TopicsApi - functional programming interface
 * @export
 */
export declare const TopicsApiFp: (configuration?: Configuration) => {
    /**
     * Topics covered by learning resources
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    topicsList(limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningResourceTopicList>>;
    /**
     * Topics covered by learning resources
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource topic.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    topicsRetrieve(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningResourceTopic>>;
};
/**
 * TopicsApi - factory interface
 * @export
 */
export declare const TopicsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Topics covered by learning resources
     * @summary List
     * @param {TopicsApiTopicsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    topicsList(requestParameters?: TopicsApiTopicsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningResourceTopicList>;
    /**
     * Topics covered by learning resources
     * @summary Retrieve
     * @param {TopicsApiTopicsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    topicsRetrieve(requestParameters: TopicsApiTopicsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningResourceTopic>;
};
/**
 * Request parameters for topicsList operation in TopicsApi.
 * @export
 * @interface TopicsApiTopicsListRequest
 */
export interface TopicsApiTopicsListRequest {
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof TopicsApiTopicsList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof TopicsApiTopicsList
     */
    readonly offset?: number;
}
/**
 * Request parameters for topicsRetrieve operation in TopicsApi.
 * @export
 * @interface TopicsApiTopicsRetrieveRequest
 */
export interface TopicsApiTopicsRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource topic.
     * @type {number}
     * @memberof TopicsApiTopicsRetrieve
     */
    readonly id: number;
}
/**
 * TopicsApi - object-oriented interface
 * @export
 * @class TopicsApi
 * @extends {BaseAPI}
 */
export declare class TopicsApi extends BaseAPI {
    /**
     * Topics covered by learning resources
     * @summary List
     * @param {TopicsApiTopicsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TopicsApi
     */
    topicsList(requestParameters?: TopicsApiTopicsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningResourceTopicList, any>>;
    /**
     * Topics covered by learning resources
     * @summary Retrieve
     * @param {TopicsApiTopicsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TopicsApi
     */
    topicsRetrieve(requestParameters: TopicsApiTopicsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningResourceTopic, any>>;
}
/**
 * UserlistsApi - axios parameter creator
 * @export
 */
export declare const UserlistsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Viewset for UserLists
     * @summary Create
     * @param {UserListRequest} UserListRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsCreate: (UserListRequest: UserListRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for UserLists
     * @summary Destroy
     * @param {number} id A unique integer value identifying this user list.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsDestroy: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Add
     * @param {number} userlist_id id of the parent user list
     * @param {UserListRelationshipRequest} UserListRelationshipRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsCreate: (userlist_id: number, UserListRelationshipRequest: UserListRelationshipRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Remove
     * @param {number} id A unique integer value identifying this user list relationship.
     * @param {number} userlist_id id of the parent user list
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsDestroy: (id: number, userlist_id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resources List
     * @param {number} userlist_id id of the parent user list
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsList: (userlist_id: number, limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Update
     * @param {number} id A unique integer value identifying this user list relationship.
     * @param {number} userlist_id id of the parent user list
     * @param {PatchedUserListRelationshipRequest} [PatchedUserListRelationshipRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsPartialUpdate: (id: number, userlist_id: number, PatchedUserListRelationshipRequest?: PatchedUserListRelationshipRequest | undefined, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resources Retrieve
     * @param {number} id A unique integer value identifying this user list relationship.
     * @param {number} userlist_id id of the parent user list
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsRetrieve: (id: number, userlist_id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for UserLists
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsList: (limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for UserLists
     * @summary Update
     * @param {number} id A unique integer value identifying this user list.
     * @param {PatchedUserListRequest} [PatchedUserListRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsPartialUpdate: (id: number, PatchedUserListRequest?: PatchedUserListRequest | undefined, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Viewset for UserLists
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this user list.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsRetrieve: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * UserlistsApi - functional programming interface
 * @export
 */
export declare const UserlistsApiFp: (configuration?: Configuration) => {
    /**
     * Viewset for UserLists
     * @summary Create
     * @param {UserListRequest} UserListRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsCreate(UserListRequest: UserListRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserList>>;
    /**
     * Viewset for UserLists
     * @summary Destroy
     * @param {number} id A unique integer value identifying this user list.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsDestroy(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Add
     * @param {number} userlist_id id of the parent user list
     * @param {UserListRelationshipRequest} UserListRelationshipRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsCreate(userlist_id: number, UserListRelationshipRequest: UserListRelationshipRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserListRelationship>>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Remove
     * @param {number} id A unique integer value identifying this user list relationship.
     * @param {number} userlist_id id of the parent user list
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsDestroy(id: number, userlist_id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resources List
     * @param {number} userlist_id id of the parent user list
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsList(userlist_id: number, limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedUserListRelationshipList>>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Update
     * @param {number} id A unique integer value identifying this user list relationship.
     * @param {number} userlist_id id of the parent user list
     * @param {PatchedUserListRelationshipRequest} [PatchedUserListRelationshipRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsPartialUpdate(id: number, userlist_id: number, PatchedUserListRelationshipRequest?: PatchedUserListRelationshipRequest | undefined, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserListRelationship>>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resources Retrieve
     * @param {number} id A unique integer value identifying this user list relationship.
     * @param {number} userlist_id id of the parent user list
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsRetrieve(id: number, userlist_id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserListRelationship>>;
    /**
     * Viewset for UserLists
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsList(limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedUserListList>>;
    /**
     * Viewset for UserLists
     * @summary Update
     * @param {number} id A unique integer value identifying this user list.
     * @param {PatchedUserListRequest} [PatchedUserListRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsPartialUpdate(id: number, PatchedUserListRequest?: PatchedUserListRequest | undefined, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserList>>;
    /**
     * Viewset for UserLists
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this user list.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsRetrieve(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserList>>;
};
/**
 * UserlistsApi - factory interface
 * @export
 */
export declare const UserlistsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Viewset for UserLists
     * @summary Create
     * @param {UserlistsApiUserlistsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsCreate(requestParameters: UserlistsApiUserlistsCreateRequest, options?: RawAxiosRequestConfig): AxiosPromise<UserList>;
    /**
     * Viewset for UserLists
     * @summary Destroy
     * @param {UserlistsApiUserlistsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsDestroy(requestParameters: UserlistsApiUserlistsDestroyRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Add
     * @param {UserlistsApiUserlistsItemsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsCreate(requestParameters: UserlistsApiUserlistsItemsCreateRequest, options?: RawAxiosRequestConfig): AxiosPromise<UserListRelationship>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Remove
     * @param {UserlistsApiUserlistsItemsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsDestroy(requestParameters: UserlistsApiUserlistsItemsDestroyRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resources List
     * @param {UserlistsApiUserlistsItemsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsList(requestParameters: UserlistsApiUserlistsItemsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedUserListRelationshipList>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Update
     * @param {UserlistsApiUserlistsItemsPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsPartialUpdate(requestParameters: UserlistsApiUserlistsItemsPartialUpdateRequest, options?: RawAxiosRequestConfig): AxiosPromise<UserListRelationship>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resources Retrieve
     * @param {UserlistsApiUserlistsItemsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsItemsRetrieve(requestParameters: UserlistsApiUserlistsItemsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<UserListRelationship>;
    /**
     * Viewset for UserLists
     * @summary List
     * @param {UserlistsApiUserlistsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsList(requestParameters?: UserlistsApiUserlistsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedUserListList>;
    /**
     * Viewset for UserLists
     * @summary Update
     * @param {UserlistsApiUserlistsPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsPartialUpdate(requestParameters: UserlistsApiUserlistsPartialUpdateRequest, options?: RawAxiosRequestConfig): AxiosPromise<UserList>;
    /**
     * Viewset for UserLists
     * @summary Retrieve
     * @param {UserlistsApiUserlistsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    userlistsRetrieve(requestParameters: UserlistsApiUserlistsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<UserList>;
};
/**
 * Request parameters for userlistsCreate operation in UserlistsApi.
 * @export
 * @interface UserlistsApiUserlistsCreateRequest
 */
export interface UserlistsApiUserlistsCreateRequest {
    /**
     *
     * @type {UserListRequest}
     * @memberof UserlistsApiUserlistsCreate
     */
    readonly UserListRequest: UserListRequest;
}
/**
 * Request parameters for userlistsDestroy operation in UserlistsApi.
 * @export
 * @interface UserlistsApiUserlistsDestroyRequest
 */
export interface UserlistsApiUserlistsDestroyRequest {
    /**
     * A unique integer value identifying this user list.
     * @type {number}
     * @memberof UserlistsApiUserlistsDestroy
     */
    readonly id: number;
}
/**
 * Request parameters for userlistsItemsCreate operation in UserlistsApi.
 * @export
 * @interface UserlistsApiUserlistsItemsCreateRequest
 */
export interface UserlistsApiUserlistsItemsCreateRequest {
    /**
     * id of the parent user list
     * @type {number}
     * @memberof UserlistsApiUserlistsItemsCreate
     */
    readonly userlist_id: number;
    /**
     *
     * @type {UserListRelationshipRequest}
     * @memberof UserlistsApiUserlistsItemsCreate
     */
    readonly UserListRelationshipRequest: UserListRelationshipRequest;
}
/**
 * Request parameters for userlistsItemsDestroy operation in UserlistsApi.
 * @export
 * @interface UserlistsApiUserlistsItemsDestroyRequest
 */
export interface UserlistsApiUserlistsItemsDestroyRequest {
    /**
     * A unique integer value identifying this user list relationship.
     * @type {number}
     * @memberof UserlistsApiUserlistsItemsDestroy
     */
    readonly id: number;
    /**
     * id of the parent user list
     * @type {number}
     * @memberof UserlistsApiUserlistsItemsDestroy
     */
    readonly userlist_id: number;
}
/**
 * Request parameters for userlistsItemsList operation in UserlistsApi.
 * @export
 * @interface UserlistsApiUserlistsItemsListRequest
 */
export interface UserlistsApiUserlistsItemsListRequest {
    /**
     * id of the parent user list
     * @type {number}
     * @memberof UserlistsApiUserlistsItemsList
     */
    readonly userlist_id: number;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof UserlistsApiUserlistsItemsList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof UserlistsApiUserlistsItemsList
     */
    readonly offset?: number;
}
/**
 * Request parameters for userlistsItemsPartialUpdate operation in UserlistsApi.
 * @export
 * @interface UserlistsApiUserlistsItemsPartialUpdateRequest
 */
export interface UserlistsApiUserlistsItemsPartialUpdateRequest {
    /**
     * A unique integer value identifying this user list relationship.
     * @type {number}
     * @memberof UserlistsApiUserlistsItemsPartialUpdate
     */
    readonly id: number;
    /**
     * id of the parent user list
     * @type {number}
     * @memberof UserlistsApiUserlistsItemsPartialUpdate
     */
    readonly userlist_id: number;
    /**
     *
     * @type {PatchedUserListRelationshipRequest}
     * @memberof UserlistsApiUserlistsItemsPartialUpdate
     */
    readonly PatchedUserListRelationshipRequest?: PatchedUserListRelationshipRequest;
}
/**
 * Request parameters for userlistsItemsRetrieve operation in UserlistsApi.
 * @export
 * @interface UserlistsApiUserlistsItemsRetrieveRequest
 */
export interface UserlistsApiUserlistsItemsRetrieveRequest {
    /**
     * A unique integer value identifying this user list relationship.
     * @type {number}
     * @memberof UserlistsApiUserlistsItemsRetrieve
     */
    readonly id: number;
    /**
     * id of the parent user list
     * @type {number}
     * @memberof UserlistsApiUserlistsItemsRetrieve
     */
    readonly userlist_id: number;
}
/**
 * Request parameters for userlistsList operation in UserlistsApi.
 * @export
 * @interface UserlistsApiUserlistsListRequest
 */
export interface UserlistsApiUserlistsListRequest {
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof UserlistsApiUserlistsList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof UserlistsApiUserlistsList
     */
    readonly offset?: number;
}
/**
 * Request parameters for userlistsPartialUpdate operation in UserlistsApi.
 * @export
 * @interface UserlistsApiUserlistsPartialUpdateRequest
 */
export interface UserlistsApiUserlistsPartialUpdateRequest {
    /**
     * A unique integer value identifying this user list.
     * @type {number}
     * @memberof UserlistsApiUserlistsPartialUpdate
     */
    readonly id: number;
    /**
     *
     * @type {PatchedUserListRequest}
     * @memberof UserlistsApiUserlistsPartialUpdate
     */
    readonly PatchedUserListRequest?: PatchedUserListRequest;
}
/**
 * Request parameters for userlistsRetrieve operation in UserlistsApi.
 * @export
 * @interface UserlistsApiUserlistsRetrieveRequest
 */
export interface UserlistsApiUserlistsRetrieveRequest {
    /**
     * A unique integer value identifying this user list.
     * @type {number}
     * @memberof UserlistsApiUserlistsRetrieve
     */
    readonly id: number;
}
/**
 * UserlistsApi - object-oriented interface
 * @export
 * @class UserlistsApi
 * @extends {BaseAPI}
 */
export declare class UserlistsApi extends BaseAPI {
    /**
     * Viewset for UserLists
     * @summary Create
     * @param {UserlistsApiUserlistsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserlistsApi
     */
    userlistsCreate(requestParameters: UserlistsApiUserlistsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserList, any>>;
    /**
     * Viewset for UserLists
     * @summary Destroy
     * @param {UserlistsApiUserlistsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserlistsApi
     */
    userlistsDestroy(requestParameters: UserlistsApiUserlistsDestroyRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Add
     * @param {UserlistsApiUserlistsItemsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserlistsApi
     */
    userlistsItemsCreate(requestParameters: UserlistsApiUserlistsItemsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserListRelationship, any>>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Remove
     * @param {UserlistsApiUserlistsItemsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserlistsApi
     */
    userlistsItemsDestroy(requestParameters: UserlistsApiUserlistsItemsDestroyRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resources List
     * @param {UserlistsApiUserlistsItemsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserlistsApi
     */
    userlistsItemsList(requestParameters: UserlistsApiUserlistsItemsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedUserListRelationshipList, any>>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resource Relationship Update
     * @param {UserlistsApiUserlistsItemsPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserlistsApi
     */
    userlistsItemsPartialUpdate(requestParameters: UserlistsApiUserlistsItemsPartialUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserListRelationship, any>>;
    /**
     * Viewset for UserListRelationships
     * @summary User List Resources Retrieve
     * @param {UserlistsApiUserlistsItemsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserlistsApi
     */
    userlistsItemsRetrieve(requestParameters: UserlistsApiUserlistsItemsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserListRelationship, any>>;
    /**
     * Viewset for UserLists
     * @summary List
     * @param {UserlistsApiUserlistsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserlistsApi
     */
    userlistsList(requestParameters?: UserlistsApiUserlistsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedUserListList, any>>;
    /**
     * Viewset for UserLists
     * @summary Update
     * @param {UserlistsApiUserlistsPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserlistsApi
     */
    userlistsPartialUpdate(requestParameters: UserlistsApiUserlistsPartialUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserList, any>>;
    /**
     * Viewset for UserLists
     * @summary Retrieve
     * @param {UserlistsApiUserlistsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserlistsApi
     */
    userlistsRetrieve(requestParameters: UserlistsApiUserlistsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserList, any>>;
}
/**
 * VideoPlaylistsApi - axios parameter creator
 * @export
 */
export declare const VideoPlaylistsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {string} [sortby] Which field to use when ordering the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsItemsList: (learning_resource_id: number, limit?: number, offset?: number, sortby?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsItemsRetrieve: (id: number, learning_resource_id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of video playlists
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideoPlaylistsListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideoPlaylistsListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideoPlaylistsListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideoPlaylistsListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideoPlaylistsListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideoPlaylistsListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsList: (course_feature?: Array<string>, department?: Array<VideoPlaylistsListDepartmentEnum>, level?: Array<VideoPlaylistsListLevelEnum>, limit?: number, offered_by?: Array<VideoPlaylistsListOfferedByEnum>, offset?: number, platform?: Array<VideoPlaylistsListPlatformEnum>, professional?: boolean, resource_type?: Array<VideoPlaylistsListResourceTypeEnum>, sortby?: VideoPlaylistsListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of newly released Video Playlists.
     * @summary List New
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideoPlaylistsNewListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideoPlaylistsNewListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideoPlaylistsNewListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideoPlaylistsNewListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideoPlaylistsNewListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideoPlaylistsNewListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsNewList: (course_feature?: Array<string>, department?: Array<VideoPlaylistsNewListDepartmentEnum>, level?: Array<VideoPlaylistsNewListLevelEnum>, limit?: number, offered_by?: Array<VideoPlaylistsNewListOfferedByEnum>, offset?: number, platform?: Array<VideoPlaylistsNewListPlatformEnum>, professional?: boolean, resource_type?: Array<VideoPlaylistsNewListResourceTypeEnum>, sortby?: VideoPlaylistsNewListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a single video playlist
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsRetrieve: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of upcoming Video Playlists.
     * @summary List Upcoming
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideoPlaylistsUpcomingListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideoPlaylistsUpcomingListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideoPlaylistsUpcomingListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideoPlaylistsUpcomingListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideoPlaylistsUpcomingListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideoPlaylistsUpcomingListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsUpcomingList: (course_feature?: Array<string>, department?: Array<VideoPlaylistsUpcomingListDepartmentEnum>, level?: Array<VideoPlaylistsUpcomingListLevelEnum>, limit?: number, offered_by?: Array<VideoPlaylistsUpcomingListOfferedByEnum>, offset?: number, platform?: Array<VideoPlaylistsUpcomingListPlatformEnum>, professional?: boolean, resource_type?: Array<VideoPlaylistsUpcomingListResourceTypeEnum>, sortby?: VideoPlaylistsUpcomingListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * VideoPlaylistsApi - functional programming interface
 * @export
 */
export declare const VideoPlaylistsApiFp: (configuration?: Configuration) => {
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {string} [sortby] Which field to use when ordering the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsItemsList(learning_resource_id: number, limit?: number, offset?: number, sortby?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedLearningResourceRelationshipList>>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {number} id A unique integer value identifying this learning resource relationship.
     * @param {number} learning_resource_id id of the parent learning resource
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsItemsRetrieve(id: number, learning_resource_id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LearningResourceRelationship>>;
    /**
     * Get a paginated list of video playlists
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideoPlaylistsListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideoPlaylistsListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideoPlaylistsListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideoPlaylistsListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideoPlaylistsListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideoPlaylistsListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsList(course_feature?: Array<string>, department?: Array<VideoPlaylistsListDepartmentEnum>, level?: Array<VideoPlaylistsListLevelEnum>, limit?: number, offered_by?: Array<VideoPlaylistsListOfferedByEnum>, offset?: number, platform?: Array<VideoPlaylistsListPlatformEnum>, professional?: boolean, resource_type?: Array<VideoPlaylistsListResourceTypeEnum>, sortby?: VideoPlaylistsListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedVideoPlaylistResourceList>>;
    /**
     * Get a paginated list of newly released Video Playlists.
     * @summary List New
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideoPlaylistsNewListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideoPlaylistsNewListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideoPlaylistsNewListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideoPlaylistsNewListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideoPlaylistsNewListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideoPlaylistsNewListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsNewList(course_feature?: Array<string>, department?: Array<VideoPlaylistsNewListDepartmentEnum>, level?: Array<VideoPlaylistsNewListLevelEnum>, limit?: number, offered_by?: Array<VideoPlaylistsNewListOfferedByEnum>, offset?: number, platform?: Array<VideoPlaylistsNewListPlatformEnum>, professional?: boolean, resource_type?: Array<VideoPlaylistsNewListResourceTypeEnum>, sortby?: VideoPlaylistsNewListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedVideoPlaylistResourceList>>;
    /**
     * Retrieve a single video playlist
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsRetrieve(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VideoPlaylistResource>>;
    /**
     * Get a paginated list of upcoming Video Playlists.
     * @summary List Upcoming
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideoPlaylistsUpcomingListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideoPlaylistsUpcomingListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideoPlaylistsUpcomingListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideoPlaylistsUpcomingListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideoPlaylistsUpcomingListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideoPlaylistsUpcomingListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsUpcomingList(course_feature?: Array<string>, department?: Array<VideoPlaylistsUpcomingListDepartmentEnum>, level?: Array<VideoPlaylistsUpcomingListLevelEnum>, limit?: number, offered_by?: Array<VideoPlaylistsUpcomingListOfferedByEnum>, offset?: number, platform?: Array<VideoPlaylistsUpcomingListPlatformEnum>, professional?: boolean, resource_type?: Array<VideoPlaylistsUpcomingListResourceTypeEnum>, sortby?: VideoPlaylistsUpcomingListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedVideoPlaylistResourceList>>;
};
/**
 * VideoPlaylistsApi - factory interface
 * @export
 */
export declare const VideoPlaylistsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {VideoPlaylistsApiVideoPlaylistsItemsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsItemsList(requestParameters: VideoPlaylistsApiVideoPlaylistsItemsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedLearningResourceRelationshipList>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {VideoPlaylistsApiVideoPlaylistsItemsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsItemsRetrieve(requestParameters: VideoPlaylistsApiVideoPlaylistsItemsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<LearningResourceRelationship>;
    /**
     * Get a paginated list of video playlists
     * @summary List
     * @param {VideoPlaylistsApiVideoPlaylistsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsList(requestParameters?: VideoPlaylistsApiVideoPlaylistsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedVideoPlaylistResourceList>;
    /**
     * Get a paginated list of newly released Video Playlists.
     * @summary List New
     * @param {VideoPlaylistsApiVideoPlaylistsNewListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsNewList(requestParameters?: VideoPlaylistsApiVideoPlaylistsNewListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedVideoPlaylistResourceList>;
    /**
     * Retrieve a single video playlist
     * @summary Retrieve
     * @param {VideoPlaylistsApiVideoPlaylistsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsRetrieve(requestParameters: VideoPlaylistsApiVideoPlaylistsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<VideoPlaylistResource>;
    /**
     * Get a paginated list of upcoming Video Playlists.
     * @summary List Upcoming
     * @param {VideoPlaylistsApiVideoPlaylistsUpcomingListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videoPlaylistsUpcomingList(requestParameters?: VideoPlaylistsApiVideoPlaylistsUpcomingListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedVideoPlaylistResourceList>;
};
/**
 * Request parameters for videoPlaylistsItemsList operation in VideoPlaylistsApi.
 * @export
 * @interface VideoPlaylistsApiVideoPlaylistsItemsListRequest
 */
export interface VideoPlaylistsApiVideoPlaylistsItemsListRequest {
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsItemsList
     */
    readonly learning_resource_id: number;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsItemsList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsItemsList
     */
    readonly offset?: number;
    /**
     * Which field to use when ordering the results.
     * @type {string}
     * @memberof VideoPlaylistsApiVideoPlaylistsItemsList
     */
    readonly sortby?: string;
}
/**
 * Request parameters for videoPlaylistsItemsRetrieve operation in VideoPlaylistsApi.
 * @export
 * @interface VideoPlaylistsApiVideoPlaylistsItemsRetrieveRequest
 */
export interface VideoPlaylistsApiVideoPlaylistsItemsRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource relationship.
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsItemsRetrieve
     */
    readonly id: number;
    /**
     * id of the parent learning resource
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsItemsRetrieve
     */
    readonly learning_resource_id: number;
}
/**
 * Request parameters for videoPlaylistsList operation in VideoPlaylistsApi.
 * @export
 * @interface VideoPlaylistsApiVideoPlaylistsListRequest
 */
export interface VideoPlaylistsApiVideoPlaylistsListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideoPlaylistsApiVideoPlaylistsList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsList
     */
    readonly department?: Array<VideoPlaylistsListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsList
     */
    readonly level?: Array<VideoPlaylistsListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsList
     */
    readonly offered_by?: Array<VideoPlaylistsListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsList
     */
    readonly platform?: Array<VideoPlaylistsListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof VideoPlaylistsApiVideoPlaylistsList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsList
     */
    readonly resource_type?: Array<VideoPlaylistsListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof VideoPlaylistsApiVideoPlaylistsList
     */
    readonly sortby?: VideoPlaylistsListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideoPlaylistsApiVideoPlaylistsList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for videoPlaylistsNewList operation in VideoPlaylistsApi.
 * @export
 * @interface VideoPlaylistsApiVideoPlaylistsNewListRequest
 */
export interface VideoPlaylistsApiVideoPlaylistsNewListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideoPlaylistsApiVideoPlaylistsNewList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsNewList
     */
    readonly department?: Array<VideoPlaylistsNewListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsNewList
     */
    readonly level?: Array<VideoPlaylistsNewListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsNewList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsNewList
     */
    readonly offered_by?: Array<VideoPlaylistsNewListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsNewList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsNewList
     */
    readonly platform?: Array<VideoPlaylistsNewListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof VideoPlaylistsApiVideoPlaylistsNewList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsNewList
     */
    readonly resource_type?: Array<VideoPlaylistsNewListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof VideoPlaylistsApiVideoPlaylistsNewList
     */
    readonly sortby?: VideoPlaylistsNewListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideoPlaylistsApiVideoPlaylistsNewList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for videoPlaylistsRetrieve operation in VideoPlaylistsApi.
 * @export
 * @interface VideoPlaylistsApiVideoPlaylistsRetrieveRequest
 */
export interface VideoPlaylistsApiVideoPlaylistsRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource.
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsRetrieve
     */
    readonly id: number;
}
/**
 * Request parameters for videoPlaylistsUpcomingList operation in VideoPlaylistsApi.
 * @export
 * @interface VideoPlaylistsApiVideoPlaylistsUpcomingListRequest
 */
export interface VideoPlaylistsApiVideoPlaylistsUpcomingListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideoPlaylistsApiVideoPlaylistsUpcomingList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsUpcomingList
     */
    readonly department?: Array<VideoPlaylistsUpcomingListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsUpcomingList
     */
    readonly level?: Array<VideoPlaylistsUpcomingListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsUpcomingList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsUpcomingList
     */
    readonly offered_by?: Array<VideoPlaylistsUpcomingListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof VideoPlaylistsApiVideoPlaylistsUpcomingList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsUpcomingList
     */
    readonly platform?: Array<VideoPlaylistsUpcomingListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof VideoPlaylistsApiVideoPlaylistsUpcomingList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof VideoPlaylistsApiVideoPlaylistsUpcomingList
     */
    readonly resource_type?: Array<VideoPlaylistsUpcomingListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof VideoPlaylistsApiVideoPlaylistsUpcomingList
     */
    readonly sortby?: VideoPlaylistsUpcomingListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideoPlaylistsApiVideoPlaylistsUpcomingList
     */
    readonly topic?: Array<string>;
}
/**
 * VideoPlaylistsApi - object-oriented interface
 * @export
 * @class VideoPlaylistsApi
 * @extends {BaseAPI}
 */
export declare class VideoPlaylistsApi extends BaseAPI {
    /**
     * Get a list of related learning resources for a learning resource.
     * @summary Nested Learning Resource List
     * @param {VideoPlaylistsApiVideoPlaylistsItemsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VideoPlaylistsApi
     */
    videoPlaylistsItemsList(requestParameters: VideoPlaylistsApiVideoPlaylistsItemsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedLearningResourceRelationshipList, any>>;
    /**
     * Get a singe related learning resource for a learning resource.
     * @summary Nested Learning Resource Retrieve
     * @param {VideoPlaylistsApiVideoPlaylistsItemsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VideoPlaylistsApi
     */
    videoPlaylistsItemsRetrieve(requestParameters: VideoPlaylistsApiVideoPlaylistsItemsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<LearningResourceRelationship, any>>;
    /**
     * Get a paginated list of video playlists
     * @summary List
     * @param {VideoPlaylistsApiVideoPlaylistsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VideoPlaylistsApi
     */
    videoPlaylistsList(requestParameters?: VideoPlaylistsApiVideoPlaylistsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedVideoPlaylistResourceList, any>>;
    /**
     * Get a paginated list of newly released Video Playlists.
     * @summary List New
     * @param {VideoPlaylistsApiVideoPlaylistsNewListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VideoPlaylistsApi
     */
    videoPlaylistsNewList(requestParameters?: VideoPlaylistsApiVideoPlaylistsNewListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedVideoPlaylistResourceList, any>>;
    /**
     * Retrieve a single video playlist
     * @summary Retrieve
     * @param {VideoPlaylistsApiVideoPlaylistsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VideoPlaylistsApi
     */
    videoPlaylistsRetrieve(requestParameters: VideoPlaylistsApiVideoPlaylistsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<VideoPlaylistResource, any>>;
    /**
     * Get a paginated list of upcoming Video Playlists.
     * @summary List Upcoming
     * @param {VideoPlaylistsApiVideoPlaylistsUpcomingListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VideoPlaylistsApi
     */
    videoPlaylistsUpcomingList(requestParameters?: VideoPlaylistsApiVideoPlaylistsUpcomingListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedVideoPlaylistResourceList, any>>;
}
/**
 * @export
 */
export declare const VideoPlaylistsListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type VideoPlaylistsListDepartmentEnum = typeof VideoPlaylistsListDepartmentEnum[keyof typeof VideoPlaylistsListDepartmentEnum];
/**
 * @export
 */
export declare const VideoPlaylistsListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type VideoPlaylistsListLevelEnum = typeof VideoPlaylistsListLevelEnum[keyof typeof VideoPlaylistsListLevelEnum];
/**
 * @export
 */
export declare const VideoPlaylistsListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type VideoPlaylistsListOfferedByEnum = typeof VideoPlaylistsListOfferedByEnum[keyof typeof VideoPlaylistsListOfferedByEnum];
/**
 * @export
 */
export declare const VideoPlaylistsListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type VideoPlaylistsListPlatformEnum = typeof VideoPlaylistsListPlatformEnum[keyof typeof VideoPlaylistsListPlatformEnum];
/**
 * @export
 */
export declare const VideoPlaylistsListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type VideoPlaylistsListResourceTypeEnum = typeof VideoPlaylistsListResourceTypeEnum[keyof typeof VideoPlaylistsListResourceTypeEnum];
/**
 * @export
 */
export declare const VideoPlaylistsListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type VideoPlaylistsListSortbyEnum = typeof VideoPlaylistsListSortbyEnum[keyof typeof VideoPlaylistsListSortbyEnum];
/**
 * @export
 */
export declare const VideoPlaylistsNewListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type VideoPlaylistsNewListDepartmentEnum = typeof VideoPlaylistsNewListDepartmentEnum[keyof typeof VideoPlaylistsNewListDepartmentEnum];
/**
 * @export
 */
export declare const VideoPlaylistsNewListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type VideoPlaylistsNewListLevelEnum = typeof VideoPlaylistsNewListLevelEnum[keyof typeof VideoPlaylistsNewListLevelEnum];
/**
 * @export
 */
export declare const VideoPlaylistsNewListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type VideoPlaylistsNewListOfferedByEnum = typeof VideoPlaylistsNewListOfferedByEnum[keyof typeof VideoPlaylistsNewListOfferedByEnum];
/**
 * @export
 */
export declare const VideoPlaylistsNewListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type VideoPlaylistsNewListPlatformEnum = typeof VideoPlaylistsNewListPlatformEnum[keyof typeof VideoPlaylistsNewListPlatformEnum];
/**
 * @export
 */
export declare const VideoPlaylistsNewListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type VideoPlaylistsNewListResourceTypeEnum = typeof VideoPlaylistsNewListResourceTypeEnum[keyof typeof VideoPlaylistsNewListResourceTypeEnum];
/**
 * @export
 */
export declare const VideoPlaylistsNewListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type VideoPlaylistsNewListSortbyEnum = typeof VideoPlaylistsNewListSortbyEnum[keyof typeof VideoPlaylistsNewListSortbyEnum];
/**
 * @export
 */
export declare const VideoPlaylistsUpcomingListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type VideoPlaylistsUpcomingListDepartmentEnum = typeof VideoPlaylistsUpcomingListDepartmentEnum[keyof typeof VideoPlaylistsUpcomingListDepartmentEnum];
/**
 * @export
 */
export declare const VideoPlaylistsUpcomingListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type VideoPlaylistsUpcomingListLevelEnum = typeof VideoPlaylistsUpcomingListLevelEnum[keyof typeof VideoPlaylistsUpcomingListLevelEnum];
/**
 * @export
 */
export declare const VideoPlaylistsUpcomingListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type VideoPlaylistsUpcomingListOfferedByEnum = typeof VideoPlaylistsUpcomingListOfferedByEnum[keyof typeof VideoPlaylistsUpcomingListOfferedByEnum];
/**
 * @export
 */
export declare const VideoPlaylistsUpcomingListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type VideoPlaylistsUpcomingListPlatformEnum = typeof VideoPlaylistsUpcomingListPlatformEnum[keyof typeof VideoPlaylistsUpcomingListPlatformEnum];
/**
 * @export
 */
export declare const VideoPlaylistsUpcomingListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type VideoPlaylistsUpcomingListResourceTypeEnum = typeof VideoPlaylistsUpcomingListResourceTypeEnum[keyof typeof VideoPlaylistsUpcomingListResourceTypeEnum];
/**
 * @export
 */
export declare const VideoPlaylistsUpcomingListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type VideoPlaylistsUpcomingListSortbyEnum = typeof VideoPlaylistsUpcomingListSortbyEnum[keyof typeof VideoPlaylistsUpcomingListSortbyEnum];
/**
 * VideosApi - axios parameter creator
 * @export
 */
export declare const VideosApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get a paginated list of videos
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideosListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideosListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideosListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideosListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideosListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideosListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosList: (course_feature?: Array<string>, department?: Array<VideosListDepartmentEnum>, level?: Array<VideosListLevelEnum>, limit?: number, offered_by?: Array<VideosListOfferedByEnum>, offset?: number, platform?: Array<VideosListPlatformEnum>, professional?: boolean, resource_type?: Array<VideosListResourceTypeEnum>, sortby?: VideosListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of newly released Videos.
     * @summary List New
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideosNewListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideosNewListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideosNewListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideosNewListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideosNewListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideosNewListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosNewList: (course_feature?: Array<string>, department?: Array<VideosNewListDepartmentEnum>, level?: Array<VideosNewListLevelEnum>, limit?: number, offered_by?: Array<VideosNewListOfferedByEnum>, offset?: number, platform?: Array<VideosNewListPlatformEnum>, professional?: boolean, resource_type?: Array<VideosNewListResourceTypeEnum>, sortby?: VideosNewListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Retrieve a single video
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosRetrieve: (id: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a paginated list of upcoming Videos.
     * @summary List Upcoming
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideosUpcomingListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideosUpcomingListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideosUpcomingListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideosUpcomingListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideosUpcomingListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideosUpcomingListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosUpcomingList: (course_feature?: Array<string>, department?: Array<VideosUpcomingListDepartmentEnum>, level?: Array<VideosUpcomingListLevelEnum>, limit?: number, offered_by?: Array<VideosUpcomingListOfferedByEnum>, offset?: number, platform?: Array<VideosUpcomingListPlatformEnum>, professional?: boolean, resource_type?: Array<VideosUpcomingListResourceTypeEnum>, sortby?: VideosUpcomingListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * VideosApi - functional programming interface
 * @export
 */
export declare const VideosApiFp: (configuration?: Configuration) => {
    /**
     * Get a paginated list of videos
     * @summary List
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideosListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideosListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideosListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideosListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideosListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideosListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosList(course_feature?: Array<string>, department?: Array<VideosListDepartmentEnum>, level?: Array<VideosListLevelEnum>, limit?: number, offered_by?: Array<VideosListOfferedByEnum>, offset?: number, platform?: Array<VideosListPlatformEnum>, professional?: boolean, resource_type?: Array<VideosListResourceTypeEnum>, sortby?: VideosListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedVideoResourceList>>;
    /**
     * Get a paginated list of newly released Videos.
     * @summary List New
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideosNewListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideosNewListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideosNewListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideosNewListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideosNewListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideosNewListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosNewList(course_feature?: Array<string>, department?: Array<VideosNewListDepartmentEnum>, level?: Array<VideosNewListLevelEnum>, limit?: number, offered_by?: Array<VideosNewListOfferedByEnum>, offset?: number, platform?: Array<VideosNewListPlatformEnum>, professional?: boolean, resource_type?: Array<VideosNewListResourceTypeEnum>, sortby?: VideosNewListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedVideoResourceList>>;
    /**
     * Retrieve a single video
     * @summary Retrieve
     * @param {number} id A unique integer value identifying this learning resource.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosRetrieve(id: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VideoResource>>;
    /**
     * Get a paginated list of upcoming Videos.
     * @summary List Upcoming
     * @param {Array<string>} [course_feature] Multiple values may be separated by commas.
     * @param {Array<VideosUpcomingListDepartmentEnum>} [department] The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @param {Array<VideosUpcomingListLevelEnum>} [level] The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @param {number} [limit] Number of results to return per page.
     * @param {Array<VideosUpcomingListOfferedByEnum>} [offered_by] The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @param {number} [offset] The initial index from which to return the results.
     * @param {Array<VideosUpcomingListPlatformEnum>} [platform] The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @param {boolean} [professional]
     * @param {Array<VideosUpcomingListResourceTypeEnum>} [resource_type] The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @param {VideosUpcomingListSortbyEnum} [sortby] Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @param {Array<string>} [topic] Multiple values may be separated by commas.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosUpcomingList(course_feature?: Array<string>, department?: Array<VideosUpcomingListDepartmentEnum>, level?: Array<VideosUpcomingListLevelEnum>, limit?: number, offered_by?: Array<VideosUpcomingListOfferedByEnum>, offset?: number, platform?: Array<VideosUpcomingListPlatformEnum>, professional?: boolean, resource_type?: Array<VideosUpcomingListResourceTypeEnum>, sortby?: VideosUpcomingListSortbyEnum, topic?: Array<string>, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedVideoResourceList>>;
};
/**
 * VideosApi - factory interface
 * @export
 */
export declare const VideosApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get a paginated list of videos
     * @summary List
     * @param {VideosApiVideosListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosList(requestParameters?: VideosApiVideosListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedVideoResourceList>;
    /**
     * Get a paginated list of newly released Videos.
     * @summary List New
     * @param {VideosApiVideosNewListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosNewList(requestParameters?: VideosApiVideosNewListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedVideoResourceList>;
    /**
     * Retrieve a single video
     * @summary Retrieve
     * @param {VideosApiVideosRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosRetrieve(requestParameters: VideosApiVideosRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<VideoResource>;
    /**
     * Get a paginated list of upcoming Videos.
     * @summary List Upcoming
     * @param {VideosApiVideosUpcomingListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    videosUpcomingList(requestParameters?: VideosApiVideosUpcomingListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedVideoResourceList>;
};
/**
 * Request parameters for videosList operation in VideosApi.
 * @export
 * @interface VideosApiVideosListRequest
 */
export interface VideosApiVideosListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideosApiVideosList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof VideosApiVideosList
     */
    readonly department?: Array<VideosListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof VideosApiVideosList
     */
    readonly level?: Array<VideosListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof VideosApiVideosList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof VideosApiVideosList
     */
    readonly offered_by?: Array<VideosListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof VideosApiVideosList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof VideosApiVideosList
     */
    readonly platform?: Array<VideosListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof VideosApiVideosList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof VideosApiVideosList
     */
    readonly resource_type?: Array<VideosListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof VideosApiVideosList
     */
    readonly sortby?: VideosListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideosApiVideosList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for videosNewList operation in VideosApi.
 * @export
 * @interface VideosApiVideosNewListRequest
 */
export interface VideosApiVideosNewListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideosApiVideosNewList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof VideosApiVideosNewList
     */
    readonly department?: Array<VideosNewListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof VideosApiVideosNewList
     */
    readonly level?: Array<VideosNewListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof VideosApiVideosNewList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof VideosApiVideosNewList
     */
    readonly offered_by?: Array<VideosNewListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof VideosApiVideosNewList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof VideosApiVideosNewList
     */
    readonly platform?: Array<VideosNewListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof VideosApiVideosNewList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof VideosApiVideosNewList
     */
    readonly resource_type?: Array<VideosNewListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof VideosApiVideosNewList
     */
    readonly sortby?: VideosNewListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideosApiVideosNewList
     */
    readonly topic?: Array<string>;
}
/**
 * Request parameters for videosRetrieve operation in VideosApi.
 * @export
 * @interface VideosApiVideosRetrieveRequest
 */
export interface VideosApiVideosRetrieveRequest {
    /**
     * A unique integer value identifying this learning resource.
     * @type {number}
     * @memberof VideosApiVideosRetrieve
     */
    readonly id: number;
}
/**
 * Request parameters for videosUpcomingList operation in VideosApi.
 * @export
 * @interface VideosApiVideosUpcomingListRequest
 */
export interface VideosApiVideosUpcomingListRequest {
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideosApiVideosUpcomingList
     */
    readonly course_feature?: Array<string>;
    /**
     * The department that offers learning resources  * &#x60;1&#x60; - Civil and Environmental Engineering * &#x60;2&#x60; - Mechanical Engineering * &#x60;3&#x60; - Materials Science and Engineering * &#x60;4&#x60; - Architecture * &#x60;5&#x60; - Chemistry * &#x60;6&#x60; - Electrical Engineering and Computer Science * &#x60;7&#x60; - Biology * &#x60;8&#x60; - Physics * &#x60;9&#x60; - Brain and Cognitive Sciences * &#x60;10&#x60; - Chemical Engineering * &#x60;11&#x60; - Urban Studies and Planning * &#x60;12&#x60; - Earth, Atmospheric, and Planetary Sciences * &#x60;14&#x60; - Economics * &#x60;15&#x60; - Sloan School of Management * &#x60;16&#x60; - Aeronautics and Astronautics * &#x60;17&#x60; - Political Science * &#x60;18&#x60; - Mathematics * &#x60;20&#x60; - Biological Engineering * &#x60;21A&#x60; - Anthropology * &#x60;21G&#x60; - Global Studies and Languages * &#x60;21H&#x60; - History * &#x60;21L&#x60; - Literature * &#x60;21M&#x60; - Music and Theater Arts * &#x60;22&#x60; - Nuclear Science and Engineering * &#x60;24&#x60; - Linguistics and Philosophy * &#x60;CC&#x60; - Concourse * &#x60;CMS-W&#x60; - Comparative Media Studies/Writing * &#x60;EC&#x60; - Edgerton Center * &#x60;ES&#x60; - Experimental Study Group * &#x60;ESD&#x60; - Engineering Systems Division * &#x60;HST&#x60; - Health Sciences and Technology * &#x60;IDS&#x60; - Institute for Data, Systems, and Society * &#x60;MAS&#x60; - Media Arts and Sciences * &#x60;PE&#x60; - Athletics, Physical Education and Recreation * &#x60;RES&#x60; - Supplemental Resources * &#x60;STS&#x60; - Science, Technology, and Society * &#x60;WGS&#x60; - Women\&#39;s and Gender Studies
     * @type {Array<'1' | '10' | '11' | '12' | '14' | '15' | '16' | '17' | '18' | '2' | '20' | '21A' | '21G' | '21H' | '21L' | '21M' | '22' | '24' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | 'CC' | 'CMS-W' | 'EC' | 'ES' | 'ESD' | 'HST' | 'IDS' | 'MAS' | 'PE' | 'RES' | 'STS' | 'WGS'>}
     * @memberof VideosApiVideosUpcomingList
     */
    readonly department?: Array<VideosUpcomingListDepartmentEnum>;
    /**
     * The academic level of the resources  * &#x60;undergraduate&#x60; - Undergraduate * &#x60;graduate&#x60; - Graduate * &#x60;high_school&#x60; - High School * &#x60;noncredit&#x60; - Non-Credit * &#x60;advanced&#x60; - Advanced * &#x60;intermediate&#x60; - Intermediate * &#x60;introductory&#x60; - Introductory
     * @type {Array<'advanced' | 'graduate' | 'high_school' | 'intermediate' | 'introductory' | 'noncredit' | 'undergraduate'>}
     * @memberof VideosApiVideosUpcomingList
     */
    readonly level?: Array<VideosUpcomingListLevelEnum>;
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof VideosApiVideosUpcomingList
     */
    readonly limit?: number;
    /**
     * The organization that offers a learning resource  * &#x60;mitx&#x60; - MITx * &#x60;ocw&#x60; - OCW * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'mitpe' | 'mitx' | 'ocw' | 'scc' | 'see' | 'xpro'>}
     * @memberof VideosApiVideosUpcomingList
     */
    readonly offered_by?: Array<VideosUpcomingListOfferedByEnum>;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof VideosApiVideosUpcomingList
     */
    readonly offset?: number;
    /**
     * The platform on which learning resources are offered  * &#x60;edx&#x60; - edX * &#x60;ocw&#x60; - OCW * &#x60;oll&#x60; - Open Learning Library * &#x60;mitxonline&#x60; - MITx Online * &#x60;bootcamps&#x60; - Bootcamps * &#x60;xpro&#x60; - xPRO * &#x60;csail&#x60; - CSAIL * &#x60;mitpe&#x60; - Professional Education * &#x60;see&#x60; - Sloan Executive Education * &#x60;scc&#x60; - Schwarzman College of Computing * &#x60;ctl&#x60; - Center for Transportation &amp; Logistics * &#x60;whu&#x60; - WHU * &#x60;susskind&#x60; - Susskind * &#x60;globalalumni&#x60; - Global Alumni * &#x60;simplilearn&#x60; - Simplilearn * &#x60;emeritus&#x60; - Emeritus * &#x60;podcast&#x60; - Podcast * &#x60;youtube&#x60; - YouTube
     * @type {Array<'bootcamps' | 'csail' | 'ctl' | 'edx' | 'emeritus' | 'globalalumni' | 'mitpe' | 'mitxonline' | 'ocw' | 'oll' | 'podcast' | 'scc' | 'see' | 'simplilearn' | 'susskind' | 'whu' | 'xpro' | 'youtube'>}
     * @memberof VideosApiVideosUpcomingList
     */
    readonly platform?: Array<VideosUpcomingListPlatformEnum>;
    /**
     *
     * @type {boolean}
     * @memberof VideosApiVideosUpcomingList
     */
    readonly professional?: boolean;
    /**
     * The type of learning resource  * &#x60;course&#x60; - Course * &#x60;program&#x60; - Program * &#x60;learning_path&#x60; - Learning Path * &#x60;podcast&#x60; - Podcast * &#x60;podcast_episode&#x60; - Podcast Episode * &#x60;video&#x60; - Video * &#x60;video_playlist&#x60; - Video Playlist
     * @type {Array<'course' | 'learning_path' | 'podcast' | 'podcast_episode' | 'program' | 'video' | 'video_playlist'>}
     * @memberof VideosApiVideosUpcomingList
     */
    readonly resource_type?: Array<VideosUpcomingListResourceTypeEnum>;
    /**
     * Sort By  * &#x60;id&#x60; - Object ID ascending * &#x60;-id&#x60; - Object ID descending * &#x60;readable_id&#x60; - Readable ID ascending * &#x60;-readable_id&#x60; - Readable ID descending * &#x60;last_modified&#x60; - Last Modified Date ascending * &#x60;-last_modified&#x60; - Last Modified Date descending * &#x60;created_on&#x60; - Creation Date ascending * &#x60;-created_on&#x60; - CreationDate descending * &#x60;start_date&#x60; - Start Date ascending * &#x60;-start_date&#x60; - Start Date descending * &#x60;mitcoursenumber&#x60; - MIT course number ascending * &#x60;-mitcoursenumber&#x60; - MIT course number descending
     * @type {'-created_on' | '-id' | '-last_modified' | '-mitcoursenumber' | '-readable_id' | '-start_date' | 'created_on' | 'id' | 'last_modified' | 'mitcoursenumber' | 'readable_id' | 'start_date'}
     * @memberof VideosApiVideosUpcomingList
     */
    readonly sortby?: VideosUpcomingListSortbyEnum;
    /**
     * Multiple values may be separated by commas.
     * @type {Array<string>}
     * @memberof VideosApiVideosUpcomingList
     */
    readonly topic?: Array<string>;
}
/**
 * VideosApi - object-oriented interface
 * @export
 * @class VideosApi
 * @extends {BaseAPI}
 */
export declare class VideosApi extends BaseAPI {
    /**
     * Get a paginated list of videos
     * @summary List
     * @param {VideosApiVideosListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VideosApi
     */
    videosList(requestParameters?: VideosApiVideosListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedVideoResourceList, any>>;
    /**
     * Get a paginated list of newly released Videos.
     * @summary List New
     * @param {VideosApiVideosNewListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VideosApi
     */
    videosNewList(requestParameters?: VideosApiVideosNewListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedVideoResourceList, any>>;
    /**
     * Retrieve a single video
     * @summary Retrieve
     * @param {VideosApiVideosRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VideosApi
     */
    videosRetrieve(requestParameters: VideosApiVideosRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<VideoResource, any>>;
    /**
     * Get a paginated list of upcoming Videos.
     * @summary List Upcoming
     * @param {VideosApiVideosUpcomingListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VideosApi
     */
    videosUpcomingList(requestParameters?: VideosApiVideosUpcomingListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedVideoResourceList, any>>;
}
/**
 * @export
 */
export declare const VideosListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type VideosListDepartmentEnum = typeof VideosListDepartmentEnum[keyof typeof VideosListDepartmentEnum];
/**
 * @export
 */
export declare const VideosListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type VideosListLevelEnum = typeof VideosListLevelEnum[keyof typeof VideosListLevelEnum];
/**
 * @export
 */
export declare const VideosListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type VideosListOfferedByEnum = typeof VideosListOfferedByEnum[keyof typeof VideosListOfferedByEnum];
/**
 * @export
 */
export declare const VideosListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type VideosListPlatformEnum = typeof VideosListPlatformEnum[keyof typeof VideosListPlatformEnum];
/**
 * @export
 */
export declare const VideosListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type VideosListResourceTypeEnum = typeof VideosListResourceTypeEnum[keyof typeof VideosListResourceTypeEnum];
/**
 * @export
 */
export declare const VideosListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type VideosListSortbyEnum = typeof VideosListSortbyEnum[keyof typeof VideosListSortbyEnum];
/**
 * @export
 */
export declare const VideosNewListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type VideosNewListDepartmentEnum = typeof VideosNewListDepartmentEnum[keyof typeof VideosNewListDepartmentEnum];
/**
 * @export
 */
export declare const VideosNewListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type VideosNewListLevelEnum = typeof VideosNewListLevelEnum[keyof typeof VideosNewListLevelEnum];
/**
 * @export
 */
export declare const VideosNewListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type VideosNewListOfferedByEnum = typeof VideosNewListOfferedByEnum[keyof typeof VideosNewListOfferedByEnum];
/**
 * @export
 */
export declare const VideosNewListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type VideosNewListPlatformEnum = typeof VideosNewListPlatformEnum[keyof typeof VideosNewListPlatformEnum];
/**
 * @export
 */
export declare const VideosNewListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type VideosNewListResourceTypeEnum = typeof VideosNewListResourceTypeEnum[keyof typeof VideosNewListResourceTypeEnum];
/**
 * @export
 */
export declare const VideosNewListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type VideosNewListSortbyEnum = typeof VideosNewListSortbyEnum[keyof typeof VideosNewListSortbyEnum];
/**
 * @export
 */
export declare const VideosUpcomingListDepartmentEnum: {
    readonly _1: "1";
    readonly _10: "10";
    readonly _11: "11";
    readonly _12: "12";
    readonly _14: "14";
    readonly _15: "15";
    readonly _16: "16";
    readonly _17: "17";
    readonly _18: "18";
    readonly _2: "2";
    readonly _20: "20";
    readonly _21A: "21A";
    readonly _21G: "21G";
    readonly _21H: "21H";
    readonly _21L: "21L";
    readonly _21M: "21M";
    readonly _22: "22";
    readonly _24: "24";
    readonly _3: "3";
    readonly _4: "4";
    readonly _5: "5";
    readonly _6: "6";
    readonly _7: "7";
    readonly _8: "8";
    readonly _9: "9";
    readonly Cc: "CC";
    readonly CmsW: "CMS-W";
    readonly Ec: "EC";
    readonly Es: "ES";
    readonly Esd: "ESD";
    readonly Hst: "HST";
    readonly Ids: "IDS";
    readonly Mas: "MAS";
    readonly Pe: "PE";
    readonly Res: "RES";
    readonly Sts: "STS";
    readonly Wgs: "WGS";
};
export type VideosUpcomingListDepartmentEnum = typeof VideosUpcomingListDepartmentEnum[keyof typeof VideosUpcomingListDepartmentEnum];
/**
 * @export
 */
export declare const VideosUpcomingListLevelEnum: {
    readonly Advanced: "advanced";
    readonly Graduate: "graduate";
    readonly HighSchool: "high_school";
    readonly Intermediate: "intermediate";
    readonly Introductory: "introductory";
    readonly Noncredit: "noncredit";
    readonly Undergraduate: "undergraduate";
};
export type VideosUpcomingListLevelEnum = typeof VideosUpcomingListLevelEnum[keyof typeof VideosUpcomingListLevelEnum];
/**
 * @export
 */
export declare const VideosUpcomingListOfferedByEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Mitpe: "mitpe";
    readonly Mitx: "mitx";
    readonly Ocw: "ocw";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Xpro: "xpro";
};
export type VideosUpcomingListOfferedByEnum = typeof VideosUpcomingListOfferedByEnum[keyof typeof VideosUpcomingListOfferedByEnum];
/**
 * @export
 */
export declare const VideosUpcomingListPlatformEnum: {
    readonly Bootcamps: "bootcamps";
    readonly Csail: "csail";
    readonly Ctl: "ctl";
    readonly Edx: "edx";
    readonly Emeritus: "emeritus";
    readonly Globalalumni: "globalalumni";
    readonly Mitpe: "mitpe";
    readonly Mitxonline: "mitxonline";
    readonly Ocw: "ocw";
    readonly Oll: "oll";
    readonly Podcast: "podcast";
    readonly Scc: "scc";
    readonly See: "see";
    readonly Simplilearn: "simplilearn";
    readonly Susskind: "susskind";
    readonly Whu: "whu";
    readonly Xpro: "xpro";
    readonly Youtube: "youtube";
};
export type VideosUpcomingListPlatformEnum = typeof VideosUpcomingListPlatformEnum[keyof typeof VideosUpcomingListPlatformEnum];
/**
 * @export
 */
export declare const VideosUpcomingListResourceTypeEnum: {
    readonly Course: "course";
    readonly LearningPath: "learning_path";
    readonly Podcast: "podcast";
    readonly PodcastEpisode: "podcast_episode";
    readonly Program: "program";
    readonly Video: "video";
    readonly VideoPlaylist: "video_playlist";
};
export type VideosUpcomingListResourceTypeEnum = typeof VideosUpcomingListResourceTypeEnum[keyof typeof VideosUpcomingListResourceTypeEnum];
/**
 * @export
 */
export declare const VideosUpcomingListSortbyEnum: {
    readonly CreatedOn: "-created_on";
    readonly Id: "-id";
    readonly LastModified: "-last_modified";
    readonly Mitcoursenumber: "-mitcoursenumber";
    readonly ReadableId: "-readable_id";
    readonly StartDate: "-start_date";
    readonly CreatedOn2: "created_on";
    readonly Id2: "id";
    readonly LastModified2: "last_modified";
    readonly Mitcoursenumber2: "mitcoursenumber";
    readonly ReadableId2: "readable_id";
    readonly StartDate2: "start_date";
};
export type VideosUpcomingListSortbyEnum = typeof VideosUpcomingListSortbyEnum[keyof typeof VideosUpcomingListSortbyEnum];
//# sourceMappingURL=api.d.ts.map