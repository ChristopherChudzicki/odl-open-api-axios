/**
 * MIT Open API
 * MIT public API
 *
 * The version of the OpenAPI document: 0.0.1 (v0)
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 * Serializer for FieldChannel
 * @export
 * @interface FieldChannel
 */
export interface FieldChannel {
    /**
     *
     * @type {string}
     * @memberof FieldChannel
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof FieldChannel
     */
    'title': string;
    /**
     *
     * @type {any}
     * @memberof FieldChannel
     */
    'about': any | null;
    /**
     *
     * @type {string}
     * @memberof FieldChannel
     */
    'public_description': string;
    /**
     *
     * @type {Array<Subfield>}
     * @memberof FieldChannel
     */
    'subfields': Array<Subfield>;
    /**
     *
     * @type {FieldChannelFeaturedList}
     * @memberof FieldChannel
     */
    'featured_list': FieldChannelFeaturedList;
    /**
     *
     * @type {Array<LearningPathPreview>}
     * @memberof FieldChannel
     */
    'lists': Array<LearningPathPreview>;
    /**
     * Get the avatar image URL
     * @type {string}
     * @memberof FieldChannel
     */
    'avatar'?: string;
    /**
     * Get the avatar image medium URL
     * @type {string}
     * @memberof FieldChannel
     */
    'avatar_medium': string;
    /**
     * Get the avatar image small URL
     * @type {string}
     * @memberof FieldChannel
     */
    'avatar_small': string;
    /**
     * Get the banner image URL
     * @type {string}
     * @memberof FieldChannel
     */
    'banner'?: string;
    /**
     *
     * @type {number}
     * @memberof FieldChannel
     */
    'widget_list': number | null;
    /**
     *
     * @type {string}
     * @memberof FieldChannel
     */
    'updated_on': string;
    /**
     *
     * @type {string}
     * @memberof FieldChannel
     */
    'created_on': string;
    /**
     *
     * @type {number}
     * @memberof FieldChannel
     */
    'id': number;
    /**
     *
     * @type {string}
     * @memberof FieldChannel
     */
    'ga_tracking_id': string;
    /**
     * Return true if user is a moderator for the channel
     * @type {boolean}
     * @memberof FieldChannel
     */
    'is_moderator': boolean;
}
/**
 * Write serializer for FieldChannel. Uses primary keys for referenced objects during requests, and delegates to FieldChannelSerializer for responses.
 * @export
 * @interface FieldChannelCreateRequest
 */
export interface FieldChannelCreateRequest {
    /**
     *
     * @type {string}
     * @memberof FieldChannelCreateRequest
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof FieldChannelCreateRequest
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof FieldChannelCreateRequest
     */
    'public_description'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof FieldChannelCreateRequest
     */
    'subfields'?: Array<string>;
    /**
     * Learng path featured in this field.
     * @type {number}
     * @memberof FieldChannelCreateRequest
     */
    'featured_list'?: number | null;
    /**
     * Learng paths in this field.
     * @type {Array<number>}
     * @memberof FieldChannelCreateRequest
     */
    'lists'?: Array<number>;
    /**
     *
     * @type {File}
     * @memberof FieldChannelCreateRequest
     */
    'avatar'?: File | null;
    /**
     *
     * @type {File}
     * @memberof FieldChannelCreateRequest
     */
    'banner'?: File | null;
    /**
     *
     * @type {any}
     * @memberof FieldChannelCreateRequest
     */
    'about'?: any | null;
}
/**
 * Learning path featured in this field.
 * @export
 * @interface FieldChannelFeaturedList
 */
export interface FieldChannelFeaturedList {
    /**
     *
     * @type {string}
     * @memberof FieldChannelFeaturedList
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof FieldChannelFeaturedList
     */
    'url'?: string | null;
    /**
     *
     * @type {number}
     * @memberof FieldChannelFeaturedList
     */
    'id': number;
}
/**
 * Serializer for moderators
 * @export
 * @interface FieldModerator
 */
export interface FieldModerator {
    /**
     * Returns the name for the moderator
     * @type {string}
     * @memberof FieldModerator
     */
    'moderator_name'?: string;
    /**
     * Get the email from the associated user
     * @type {string}
     * @memberof FieldModerator
     */
    'email'?: string;
    /**
     * Get the full name of the associated user
     * @type {string}
     * @memberof FieldModerator
     */
    'full_name': string;
}
/**
 * Serializer for moderators
 * @export
 * @interface FieldModeratorRequest
 */
export interface FieldModeratorRequest {
    /**
     * Returns the name for the moderator
     * @type {string}
     * @memberof FieldModeratorRequest
     */
    'moderator_name'?: string;
    /**
     * Get the email from the associated user
     * @type {string}
     * @memberof FieldModeratorRequest
     */
    'email'?: string;
}
/**
 * Serializer for a minimal preview of Learning Paths
 * @export
 * @interface LearningPathPreview
 */
export interface LearningPathPreview {
    /**
     *
     * @type {string}
     * @memberof LearningPathPreview
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof LearningPathPreview
     */
    'url'?: string | null;
    /**
     *
     * @type {number}
     * @memberof LearningPathPreview
     */
    'id': number;
}
/**
 *
 * @export
 * @interface PaginatedFieldChannelList
 */
export interface PaginatedFieldChannelList {
    /**
     *
     * @type {number}
     * @memberof PaginatedFieldChannelList
     */
    'count'?: number;
    /**
     *
     * @type {string}
     * @memberof PaginatedFieldChannelList
     */
    'next'?: string | null;
    /**
     *
     * @type {string}
     * @memberof PaginatedFieldChannelList
     */
    'previous'?: string | null;
    /**
     *
     * @type {Array<FieldChannel>}
     * @memberof PaginatedFieldChannelList
     */
    'results'?: Array<FieldChannel>;
}
/**
 * Similar to FieldChannelCreateSerializer, with read-only name
 * @export
 * @interface PatchedFieldChannelWriteRequest
 */
export interface PatchedFieldChannelWriteRequest {
    /**
     *
     * @type {string}
     * @memberof PatchedFieldChannelWriteRequest
     */
    'title'?: string;
    /**
     *
     * @type {string}
     * @memberof PatchedFieldChannelWriteRequest
     */
    'public_description'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof PatchedFieldChannelWriteRequest
     */
    'subfields'?: Array<string>;
    /**
     * Learng path featured in this field.
     * @type {number}
     * @memberof PatchedFieldChannelWriteRequest
     */
    'featured_list'?: number | null;
    /**
     * Learng paths in this field.
     * @type {Array<number>}
     * @memberof PatchedFieldChannelWriteRequest
     */
    'lists'?: Array<number>;
    /**
     * Get the avatar image URL
     * @type {string}
     * @memberof PatchedFieldChannelWriteRequest
     */
    'avatar'?: string;
    /**
     * Get the banner image URL
     * @type {string}
     * @memberof PatchedFieldChannelWriteRequest
     */
    'banner'?: string;
    /**
     *
     * @type {any}
     * @memberof PatchedFieldChannelWriteRequest
     */
    'about'?: any | null;
}
/**
 * Serializer for Profile
 * @export
 * @interface Profile
 */
export interface Profile {
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'image'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'image_small'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'image_medium'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'image_file'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'image_small_file'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'image_medium_file'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'profile_image_small': string;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'profile_image_medium': string;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'bio'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'headline'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'username': string;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    'placename': string;
}
/**
 * Serializer for Subfields
 * @export
 * @interface Subfield
 */
export interface Subfield {
    /**
     *
     * @type {string}
     * @memberof Subfield
     */
    'parent_field': string;
    /**
     *
     * @type {string}
     * @memberof Subfield
     */
    'field_channel': string;
    /**
     *
     * @type {number}
     * @memberof Subfield
     */
    'position'?: number;
}
/**
 * Serializer for User
 * @export
 * @interface User
 */
export interface User {
    /**
     *
     * @type {number}
     * @memberof User
     */
    'id': number;
    /**
     *
     * @type {string}
     * @memberof User
     */
    'username': string;
    /**
     *
     * @type {Profile}
     * @memberof User
     */
    'profile': Profile;
}
/**
 * CkeditorApi - axios parameter creator
 * @export
 */
export declare const CkeditorApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get the JWT to authenticate for CKEditor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ckeditorRetrieve: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CkeditorApi - functional programming interface
 * @export
 */
export declare const CkeditorApiFp: (configuration?: Configuration) => {
    /**
     * Get the JWT to authenticate for CKEditor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ckeditorRetrieve(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * CkeditorApi - factory interface
 * @export
 */
export declare const CkeditorApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get the JWT to authenticate for CKEditor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    ckeditorRetrieve(options?: RawAxiosRequestConfig): AxiosPromise<void>;
};
/**
 * CkeditorApi - object-oriented interface
 * @export
 * @class CkeditorApi
 * @extends {BaseAPI}
 */
export declare class CkeditorApi extends BaseAPI {
    /**
     * Get the JWT to authenticate for CKEditor
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CkeditorApi
     */
    ckeditorRetrieve(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * FieldsApi - axios parameter creator
 * @export
 */
export declare const FieldsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Create
     * @param {FieldChannelCreateRequest} FieldChannelCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsCreate: (FieldChannelCreateRequest: FieldChannelCreateRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Destroy
     * @param {string} field_name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsDestroy: (field_name: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsList: (limit?: number, offset?: number, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * View for listing and adding moderators
     * @summary Field Moderators Create
     * @param {string} field_name
     * @param {FieldModeratorRequest} [FieldModeratorRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsModeratorsCreate: (field_name: string, FieldModeratorRequest?: FieldModeratorRequest | undefined, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove the user from the moderator groups for this website
     * @summary Field Moderators Destroy
     * @param {string} field_name
     * @param {string} moderator_name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsModeratorsDestroy: (field_name: string, moderator_name: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * View for listing and adding moderators
     * @summary Field Moderators List
     * @param {string} field_name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsModeratorsList: (field_name: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Update
     * @param {string} field_name
     * @param {PatchedFieldChannelWriteRequest} [PatchedFieldChannelWriteRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsPartialUpdate: (field_name: string, PatchedFieldChannelWriteRequest?: PatchedFieldChannelWriteRequest | undefined, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Retrieve
     * @param {string} field_name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsRetrieve: (field_name: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FieldsApi - functional programming interface
 * @export
 */
export declare const FieldsApiFp: (configuration?: Configuration) => {
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Create
     * @param {FieldChannelCreateRequest} FieldChannelCreateRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsCreate(FieldChannelCreateRequest: FieldChannelCreateRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FieldChannel>>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Destroy
     * @param {string} field_name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsDestroy(field_name: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary List
     * @param {number} [limit] Number of results to return per page.
     * @param {number} [offset] The initial index from which to return the results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsList(limit?: number, offset?: number, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PaginatedFieldChannelList>>;
    /**
     * View for listing and adding moderators
     * @summary Field Moderators Create
     * @param {string} field_name
     * @param {FieldModeratorRequest} [FieldModeratorRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsModeratorsCreate(field_name: string, FieldModeratorRequest?: FieldModeratorRequest | undefined, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FieldModerator>>;
    /**
     * Remove the user from the moderator groups for this website
     * @summary Field Moderators Destroy
     * @param {string} field_name
     * @param {string} moderator_name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsModeratorsDestroy(field_name: string, moderator_name: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * View for listing and adding moderators
     * @summary Field Moderators List
     * @param {string} field_name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsModeratorsList(field_name: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<FieldModerator>>>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Update
     * @param {string} field_name
     * @param {PatchedFieldChannelWriteRequest} [PatchedFieldChannelWriteRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsPartialUpdate(field_name: string, PatchedFieldChannelWriteRequest?: PatchedFieldChannelWriteRequest | undefined, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FieldChannel>>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Retrieve
     * @param {string} field_name
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsRetrieve(field_name: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FieldChannel>>;
};
/**
 * FieldsApi - factory interface
 * @export
 */
export declare const FieldsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Create
     * @param {FieldsApiFieldsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsCreate(requestParameters: FieldsApiFieldsCreateRequest, options?: RawAxiosRequestConfig): AxiosPromise<FieldChannel>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Destroy
     * @param {FieldsApiFieldsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsDestroy(requestParameters: FieldsApiFieldsDestroyRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary List
     * @param {FieldsApiFieldsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsList(requestParameters?: FieldsApiFieldsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<PaginatedFieldChannelList>;
    /**
     * View for listing and adding moderators
     * @summary Field Moderators Create
     * @param {FieldsApiFieldsModeratorsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsModeratorsCreate(requestParameters: FieldsApiFieldsModeratorsCreateRequest, options?: RawAxiosRequestConfig): AxiosPromise<FieldModerator>;
    /**
     * Remove the user from the moderator groups for this website
     * @summary Field Moderators Destroy
     * @param {FieldsApiFieldsModeratorsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsModeratorsDestroy(requestParameters: FieldsApiFieldsModeratorsDestroyRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * View for listing and adding moderators
     * @summary Field Moderators List
     * @param {FieldsApiFieldsModeratorsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsModeratorsList(requestParameters: FieldsApiFieldsModeratorsListRequest, options?: RawAxiosRequestConfig): AxiosPromise<Array<FieldModerator>>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Update
     * @param {FieldsApiFieldsPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsPartialUpdate(requestParameters: FieldsApiFieldsPartialUpdateRequest, options?: RawAxiosRequestConfig): AxiosPromise<FieldChannel>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Retrieve
     * @param {FieldsApiFieldsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fieldsRetrieve(requestParameters: FieldsApiFieldsRetrieveRequest, options?: RawAxiosRequestConfig): AxiosPromise<FieldChannel>;
};
/**
 * Request parameters for fieldsCreate operation in FieldsApi.
 * @export
 * @interface FieldsApiFieldsCreateRequest
 */
export interface FieldsApiFieldsCreateRequest {
    /**
     *
     * @type {FieldChannelCreateRequest}
     * @memberof FieldsApiFieldsCreate
     */
    readonly FieldChannelCreateRequest: FieldChannelCreateRequest;
}
/**
 * Request parameters for fieldsDestroy operation in FieldsApi.
 * @export
 * @interface FieldsApiFieldsDestroyRequest
 */
export interface FieldsApiFieldsDestroyRequest {
    /**
     *
     * @type {string}
     * @memberof FieldsApiFieldsDestroy
     */
    readonly field_name: string;
}
/**
 * Request parameters for fieldsList operation in FieldsApi.
 * @export
 * @interface FieldsApiFieldsListRequest
 */
export interface FieldsApiFieldsListRequest {
    /**
     * Number of results to return per page.
     * @type {number}
     * @memberof FieldsApiFieldsList
     */
    readonly limit?: number;
    /**
     * The initial index from which to return the results.
     * @type {number}
     * @memberof FieldsApiFieldsList
     */
    readonly offset?: number;
}
/**
 * Request parameters for fieldsModeratorsCreate operation in FieldsApi.
 * @export
 * @interface FieldsApiFieldsModeratorsCreateRequest
 */
export interface FieldsApiFieldsModeratorsCreateRequest {
    /**
     *
     * @type {string}
     * @memberof FieldsApiFieldsModeratorsCreate
     */
    readonly field_name: string;
    /**
     *
     * @type {FieldModeratorRequest}
     * @memberof FieldsApiFieldsModeratorsCreate
     */
    readonly FieldModeratorRequest?: FieldModeratorRequest;
}
/**
 * Request parameters for fieldsModeratorsDestroy operation in FieldsApi.
 * @export
 * @interface FieldsApiFieldsModeratorsDestroyRequest
 */
export interface FieldsApiFieldsModeratorsDestroyRequest {
    /**
     *
     * @type {string}
     * @memberof FieldsApiFieldsModeratorsDestroy
     */
    readonly field_name: string;
    /**
     *
     * @type {string}
     * @memberof FieldsApiFieldsModeratorsDestroy
     */
    readonly moderator_name: string;
}
/**
 * Request parameters for fieldsModeratorsList operation in FieldsApi.
 * @export
 * @interface FieldsApiFieldsModeratorsListRequest
 */
export interface FieldsApiFieldsModeratorsListRequest {
    /**
     *
     * @type {string}
     * @memberof FieldsApiFieldsModeratorsList
     */
    readonly field_name: string;
}
/**
 * Request parameters for fieldsPartialUpdate operation in FieldsApi.
 * @export
 * @interface FieldsApiFieldsPartialUpdateRequest
 */
export interface FieldsApiFieldsPartialUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof FieldsApiFieldsPartialUpdate
     */
    readonly field_name: string;
    /**
     *
     * @type {PatchedFieldChannelWriteRequest}
     * @memberof FieldsApiFieldsPartialUpdate
     */
    readonly PatchedFieldChannelWriteRequest?: PatchedFieldChannelWriteRequest;
}
/**
 * Request parameters for fieldsRetrieve operation in FieldsApi.
 * @export
 * @interface FieldsApiFieldsRetrieveRequest
 */
export interface FieldsApiFieldsRetrieveRequest {
    /**
     *
     * @type {string}
     * @memberof FieldsApiFieldsRetrieve
     */
    readonly field_name: string;
}
/**
 * FieldsApi - object-oriented interface
 * @export
 * @class FieldsApi
 * @extends {BaseAPI}
 */
export declare class FieldsApi extends BaseAPI {
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Create
     * @param {FieldsApiFieldsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FieldsApi
     */
    fieldsCreate(requestParameters: FieldsApiFieldsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FieldChannel, any>>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Destroy
     * @param {FieldsApiFieldsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FieldsApi
     */
    fieldsDestroy(requestParameters: FieldsApiFieldsDestroyRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary List
     * @param {FieldsApiFieldsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FieldsApi
     */
    fieldsList(requestParameters?: FieldsApiFieldsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PaginatedFieldChannelList, any>>;
    /**
     * View for listing and adding moderators
     * @summary Field Moderators Create
     * @param {FieldsApiFieldsModeratorsCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FieldsApi
     */
    fieldsModeratorsCreate(requestParameters: FieldsApiFieldsModeratorsCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FieldModerator, any>>;
    /**
     * Remove the user from the moderator groups for this website
     * @summary Field Moderators Destroy
     * @param {FieldsApiFieldsModeratorsDestroyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FieldsApi
     */
    fieldsModeratorsDestroy(requestParameters: FieldsApiFieldsModeratorsDestroyRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * View for listing and adding moderators
     * @summary Field Moderators List
     * @param {FieldsApiFieldsModeratorsListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FieldsApi
     */
    fieldsModeratorsList(requestParameters: FieldsApiFieldsModeratorsListRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FieldModerator[], any>>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Update
     * @param {FieldsApiFieldsPartialUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FieldsApi
     */
    fieldsPartialUpdate(requestParameters: FieldsApiFieldsPartialUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FieldChannel, any>>;
    /**
     * CRUD Operations related to Fields. Fields may represent groups or organizations at MIT and are a high-level categorization of content.
     * @summary Retrieve
     * @param {FieldsApiFieldsRetrieveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FieldsApi
     */
    fieldsRetrieve(requestParameters: FieldsApiFieldsRetrieveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FieldChannel, any>>;
}
/**
 * UsersApi - axios parameter creator
 * @export
 */
export declare const UsersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * User retrieve and update viewsets for the current user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    usersMeRetrieve: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * UsersApi - functional programming interface
 * @export
 */
export declare const UsersApiFp: (configuration?: Configuration) => {
    /**
     * User retrieve and update viewsets for the current user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    usersMeRetrieve(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<User>>;
};
/**
 * UsersApi - factory interface
 * @export
 */
export declare const UsersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * User retrieve and update viewsets for the current user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    usersMeRetrieve(options?: RawAxiosRequestConfig): AxiosPromise<User>;
};
/**
 * UsersApi - object-oriented interface
 * @export
 * @class UsersApi
 * @extends {BaseAPI}
 */
export declare class UsersApi extends BaseAPI {
    /**
     * User retrieve and update viewsets for the current user
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    usersMeRetrieve(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<User, any>>;
}
//# sourceMappingURL=api.d.ts.map